<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook source-build='2021.4.4 (20214.22.0213.1102)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='results (benchmark)' inline='true' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='googleapis.com/bigquery' name='bigquery.1c3c1y61vwzg4j10jdni607hc3nl'>
            <connection CATALOG='benchmark-251817' EXECCATALOG='benchmark-251817' REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/cloudplatformprojects.readonly' authentication='yes' bq-fetch-rows='' bq-fetch-tasks='' bq-large-fetch-rows='' bq-response-rows='' class='bigquery' connection-dialect='google-sql' project='Benchmark' schema='benchmark' server='googleapis.com/bigquery' server-oauth='' username='dave@atscale.com' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='bigquery.1c3c1y61vwzg4j10jdni607hc3nl' name='benchmark_results_parsed_with_costs' table='[benchmark-251817.benchmark].[benchmark_results_parsed_with_costs]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='bigquery.1c3c1y61vwzg4j10jdni607hc3nl' name='benchmark_results_parsed_with_costs' table='[benchmark-251817.benchmark].[benchmark_results_parsed_with_costs]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>run_label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_label]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>run_label</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>query</remote-name>
            <remote-type>130</remote-type>
            <local-name>[query]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>query</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>platform</remote-name>
            <remote-type>130</remote-type>
            <local-name>[platform]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>platform</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>threads</remote-name>
            <remote-type>130</remote-type>
            <local-name>[threads]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>threads</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loops</remote-name>
            <remote-type>130</remote-type>
            <local-name>[loops]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>loops</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iteration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iteration]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>iteration</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeStamp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[timeStamp]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>timeStamp</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elapsed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[elapsed]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>elapsed</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[label]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>label</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>responseCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[responseCode]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>responseCode</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>responseMessage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[responseMessage]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>responseMessage</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>threadName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[threadName]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>threadName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dataType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[dataType]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>dataType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>success</remote-name>
            <remote-type>11</remote-type>
            <local-name>[success]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>success</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>failureMessage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[failureMessage]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>failureMessage</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bytes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bytes]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>bytes</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentBytes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sentBytes]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>sentBytes</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grpThreads</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grpThreads]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>grpThreads</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>allThreads</remote-name>
            <remote-type>20</remote-type>
            <local-name>[allThreads]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>allThreads</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[URL]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>URL</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latency</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Latency]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>Latency</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IdleTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IdleTime]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>IdleTime</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Connect</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Connect]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>Connect</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pricing_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pricing_type]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>pricing_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[run_cost]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>run_cost</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>agg_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[agg_cost]</local-name>
            <parent-name>[benchmark_results_parsed_with_costs]</parent-name>
            <remote-alias>agg_cost</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='With BI Engine' datatype='string' name='[Calculation_1291266495509491712]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE Contains([run_label] ,&quot;.BIEngine&quot;) WHEN TRUE THEN &quot;With BI Engine&quot;&#10;ELSE&#10;&quot;Without BI Engine&quot;&#10;END' />
      </column>
      <column caption='Cost' datatype='real' default-format='C1033%' name='[Calculation_403846255809503232]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(run_cost)+max([agg_cost])' />
      </column>
      <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
      </column>
      <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
        <aliases>
          <alias key='false' value='No AtScale' />
          <alias key='true' value='AtScale' />
        </aliases>
      </column>
      <column aggregation='Avg' caption='Elapsed Time (Seconds)' datatype='real' name='[Calculation_4334785038098608128]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[elapsed]/1000' />
      </column>
      <column caption='Query (Short Name)' datatype='string' name='[Calculation_4334785040128815105]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='trim(RIGHT([query], 2))' />
      </column>
      <column caption='Avg Query Time (Seconds)' datatype='real' name='[Calculation_774337728119357440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_4334785038098608128])/COUNT([Calculation_4334785040128815105])' />
      </column>
      <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
      </column>
      <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
      </column>
      <column caption='Cost for Query Only' datatype='real' default-format='C1033%' name='[Cost (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(run_cost)' />
      </column>
      <column caption='Total Run Time (Minutes)' datatype='real' name='[Elapsed Time (Seconds) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[elapsed]/1000/60' />
      </column>
      <column caption='Idle Time' datatype='integer' name='[IdleTime]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='All Threads' datatype='integer' name='[allThreads]' role='measure' type='quantitative' />
      <column caption='Bytes' datatype='integer' name='[bytes]' role='measure' type='quantitative' />
      <column caption='Data Type' datatype='string' name='[dataType]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Elapsed' datatype='integer' default-format='N' name='[elapsed]' role='measure' type='quantitative' />
      <column caption='Failure Message' datatype='string' name='[failureMessage]' role='dimension' type='nominal' />
      <column caption='Grp Threads' datatype='integer' name='[grpThreads]' role='measure' type='quantitative' />
      <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
      <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
      <column caption='Pricing Type' datatype='string' name='[pricing_type]' role='dimension' type='nominal' />
      <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
      <column caption='Response Code' datatype='string' name='[responseCode]' role='dimension' type='nominal' />
      <column caption='Response Message' datatype='string' name='[responseMessage]' role='dimension' type='nominal' />
      <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
      <column caption='Sent Bytes' datatype='integer' name='[sentBytes]' role='measure' type='quantitative' />
      <column caption='Success' datatype='boolean' name='[success]' role='dimension' type='nominal' />
      <column caption='Thread Name' datatype='string' name='[threadName]' role='dimension' type='nominal' />
      <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
      <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1291266495509491712]' derivation='None' name='[none:Calculation_1291266495509491712:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4334785040128815105]' derivation='None' name='[none:Calculation_4334785040128815105:nk]' pivot='key' type='nominal' />
      <column-instance column='[platform]' derivation='None' name='[none:platform:nk]' pivot='key' type='nominal' />
      <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
      <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_4334785040128815105:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;46&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;53&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;48&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;88&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;96&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;66&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;33&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;55&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;56&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;60&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;71&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;98&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;50&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;42&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;13&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;61&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;52&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;15&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:threads:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;100&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;50&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:platform:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AtScale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AtScale.Snowflake&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BigQuery&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;AtScale.BigQuery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>%all%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Redshift&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;AtScale.Redshift&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Snowflake&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:run_label:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AtScaleBenchmarkOnBigQuery201909&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BigQuery.2019Q3&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;SnowflakeBenchmark&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;AtScale.Redshift.2019Q3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SnowFlake.2019Q3.3XL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reshift.2019Q3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RedshiftBenchmark20190905&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SnowFlake.2019Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AtScaleBenchmarkOnSnowflake201909&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;AtScale.BigQuery.2019Q3&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_403846256940376078:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BigQuery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Databricks&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Synapse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Snowflake&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redshift&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1291266495509491712:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Without BI Engine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;With BI Engine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_403846256941109264:nk]' type='palette'>
            <map to='#499894'>
              <bucket>true</bucket>
            </map>
            <map to='#edc948'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='bigquery.1c3c1y61vwzg4j10jdni607hc3nl' name='benchmark_results_parsed_with_costs' table='[benchmark-251817.benchmark].[benchmark_results_parsed_with_costs]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Avg Query Time by Query (Seconds) - All Runs'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'>&lt;Sheet Name&gt; - &lt;</run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column aggregation='Avg' caption='Elapsed Time (Seconds)' datatype='real' name='[Calculation_4334785038098608128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[elapsed]/1000' />
            </column>
            <column caption='Query (Short Name)' datatype='string' name='[Calculation_4334785040128815105]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='trim(RIGHT([query], 2))' />
            </column>
            <column-instance column='[Calculation_4334785038098608128]' derivation='Avg' name='[avg:Calculation_4334785038098608128:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Elapsed' datatype='integer' default-format='N' name='[elapsed]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4334785040128815105]' derivation='None' name='[none:Calculation_4334785040128815105:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Databricks&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Databricks.SQL.3XL.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Reshift.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2019Q3.3XL&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2019Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[avg:Calculation_4334785038098608128:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_4334785040128815105:nk]' value='36' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='background-color' scope='rows' value='#e6e6e6' />
            <format attr='text-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='rows' value='top' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <reference-line axis-column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[avg:Calculation_4334785038098608128:qk]' enable-instant-analytics='true' formula='median' id='refline0' label='&lt;Computation&gt; = &lt;Value&gt; seconds' label-type='custom' probability='95' scope='per-pane' value-column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[avg:Calculation_4334785038098608128:qk]' z-order='1' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk] * [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[avg:Calculation_4334785038098608128:qk])</rows>
        <cols>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_4334785040128815105:nk]</cols>
      </table>
      <simple-id uuid='{C4B1D8F4-2530-4A16-895A-C08AE6B0DA0E}' />
    </worksheet>
    <worksheet name='Avg Query Time by Query (Seconds) - All Runs - Cache vs No Cache'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'>&lt;Sheet Name&gt; - &lt;</run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column aggregation='Avg' caption='Elapsed Time (Seconds)' datatype='real' name='[Calculation_4334785038098608128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[elapsed]/1000' />
            </column>
            <column caption='Query (Short Name)' datatype='string' name='[Calculation_4334785040128815105]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='trim(RIGHT([query], 2))' />
            </column>
            <column-instance column='[Calculation_4334785038098608128]' derivation='Avg' name='[avg:Calculation_4334785038098608128:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Elapsed' datatype='integer' default-format='N' name='[elapsed]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4334785040128815105]' derivation='None' name='[none:Calculation_4334785040128815105:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Databricks&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.CacheOn.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Reshift.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2019Q3.3XL&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2019Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[avg:Calculation_4334785038098608128:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_4334785040128815105:nk]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='background-color' scope='rows' value='#e6e6e6' />
            <format attr='text-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='rows' value='top' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <reference-line axis-column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[avg:Calculation_4334785038098608128:qk]' enable-instant-analytics='true' formula='median' id='refline0' label='&lt;Computation&gt; = &lt;Value&gt; seconds' label-type='custom' probability='95' scope='per-pane' value-column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[avg:Calculation_4334785038098608128:qk]' z-order='1' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk] * [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[avg:Calculation_4334785038098608128:qk])</rows>
        <cols>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_4334785040128815105:nk]</cols>
      </table>
      <simple-id uuid='{935C98FE-1B8A-4502-A760-D3142CB5B7CF}' />
    </worksheet>
    <worksheet name='BigQuery BI Engine - AtScale'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Run Time (Minutes) - All Runs - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='With BI Engine' datatype='string' name='[Calculation_1291266495509491712]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE Contains([run_label] ,&quot;.BIEngine&quot;) WHEN TRUE THEN &quot;With BI Engine&quot;&#10;ELSE&#10;&quot;Without BI Engine&quot;&#10;END' />
            </column>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_1291266495509491712]' derivation='None' name='[none:Calculation_1291266495509491712:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;BigQuery&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2021Q2.BIEngine&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2021Q2.NoBIEngine&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]' value='354' />
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' value='118' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk])))</cols>
      </table>
      <simple-id uuid='{E9078103-A167-491D-820E-316CA5B7ED6A}' />
    </worksheet>
    <worksheet name='BigQuery BI Engine - Raw'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Run Time (Minutes) - All Runs - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='With BI Engine' datatype='string' name='[Calculation_1291266495509491712]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE Contains([run_label] ,&quot;.BIEngine&quot;) WHEN TRUE THEN &quot;With BI Engine&quot;&#10;ELSE&#10;&quot;Without BI Engine&quot;&#10;END' />
            </column>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_1291266495509491712]' derivation='None' name='[none:Calculation_1291266495509491712:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;BigQuery&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2021Q2.NoBIEngine&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]' value='354' />
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' value='114' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk])))</cols>
      </table>
      <simple-id uuid='{FBC4AC48-38B9-4BB2-B6E4-E45EE4A7F090}' />
    </worksheet>
    <worksheet name='BigQuery BI Engine - Raw Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Run Time (Minutes) - All Runs - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='With BI Engine' datatype='string' name='[Calculation_1291266495509491712]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE Contains([run_label] ,&quot;.BIEngine&quot;) WHEN TRUE THEN &quot;With BI Engine&quot;&#10;ELSE&#10;&quot;Without BI Engine&quot;&#10;END' />
            </column>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_1291266495509491712]' derivation='None' name='[none:Calculation_1291266495509491712:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;BigQuery&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2021Q2.NoBIEngine&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]' value='354' />
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' value='114' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]))</cols>
      </table>
      <simple-id uuid='{F5579BD9-47FE-4D53-9524-88ECF0EC8397}' />
    </worksheet>
    <worksheet name='Compute Cost - All Runs - 1 Vendor'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'>Compute Cost - All Runs - &lt;</run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Cost' datatype='real' default-format='C1033%' name='[Calculation_403846255809503232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(run_cost)+max([agg_cost])' />
            </column>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column datatype='real' name='[agg_cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[pricing_type]' derivation='None' name='[none:pricing_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Pricing Type' datatype='string' name='[pricing_type]' role='dimension' type='nominal' />
            <column datatype='real' name='[run_cost]' role='measure' type='quantitative' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_403846255809503232]' derivation='User' name='[usr:Calculation_403846255809503232:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Databricks&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Consumption Time&quot;' />
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Fixed Pricing-Slots&quot;' />
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;On Demand&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Databricks.SQL.3XL.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2019Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='453' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_403846255809503232:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk])</cols>
      </table>
      <simple-id uuid='{3E9F557F-38F6-46D5-99D6-587A3D3F6EEF}' />
    </worksheet>
    <worksheet name='Compute Cost - All Runs - 1 Vendor Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'>Compute Cost - All Runs - &lt;</run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt; Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Cost' datatype='real' default-format='C1033%' name='[Calculation_403846255809503232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(run_cost)+max([agg_cost])' />
            </column>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column datatype='real' name='[agg_cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[pricing_type]' derivation='None' name='[none:pricing_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Pricing Type' datatype='string' name='[pricing_type]' role='dimension' type='nominal' />
            <column datatype='real' name='[run_cost]' role='measure' type='quantitative' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_403846255809503232]' derivation='User' name='[usr:Calculation_403846255809503232:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;BigQuery&quot;' />
              <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Databricks&quot;' />
              <groupfilter from='&quot;Redshift&quot;' function='range' level='[none:Calculation_403846256940376078:nk]' to='&quot;Synapse&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Consumption Time&quot;' />
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Fixed Pricing-Slots&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.BigQuery.2021Q2.NoBIEngine&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Redshift.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Snowflake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Synapse.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2019Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='453' />
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' value='158' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_403846255809503232:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]))</cols>
      </table>
      <simple-id uuid='{5C1EBA09-8447-4D84-8CFB-8E0304F5BBC1}' />
    </worksheet>
    <worksheet name='Compute Cost - All Runs - All Vendors'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'>Compute Cost - All Runs - All Platforms</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Cost' datatype='real' default-format='C1033%' name='[Calculation_403846255809503232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(run_cost)+max([agg_cost])' />
            </column>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column datatype='real' name='[agg_cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[pricing_type]' derivation='None' name='[none:pricing_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Pricing Type' datatype='string' name='[pricing_type]' role='dimension' type='nominal' />
            <column datatype='real' name='[run_cost]' role='measure' type='quantitative' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_403846255809503232]' derivation='User' name='[usr:Calculation_403846255809503232:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;BigQuery&quot;' />
              <groupfilter from='&quot;Redshift&quot;' function='range' level='[none:Calculation_403846256940376078:nk]' to='&quot;Synapse&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Consumption Time&quot;' />
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Fixed Pricing-Slots&quot;' />
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;On Demand&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.BigQuery.2021Q2.NoBIEngine&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Redshift.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Snowflake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Synapse.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2021Q2.NoBIEngine&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Redshift.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2021Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='115' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_403846255809503232:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk])</cols>
      </table>
      <simple-id uuid='{24B96417-AAFE-4B34-BC60-EC8113C5140A}' />
    </worksheet>
    <worksheet name='Cost - Raw - BQ Fixed Pricing'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Cost' datatype='real' default-format='C1033%' name='[Calculation_403846255809503232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(run_cost)+max([agg_cost])' />
            </column>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column datatype='real' name='[agg_cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[pricing_type]' derivation='None' name='[none:pricing_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Pricing Type' datatype='string' name='[pricing_type]' role='dimension' type='nominal' />
            <column datatype='real' name='[run_cost]' role='measure' type='quantitative' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_403846255809503232]' derivation='User' name='[usr:Calculation_403846255809503232:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256941109264:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Consumption Time&quot;' />
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Fixed Pricing-Slots&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;BigQuery.2019Q3&quot;' function='range' level='[none:run_label:nk]' to='&quot;SnowFlake.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2020Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='202' />
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]' value='135' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_403846255809503232:qk]</rows>
        <cols>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</cols>
      </table>
      <simple-id uuid='{0FBD877C-DF92-438C-8E53-2924AA0D396D}' />
    </worksheet>
    <worksheet name='Cost - Raw - BQ on Demand'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Cost' datatype='real' default-format='C1033%' name='[Calculation_403846255809503232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(run_cost)+max([agg_cost])' />
            </column>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column datatype='real' name='[agg_cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[pricing_type]' derivation='None' name='[none:pricing_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Pricing Type' datatype='string' name='[pricing_type]' role='dimension' type='nominal' />
            <column datatype='real' name='[run_cost]' role='measure' type='quantitative' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_403846255809503232]' derivation='User' name='[usr:Calculation_403846255809503232:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256941109264:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Consumption Time&quot;' />
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;On Demand&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;BigQuery.2019Q3&quot;' function='range' level='[none:run_label:nk]' to='&quot;SnowFlake.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2020Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='202' />
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]' value='135' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_403846255809503232:qk]</rows>
        <cols>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</cols>
      </table>
      <simple-id uuid='{9D28B1A3-8ED0-433E-ACB6-C1F7A2800D24}' />
    </worksheet>
    <worksheet name='Elapsed Run Time (Minutes) - 1 User - 1 Vendor'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Run Time (Minutes) - 1 User - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Databricks&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Databricks.SQL.3XL.2022Q1&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='378' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk])</cols>
      </table>
      <simple-id uuid='{DB2C668D-60B7-4701-A89F-B8E471FFEB8A}' />
    </worksheet>
    <worksheet name='Elapsed Run Time (Minutes) - 1 User - 1 Vendor Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Run Time (Minutes) - 1 User - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt; Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Snowflake&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Snowflake.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Snowflake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2021Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='378' />
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' value='235' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]))</cols>
      </table>
      <simple-id uuid='{004B8009-16BC-440B-9391-E8C0F1E6CA59}' />
    </worksheet>
    <worksheet name='Elapsed Run Time (Minutes) - 1 User - All Vendors'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'>Elapsed Run Time (Minutes) - 1 User - All Platforms</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;BigQuery&quot;' />
              <groupfilter from='&quot;Redshift&quot;' function='range' level='[none:Calculation_403846256940376078:nk]' to='&quot;Synapse&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.BigQuery.2021Q2.NoBIEngine&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Redshift.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Snowflake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Synapse.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2021Q2.NoBIEngine&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Redshift.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2021Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='118' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk])</cols>
      </table>
      <simple-id uuid='{88F97CD5-7DC0-4ACB-9CAF-1F16FB8566FC}' />
    </worksheet>
    <worksheet name='Elapsed Run Time (Minutes) - All Runs - 1 Vendor'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Run Time (Minutes) - All Runs - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Databricks&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Redshift.2021Q3.AWS&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Databricks.SQL.3XL.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Redshift.2021Q3.AWS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='378' />
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' value='495' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk])</cols>
      </table>
      <simple-id uuid='{7A681B24-F14E-45E2-A95F-BE7EB712B0A6}' />
    </worksheet>
    <worksheet name='Elapsed Run Time (Minutes) - All Runs - 1 Vendor Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Run Time (Minutes) - All Runs - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt; Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Databricks&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2020Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Redshift.2021Q3.AWS&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Redshift.2021Q3.AWS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' value='466' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk])))</cols>
      </table>
      <simple-id uuid='{F295DCE4-B0BD-4C2C-9E15-FCA457FF82EC}' />
    </worksheet>
    <worksheet name='Elapsed Run Time (Minutes) - All Runs - 1 Vendor Comparison (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Run Time (Minutes) - All Runs - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt; Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;BigQuery&quot;' />
              <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Databricks&quot;' />
              <groupfilter from='&quot;Redshift&quot;' function='range' level='[none:Calculation_403846256940376078:nk]' to='&quot;Synapse&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.BigQuery.2021Q2.NoBIEngine&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Redshift.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Redshift.2021Q3.AWS&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Snowflake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Synapse.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Redshift.2021Q3.AWS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' value='187' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]))</cols>
      </table>
      <simple-id uuid='{9D049084-1D13-4556-A209-917FB63F40AE}' />
    </worksheet>
    <worksheet name='Elapsed Run Time (Minutes) - All Users - All Vendors (All Platforms)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'>Elapsed Run Time (Minutes) - All Users - All Platforms</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;BigQuery&quot;' />
              <groupfilter from='&quot;Redshift&quot;' function='range' level='[none:Calculation_403846256940376078:nk]' to='&quot;Synapse&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.BigQuery.2021Q2.NoBIEngine&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Redshift.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Snowflake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Synapse.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2021Q2.NoBIEngine&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Redshift.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2021Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='118' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk])</cols>
      </table>
      <simple-id uuid='{CED35248-9D0A-43F9-8F5F-FED01B4260EB}' />
    </worksheet>
    <worksheet name='Elapsed Time (Minutes) by Thread Group - 1 Vendor'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Time (Minutes) by Thread Group - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Databricks&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Databricks.SQL.XLarge.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Databricks.SQL.3XL.2022Q1&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2021Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='112' />
            <format attr='text-format' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
            <format attr='text-orientation' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='-90' />
            <format attr='text-format' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]))</cols>
      </table>
      <simple-id uuid='{8090DB09-DAA9-4584-B25A-E74F50CB13B7}' />
    </worksheet>
    <worksheet name='Elapsed Time (Minutes) by Thread Group - 1 Vendor Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Elapsed Time (Minutes) by Thread Group - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt; Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Snowflake&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Snowflake.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Snowflake.2021Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2021Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='112' />
            <format attr='text-format' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' value='55' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
            <format attr='text-orientation' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' value='0' />
            <format attr='text-format' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-orientation' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk])))</cols>
      </table>
      <simple-id uuid='{4FF607CE-2EA0-4CE3-BAD6-3427093942A1}' />
    </worksheet>
    <worksheet name='Error Messages'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[platform]' derivation='None' name='[none:platform:nk]' pivot='key' type='nominal' />
            <column-instance column='[responseMessage]' derivation='None' name='[none:responseMessage:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[success]' derivation='None' name='[none:success:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Response Message' datatype='string' name='[responseMessage]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Success' datatype='boolean' name='[success]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_403846256940376078:nk]' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:platform:nk]'>
            <groupfilter function='level-members' level='[none:platform:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;BigQuery.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Reshift.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2019Q3.3XL&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:success:nk]'>
            <groupfilter function='member' level='[none:success:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='level-members' level='[none:threads:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:platform:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:success:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' value='104' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:responseMessage:nk]' value='324' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:responseMessage:nk]))</rows>
        <cols total='true' />
      </table>
      <simple-id uuid='{A877C8EF-E620-4395-9494-7D19D878850B}' />
    </worksheet>
    <worksheet name='Performance &amp; Cost by Query'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='24'><![CDATA[Performance & Cost  by Query - All Runs - <]]></run>
            <run fontalignment='1' fontsize='24'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</run>
            <run fontalignment='1' fontsize='24'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column caption='With AtScale' datatype='boolean' name='[Calculation_403846256941109264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN TRUE&#10;WHEN &apos;AtScale.BigQuery&apos; THEN TRUE&#10;WHEN &apos;AtScale.Snowflake&apos; THEN TRUE&#10;WHEN &apos;AtScale.Synapse&apos; THEN TRUE&#10;WHEN &apos;AtScale.Databricks&apos; THEN TRUE&#10;WHEN &apos;AtScale.Iris&apos; THEN TRUE&#10;ELSE&#10;FALSE&#10;END' />
              <aliases>
                <alias key='false' value='No AtScale' />
                <alias key='true' value='AtScale' />
              </aliases>
            </column>
            <column caption='Query (Short Name)' datatype='string' name='[Calculation_4334785040128815105]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='trim(RIGHT([query], 2))' />
            </column>
            <column caption='Start Time' datatype='datetime' datatype-customized='true' name='[Calculation_991073423045619712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MIN(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column caption='Run Time (Minutes)' datatype='real' name='[Calculation_991073423053250561]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if max([threads]) = &quot;1&quot; then&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60/5&#10;else&#10;DATEDIFF(&quot;second&quot;,[Calculation_991073423045619712],[Start Time (copy)])/60&#10;end' />
            </column>
            <column caption='Cost for Query Only' datatype='real' default-format='C1033%' name='[Cost (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(run_cost)' />
            </column>
            <column caption='End Time' datatype='datetime' datatype-customized='true' name='[Start Time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RAWSQLAGG_DATETIME(&quot;MAX(TIMESTAMP_MILLIS(%1))&quot;, [timeStamp])' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_403846256941109264]' derivation='None' name='[none:Calculation_403846256941109264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4334785040128815105]' derivation='None' name='[none:Calculation_4334785040128815105:nk]' pivot='key' type='nominal' />
            <column-instance column='[pricing_type]' derivation='None' name='[none:pricing_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Pricing Type' datatype='string' name='[pricing_type]' role='dimension' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column datatype='real' name='[run_cost]' role='measure' type='quantitative' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
            <column caption='Time Stamp' datatype='integer' name='[timeStamp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_991073423053250561]' derivation='User' name='[usr:Calculation_991073423053250561:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cost (copy)]' derivation='User' name='[usr:Cost (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Cost (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[usr:Calculation_991073423053250561:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='member' level='[none:Calculation_403846256940376078:nk]' member='&quot;Synapse&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;Consumption Time&quot;' />
              <groupfilter function='member' level='[none:pricing_type:nk]' member='&quot;On Demand&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Synapse.2020Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Synapse.2020Q3&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:threads:nk]' member='&quot;1&quot;' />
              <groupfilter from='&quot;25&quot;' function='range' level='[none:threads:nk]' to='&quot;50&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[:Measure Names]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[:Measure Names]' value='160' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_4334785040128815105:nk]' value='164' />
            <format attr='height' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[:Measure Names]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_4334785040128815105:nk]</rows>
        <cols>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk] / ([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{664A3096-15CA-46A3-A030-31B9976741B5}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{020D986A-24BB-46D4-8F57-726263903576}' />
    </worksheet>
    <worksheet name='Success-Failure'>
      <table>
        <view>
          <datasources>
            <datasource caption='results (benchmark)' name='federated.16vc6k41iq0fuz1e6e6lh1qknygd' />
          </datasources>
          <datasource-dependencies datasource='federated.16vc6k41iq0fuz1e6e6lh1qknygd'>
            <column caption='Warehouse' datatype='string' name='[Calculation_403846256940376078]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [platform] &#10;WHEN &apos;AtScale.Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;AtScale.BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;AtScale.Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;AtScale.Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;AtScale.Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;AtScale.Iris&apos; THEN &apos;Iris&apos;&#10;WHEN &apos;Redshift&apos; THEN &apos;Redshift&apos;&#10;WHEN &apos;BigQuery&apos; THEN &apos;BigQuery&apos;&#10;WHEN &apos;Snowflake&apos; THEN &apos;Snowflake&apos;&#10;WHEN &apos;Synapse&apos; THEN &apos;Synapse&apos;&#10;WHEN &apos;Databricks&apos; THEN &apos;Databricks&apos;&#10;WHEN &apos;Iris&apos; THEN &apos;Iris&apos;&#10;ELSE&#10;&apos;Other&apos;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_403846256940376078]' derivation='None' name='[none:Calculation_403846256940376078:nk]' pivot='key' type='nominal' />
            <column-instance column='[run_label]' derivation='None' name='[none:run_label:nk]' pivot='key' type='nominal' />
            <column-instance column='[success]' derivation='None' name='[none:success:nk]' pivot='key' type='nominal' />
            <column-instance column='[threads]' derivation='None' name='[none:threads:nk]' pivot='key' type='nominal' />
            <column caption='Platform' datatype='string' name='[platform]' role='dimension' type='nominal' />
            <column caption='Run  Label' datatype='string' name='[run_label]' role='dimension' type='nominal' />
            <column caption='Success' datatype='boolean' name='[success]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Threads' datatype='string' name='[threads]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_403846256940376078:nk]' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;AtScale.Redshift.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;RedshiftBenchmark20190905&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;Reshift.2019Q3&quot;' />
              <groupfilter function='member' level='[none:run_label:nk]' member='&quot;SnowFlake.2019Q3.3XL&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:success:nk]'>
            <groupfilter function='member' level='[none:success:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]'>
            <groupfilter function='level-members' level='[none:threads:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:success:nk]</column>
            <column>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk] / [federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk])</rows>
        <cols>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{EFC24D55-7336-42DC-AF59-93FF52BAD6EE}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Elapsed Run Time (Minutes) - 1 User - 1 Vendor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='274'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5EDF8B52-7FD5-4E28-8258-DC391108134C}' />
    </window>
    <window class='worksheet' name='Elapsed Run Time (Minutes) - All Runs - 1 Vendor'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='263'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CCD21164-227F-4A5C-A2EA-D560EB6766F3}' />
    </window>
    <window class='worksheet' name='Elapsed Time (Minutes) by Thread Group - 1 Vendor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='280'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0CFC6445-7E6E-4442-827B-D7D242FD215D}' />
    </window>
    <window class='worksheet' name='Avg Query Time by Query (Seconds) - All Runs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D1FE2BF4-861F-4A01-9830-15A38992B34C}' />
    </window>
    <window class='worksheet' name='Avg Query Time by Query (Seconds) - All Runs - Cache vs No Cache'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CB09F910-1304-4B5D-8875-8C69350B4A1E}' />
    </window>
    <window class='worksheet' name='Compute Cost - All Runs - 1 Vendor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A4E89C41-BAA1-493E-94E2-65691BDAA218}' />
    </window>
    <window class='worksheet' maximized='true' name='Elapsed Run Time (Minutes) - 1 User - All Vendors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='274'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{16811F61-A6AA-46A0-AFEC-27AAF86B6C68}' />
    </window>
    <window class='worksheet' name='Elapsed Run Time (Minutes) - All Users - All Vendors (All Platforms)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='274'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{89552020-112C-4F7E-8E1E-2BCFC7D16DB2}' />
    </window>
    <window class='worksheet' name='Compute Cost - All Runs - All Vendors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D21BCA34-3C9D-4DEC-99B1-4BEBA44035EA}' />
    </window>
    <window class='worksheet' name='Elapsed Run Time (Minutes) - 1 User - 1 Vendor Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='274'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A860092F-039D-48A0-82F2-04B1ACE8661C}' />
    </window>
    <window class='worksheet' name='Elapsed Run Time (Minutes) - All Runs - 1 Vendor Comparison'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='229'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{43B4D167-D8FB-4768-822D-A3554495148C}' />
    </window>
    <window class='worksheet' name='Elapsed Run Time (Minutes) - All Runs - 1 Vendor Comparison (2)'>
      <cards>
        <edge name='left'>
          <strip size='145'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='196'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FCFB3124-CAF9-407C-9403-416215C2BA8E}' />
    </window>
    <window class='worksheet' name='Elapsed Time (Minutes) by Thread Group - 1 Vendor Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='280'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5A9181CF-1D52-4A15-8A39-46D5BF046F5E}' />
    </window>
    <window class='worksheet' name='Compute Cost - All Runs - 1 Vendor Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{2098D301-83CB-4970-843E-788C24F7B45D}' />
    </window>
    <window class='worksheet' name='BigQuery BI Engine - AtScale'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='215'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{059C2855-2A60-41A5-9A12-997CB13C9258}' />
    </window>
    <window class='worksheet' name='BigQuery BI Engine - Raw'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='289'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{31225234-250F-4BBE-888E-A653E33DD2B4}' />
    </window>
    <window class='worksheet' name='BigQuery BI Engine - Raw Total'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='289'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_1291266495509491712:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3A1F9A33-AF03-453F-A304-249C79CD286E}' />
    </window>
    <window class='worksheet' name='Cost - Raw - BQ on Demand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='220'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{884A5110-1F24-47C0-B499-2757B60E1794}' />
    </window>
    <window class='worksheet' name='Cost - Raw - BQ Fixed Pricing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='220'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{2C65830C-09A0-469B-ABB3-A39D185AF47E}' />
    </window>
    <window class='worksheet' name='Performance &amp; Cost by Query'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:run_label:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[:Measure Names]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256941109264:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_4334785040128815105:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:pricing_type:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6FDC6DA5-0B26-40AA-827E-5964D3D411CF}' />
    </window>
    <window class='worksheet' name='Success-Failure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:success:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F2639927-3908-4337-B345-F6334113802E}' />
    </window>
    <window class='worksheet' name='Error Messages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='239'>
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]' type='filter' />
            <card param='[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:Calculation_403846256940376078:nk]</field>
            <field>[federated.16vc6k41iq0fuz1e6e6lh1qknygd].[none:threads:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3E14A9BA-5A22-4192-A96F-9CE22958E732}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5427F765-F598-4985-AD41-68CDABC930AC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Avg Query Time by Query (Seconds) - All Runs' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Avg Query Time by Query (Seconds) - All Runs - Cache vs No Cache' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdZ3Rc53no+//0GQCD3jsJECAqwU6CAiUWFapRsmQ5TmzZck6SdZcTl7ti
      5fo6yclJfFacnPgk0bHjxI6dayV2YtmOYpoSm0hRYidFECRI9N47MAMMMH3fDyBHHILkDDAo
      BPH81uJaxN4z735mY7Cfvd+qUhRFQQghxIqjXuoAhBBCLA1JAEIIsUJJAhBCiBVKe+cGRVFw
      Op1LEYsQQohFNCMBeDweRkZGliKWeefxeIiLi1vqMIQQ4oGkeph7AY2NjREdHb3UYQghxANJ
      2gCEEGKFkgQghBArlCQAIYRYoSQBCCHECiUJQAghVihJAEIIsUJJAhBCiBVKEoAQQqxQM0YC
      C/GguNDexr9XXgqpjG89+wJGnW6eIhLi4SIJQDywrPYpGgYGQirD+/AOdBciZFIFJIQQK5Qk
      ACGEWKEkAQghxAolCUAIIVYoSQBCCLFCSQIQQogVShKAEEKsUJIAhBBihZIEIIQQK5QkACGE
      WKEkAQghxAo1p7mA7HY7er0etXr55I8bvT10jI3O+f0RegMVObnzGJEQQiytOSWA2tpacnNz
      MZvN8x3Pgnm/qYF3a27M+f0Z0TGSAIQQD5WACcBqtfLOO+8QHx/v29bd3U1urlwMhRBiOQuY
      AMxmM7GxsezatQutdvrlV65cWfDAhBBCLKyAlfgqlYqdO3f6bVu1ahVGo3HBgroXi8XCkSNH
      8Hq9vp8PHjzI8ePHcblcix6PEEIsZ0G14jqdTs6ePcvx48c5ffo0arWazs5O34V4MTgcDs6c
      OUNvb6/vuCdOnGD79u2kpKRw6VJoK0cJIcRKE7AKyGaz8eGHH7Jz505MJhOTk5O89957JCUl
      sWrVqsWIEQC9Xs++ffs4cOAAAIqi4PV6iY2NJSIigqNHjwLg8XhQbq4C5Xa7sdvt09vdnpCO
      ryiKryyxOObjqc7hcKBexBsVIZaTgAmgv7+fwsJCoqKigOkLcVFRESaTCZVKteAB3nLnsRRF
      8W27c9+tnzUaja+qSqPVhHz8paj2Wsl087CWr8FgwKjXz0M0Qjx8AlYBJSQk0NDQgM1mQ1EU
      bDYbDQ0NJCYmLkZ896RWq/F4PNjtdgYGBggPDwemL/q3/i1mghJCiOUmqF5AmzZt4sKFCzgc
      DgwGA9u3b1/0u2Gr1cqpU6cYGxvj8OHDlJWVUV5ezq9//WvUajX79u1b1HiEEGK5C5gAFEXB
      7XaTlZXF6tWrUalUDA0N4XK55uURPViRkZE888wzM7Z/8pOfBGZWAwkhhLi/gFVAY2Nj1NbW
      YrfbOX/+PIqi0NLS8sA0iKpUKrn4CyHEHARMADabjdTUVAoLC9FqtbS2ti5GXEIIIRZYwASQ
      lJREV1cXiqKwceNGuru7uXr16mLEFpJbXUGFEELcXcA2AJ1Ox65du/B4POh0OioqKti6datv
      WogHlcvlwuMJre+/EEI8zAI+ATgcDo4ePcqJEyfo7OwE4Pr160xOTi54cKHQ6/VoNKH1/RdC
      iIdZwAQwMDBATk4Oe/fu9V343W63VLEIIcQyFzABREVF0d/fj1qtpqKiguPHjzM6OveFVYQQ
      QjwYAiaAyMhI39z/ERERPP7448TFxWEwGBY8OCGEEAsnqJZcp9PJiRMn8Hq9qNVq8vPz0cv8
      KkIIsawFTABDQ0M0NTWxY8cOdDodLpeLkydPYjabfRPECSGEWH4CJgCHw0F0dDQGgwGVSoVa
      rSYqKgqHw7EY8c2ZoijSUC2EEPcRMAGkpqbS29vLoUOH0Gq1eDweEhMTl3w20ECkp5IQQtxf
      wASgUqnIy8sjMzOT+Ph4VCoV4+PjuN3uB3owmE6nQ60OasEzIYRYkQJeIcfHxzlz5gwtLS1c
      u3YNgLq6OqamphY8OCGEEAsnqNlAc3Jy2Lp1K+Pj4/T19S1GXEIIIRZYUCuCdXR0ALB9+3au
      X79OfX39ggcmhBBiYQWsxDcajezcuXP6xVote/bswWq1EhYWtuDBCSGEWDhBteLePuhLrVbT
      0dFBfn5+UJOtTU1NcfnyZWpqavB4PGRkZFBeXk5MTIws5CKEEEtoTt14cnJygloOsqqqioMH
      D1JSUsLu3bvRarW0t7fzgx/8gPz8fPbv3y9JQAghlkjQCWBgYICrV6+SkpKCoigUFxcHfI9e
      r+f111/3e4LIzs6moqKCmpoavF6vTNkshBBLJOiO8tXV1TzyyCM4nU4AhoeHA76nsLAQvV7P
      O++8Q09PD9/+9rf5yle+Qn9/P8XFxQt68Xc6nbIgjBBC3EfQCUCtVjM6Oordbqerq2tWjcBN
      TU14vV6cTief/vSnqampmVOwsyELwgghxP0FnQDKy8vp7e3F7Xazbt26WSWA4uJi/uqv/opd
      u3bR3t5OZmbmnIIVQggxf4JuA2hvb2dqagq1Wk1zczNDQ0MUFRXd9y5bURS8Xi+PPvoo27dv
      R6/Xs27dOllLQAghHgBBJ4De3l62bdsGwJkzZ4iJieHq1ats2LDhnu/p7OzkO9/5Du3t7SQl
      JWEwGOjs7OTP/uzPWLt2bejRCyGEmLOgE4DL5UKtVqPVanG5XCQlJdHV1XXf92RmZvLXf/3X
      /P3f/z2vvvoqMTExHD9+PKgGZCGEEAsr6ASwYcMGjh8/jkajISMjA6fTSXp6elDvzc/P5+/+
      7u8oKyvjxIkTfPGLX5xzwEIIIebHrKqAnnzySQDf4K2IiIig3vvkk0+Sm5tLZ2cnX//610lJ
      SZlDqEIIIeZT0L2AnE4nbW1tcxq5e/r0ad58800++OADvv/979PW1jbrMoQQQsyvoJ8AtFot
      ly5doqWlBYCKioqgF4Y/c+YMn/vc54iLiwOCf3IQQgixcIJOAMXFxRQWFvp+ns1qW6tXr+by
      5cu+/v8FBQULvqC8jAQWQoj7CzoBXLp0ie7ubhRFYWxsjM985jNBPwHk5ubS2NhIe3s7MJ0Q
      FpqMBBZCiPsL+jbebrdTXl5OWVkZ27Ztw2KxBH2QtWvX4nK5aGlpISkpiYSEhDkFK4QQYv4E
      nQBMJhPR0dE0NDRQX1+P0WgM+iBvvvkmiYmJfP7zn6eyspKqqqo5BSuEEGL+BF0FtGnTJgD2
      7t3L+Pj4rOYCslgsFBYWkpiYSG5uLiMjI7OPVAghxLwKOgHc6v6p1WppbGykoKAAs9kc1Ht/
      4zd+g+985zt4PB6Sk5P5/d///blFK4QQYt4ETAAejwer1YqiKL5tNpttVgex2Wx8/etfJyws
      jKamJiYnJ2VCOCGEWGIB2wBcLhfNzc00NTX5/oWFhc2qDeDdd99FpVKh0+no6+uTNgAhhHgA
      BHwC8Hq9JCUlkZ6ejkqlQlEUWlpa8Hq9QR8kLy+PH/3oR5SUlHD48GG++tWvhhS0EEKI0AV8
      AjAajQwMDHDq1CnGx8d5//33sVgsQY8BAHj22WepqKjAarXyla98hdTU1JCCFkIIEbqACUCt
      VrNx40YiIiL4p3/6JxISEli/fv2s5gRqb2/n17/+Nd3d3VRWVtLT0xNS0LfU1dXx9ttvc+DA
      AZqamualTCGEWCkCJgC3283777+P1+vlK1/5CpOTk5w6dWpWVUC/+MUv+PKXv4xGoyEyMpLG
      xsaQgr6ltbWVxx9/nGeffZacnJx5KVMIIVaKgG0AbrebsrIyYmJiANi6dSuDg4O43e6gq4FS
      U1M5fvw4vb29dHV18dprr4UW9U2Tk5OcPn2aqKgoNmzYgMFgwO12+3osuVwu7HY7AB53aPMC
      KYriK0ssDpfLFXIZDocD9SxuVoRYSQImAKPROKPHT3d3N5GRkUEf5JVXXuHcuXPk5+dTWlo6
      b3frzz77LC6Xi46ODk6ePMmTTz7pN0mdVqv1xa7RhjYvkEqlmlXPJxE6nU4XchkGgwHjLNqr
      xIOrpq/Xrzv6bCWaI0mQmYj9BD0Q7HZ5eXlB/3G+/fbbPP3006xdu5YjR44wOjpKQUEBWu2c
      Du2jKAp9fX2kp6cTHx9Pa2sr4D9L6VzWLpgtj9eLwty/lCpUaGYxs6oQK9U33jmAw+2e8/s/
      v2Ubr6zfOI8RLX9zugo3NTWxevXqgPP6ezwezp07xwsvvMAPf/hDXn75Za5fv861a9fuu5h8
      sEZHR6msrESj0bB79+6Qy5uL/3nsMOfbWuf8/nWpafzlcy/MY0RCCBGcOSUAu90e1KPYrXED
      zc3N9Pb2UlxcTHNzMw6HYy6HnVF2WVkZZWVlIZclhBArUcAEMDk5yZkzZ/x6/VgsFoqLiwMW
      rlarefHFF3nrrbf4nd/5HbRaLePj4xQUFIQWtRBCiJAFTAAmk4m9e/fi9XrxeDxoNBpfPbui
      KPetZz958iTr16+nvLzct+21117D6XRy9OhR9uzZI4u2CCHEEgmqCujq1av09PSg1+txOp2k
      p6czNDTEY489dt8EsGbNGr73ve8RERFBfn4+Op2O1tZWOjs7eeqpp2a1rKQQQoj5FTABDA4O
      MjU1xb59+3x1+h988AGZmZkBL+BpaWm8/vrrdHd309DQwNTUFNu2beMzn/nMvHTxE0IIMXcB
      E8DU1BQxMTG+O32VSkV8fHzQC8Ko1WoyMjLIyMgILVIhhBDzKmACSEtL4+jRo9hsNmJjYxke
      Hqa/v5+ioqKgD6IoCuPj43g8HnQ6HWFhYVL9I4QQSyxgAtBqtTz11FP09fVhtVpJS0tjw4YN
      sxpkdfLkSU6dOoVeryc3N5fi4mLWrl0bUuBCCCFCE/A23OPxUF9fT0pKComJiVy9epWPPvpo
      Vgf56KOP+NrXvkZUVBQxMTH09fXNOWAhhBDzI+ATwNDQEE6nE4Dz58+zZ88erl69yvj4eNBr
      Am/ZsoW/+Zu/obOzk7q6Ov7kT/4ktKjFA+db7x3BE8Kka3vy1rIte9U8RiSECCSoKiCPx8PY
      2BgGg8G3lq/HE/zsmjt37qSwsJDBwUHS09MDTiEhlp+zrS24Q0gAa5OS5zEaIUQwAiaA2NhY
      Ojs7uXLlim9Al1qtJioqKuiD/PznP+fs2bO+5PG7v/u7Cz5/v9PpnFWSEkKIlSZgArg1587t
      YmNjcbvdQffln5iY4Mtf/jJpaWnTBw1xJtBg6PV6GWUshBD3MacrcXh4+Kx6AanVar71rW/5
      1hD4vd/7PXJzc+dyaLFCeDwemquuMlRbR3zBWqZGR+m9dBmP00n82nyic1b7fQedNhtdZ8+R
      vesx1FotiqLQc/ES1zduZcumTUv4SULn9XpDmgf/YRFjNOFwz22RoPGb7ZjCX9AJYGBggISE
      BBoaGrDZbCQmJgZ9EIvFwje/+U0SEhLmFKRYeQ4fPszlK1ewtHcQX7AWvAqpWzahNRqp/fkv
      ic5Z7Xutoih0fHCKqeFhvG43aq0WS3sHo03NNDY0LPsEYLFYZDU64H/ufnzO7/3rMx/OYyQP
      j6ATwI0bNygvL6e3t5eYmBiGh4eJj48P6r3h4eH8+Z//ua/d4Atf+AKrV68O8C6xkj399NOo
      UpM59Rd/AYAxNgZb/wDDdfWE3XEjMdrcgjE6Gm7eJXtcLno/ukzatq0s/JJAQixfQScARVGo
      rKwkKyuLkZGRWc3l8+qrr/qt7ypLK4pA7lbFaB8ZwT46xu1XdY/DQdeZc+Ttf462E+/jmpyk
      r7KK+IK1eJxOxiwWnE5n0OtXP8iqqqpISkoiJSUFgJqaGsLDw8nKyrrne6qrq1m1ahXt7e0U
      FBSENALf6/VSWVnJ0NAQCQkJrF+/3leex+Ph6tWrDAwMkJOTQ0JCAteuXfPtKyoqmlWtwVxc
      v36drKysoLuniyAGgt2ybds2MjIyyM7OJiMjI6iTPDExwU9+8hNOnjzJG2+84fvX1dUVUtBi
      5XHb7cQVrCXnqSdwWMfxut247Q7cTicxq7MZuFaNra+f0eYWTHGxTA2PMNLQSGVlJWNjY0sd
      /rxoaWnh8uXLALjdbiorK2lpaQHAZrMxMjLiayvweDyMjo7S39+P2+0mISEBlUqF0+lkZGTE
      V6XkcDiw2+0MDw/7es0pioLL5cLpdOJ0On03b4qiEBcXx+7du7FarXR0dPhi6+7uJiIigoqK
      CqqqqjAajb4Fm0ZGRvwSsN1uZ2RkBPfN5R1tNhujo6O+2J1OJ6Ojo3g8HhRFwWKxYLVaURQF
      t9uNw+FgZGTEt7DUnZ/V5XIxMjLiG78k7i3oJ4C6ujqysrLweDxcu3aNnTt3BryrMplMPPbY
      Y5jNZkpLS33bY2Nj5x6xWBF++ctfcuDk+0z099P+wYeYYmMZaWhErdX6qoA6T51m1eN7yKh4
      BAC1TkfSulI0N7+Xtv4BPrn9kQW/81wser3ed3Hu7u4mKysLt9tNb28vly9fxmw2Ex4ezvr1
      6zl48CAJCQn09PQAUFlZyVNPPUVVVRUej4e2tjZefPFFzpw5g9Pp9M3Rdaur963BngDR0dGs
      X78ejUZDUlISnZ2djI2NERcX54stMzMTgOHhYQB0Oh1GoxGLxYLRaPRV/zocDn71q1+Rnp5O
      dHQ0cXFxXLx4kcjISCIjI8nLy+PQoUOkpqaSlpbG2NgYAwMDeDwesrOzMRqNnD17lqysLPr7
      +3nhhRd45513iIuLo6enhw0bNnDgwAGSk5PR6XRs2bJl0X4/y1HQCWDdunWcPn2asbExKioq
      gnqk1mg0fO973+Ob3/ymrwfQklH8F7C5dbdxZ1WDoijgVUCt8nutcrMnxmIsNC/gpZdeIrK4
      kMGTJ3zbEooKQcH3u1n1+B6/96Rv3+r3c3hSIhWPProY4S6agoIC6uvrfRMy1tbWUlNTQ2Ji
      IuHh4dy4cYO0tDSSk5PZunWr767e5XKhKArJyck0NTXhcDgYGxtDURR27dqFoiicPXvWd5zk
      5GRiYmIA/Gb+tVqttLW1+a0QCNN/I7W1tdTV1bFv3z40Gg2KonDx4kU2b97sN5uw2+3GZDKR
      k5PDBx98QEZGBnq9nhs3buDxeNi+fTvp6ekA/OpXv+L5559HURQOHjxIUVERGzduJD8/n3fe
      ecdXHbV9+3bf3/Stv1OZbyywgAlgYGCApqYmYPrETk1NUV9fz6ZNm4JqB2hra+NHP/qR37Z9
      +/b56jEXQ319PQfe+D9YV2URm5uDy2aj49QZ1FoNq/Z+fBHx9SYZGUFrMJCz70lck5M0Hz5K
      n9nMoahYnn766UWLW/hTyQyyZGdnc/DgQcLCwnwXZp1Oh8lkIjY2lp07d6Ioiq/65PYLtdPp
      5KOPPmL//v1cunRpRtfS229uFEXx7b9VhtvtJj4+nj179tDc3Ex9fT0bNmzA4/EwMjJCfX09
      L7zwgq9dYGJigqmpKb/ef1qtlldeeYXu7m4OHz5MZGQkRqOR6Ohodu7cycDAAJOTk37Hd7vd
      d735uvXz7Z9VURT279/P8PAwhw4d4qWXXlqUcUfLVVAjgcvKynC73b4T6XK5gj6pERERM6aO
      Dg8Pn0Ooc9fS0kLB5k2c7ekGwDY4REJxEf1Xqvxe5xwfxzk+Tv6L++k8dYbx7h4Gr98ge/cu
      8lavlou/WFLR0dGo1Wqio6NJS0tDo9FgNpvJy8vj/fffp7u7m9jYWDZu3EhlZSWHDx/GYrGw
      YcMGoqOj0Wq1aLVajh07xvj4OLm5uURGRqJWq1EUxdeup1Kp7rp+x8TEBCdPnsRgMGC329m7
      dy/j4+PcuHGD8PBwXC4Xhw4dAuCJJ56gpaWFTZs2+V24Jycn+eCDD1CpVKSlpbF27Vree+89
      XwJbv349R44coampiYKCAsrKynj33XdRFIWtW7fidrt9AzyjoqJISEjg8uXLHDp0iPHxcUpL
      Szl+/Lhv3RIZDHp/Qc0FpNVqOXXqFI888ggqlYorV66wZs2aoOb0KS4uZuvWrQFft5D27dvH
      xe5OuJkAorOz8Lrd9N/xOuf4OGEJ8ahUKszpaUwODTHR30/nqTMMnT7DqdQMKioqFv8DCAE8
      8sh0W8djjz3m27bp5hiH559/Hq/X67vgPf30036j9W99b5999lkURUGtVvsukrds3rz5vseP
      jo5m//79vrXBb13Yb7UbrFu3zu/1d/4M0zeE+/bt88WqUql44YUX/GJ/5pln8Hq9vhhvVQfd
      eTG/dT727dvn91mffPJJ3w3rw1Zl220Z4+1rVYFfeB+/sWET8eHT1+6gn40cDofvpE5OTgY9
      z84Xv/jFuUW5BFQaLd6bPRO8TicanQ5DhJncZ/eRao7krbfeYseOHbKYjXjgqFQqvwukSqW6
      axVtqN9dlUoVcpWKWq32i+Nusd/+c6C7+Ds/670++8NgxGbj3ZobIZXxTGHx7BPAxo0bOXHi
      BIqikJqaGvRkcEuZge01NfQfOQbA0/19bLPZ+NnIKJ0mI3kjo/yBKQJT5TXf68/FRPP9zi7c
      Yxb+rG8IjV6PwxxFWNUNFLOZoyYTKpWK0Tf/FWfzdPe7faMjPOKw889F+YwZDKwfGGJPV49f
      HCfSU6lMjCfS4eR3b9T57YuZ/Lir2vA/fA93/4Df/sRvfB2VXs/4e8eZPHXab1/UJ1/CWFyM
      s7OT0X/2b2cxlpYQ9dInABj4q/+FMjnp26cyGEj8f/8fACz/9Svsd1SFxbz2OfTZ2dhrarH8
      7C2/fWHl2zE/+QSKx8PAn3/Tt/2rfb0MG/T8qCgfgJeaWlllHfd77w8L8xk1GigbHGZvZ7ff
      vtzVeQB4LBaG/vffAZAxNckfWsZ4Py2Fy0kJmJ1Ofu+6//nriIjgrbzpQYWv1jaSODXlt1//
      uen664njJ7B9eMpvX+RLn8BUWoKrq4uRH/zQ//yVFBP18ksADP713+C12T4+f3o9id/4+vT5
      +9UB7JVX/M/f519Fv2oV9to6LP/xM//zt30b5qeeRPF6Gfgff+G3TxMXS/yX/gCA0X/7Kc7G
      RmC6Dtzr9RL3+19EmxDP5KWPGD/4jt97I57YS/iOHXisVoa+/bd++3RZmcR+4TUAhv/xn3D3
      +q/HkfD1P0JtNDLx/klsJz/wP0efeBHTulJc3T2MfP8HfvsMRYVEv/LJ6XP0N9/GOz5x20G1
      JP3xNwCwHvg1U5cr/c/Rq59Fn7MaR30DYz/9d/9ztG0r5n1PAdD/3/+H374xg55/vvkde7G5
      jRyL/3fsXwrXMGw0Ujo0whMdH3/HXhm3kBIxfc3yjI8z9Df/2/8cZWYQ+9tfmD5H3/8B7m7/
      v+GEP/oa6rAwJk5+gO39k/7n6MX9mMrKcPX2MvKP3/c/R4UFRH/qlelz9O2/xWu1frxToyHp
      T/94+hwdfIepS/7rrER/9rcw5ObiaGhk7Cc/BSDc6eAPR4a5khDH8YzpudX+78pq1HzcnmPV
      6/l+8XQD+P7mdtZYLP6f5Zn9AExVXgmcALxeLx6PB7PZzO7du33bg+kR09HRwXe/+10sFgth
      YWHodDrGxsb42te+tihzAWliYjBs2gjAUGsLtf19DFosjA8N0TFhoz7PP4b+yAgyKh6h++Il
      avPXwq1eQDcbof7gD/4AlUqFIS8Pzc0eEp0NdbSNjOBQT9+lDJmMVMXH+ZU7ZJoe+ObUqGfs
      y4w0s/7m/w1FhejurHu9eaekS0/DdPOzfPz5prvTqsMjZuzT3Zx4D8BUtg7ltj7RKt3Hv3Z9
      djaqO+6w1DfrgjUx0TPLzUi/WYjKb9+1C+cYv62clkgzljt6ijlu7h8yGmachyiTkUymL663
      yu0cHKCquYlBkwkAl3rm+Rs1fHyMhugoesL916p+5ObvUJs28/xp426dv/C7nL9U3/+NZetQ
      bvY5B1Bpbz9/WTMap+9//m7+fu84f7fiuMWwJhdNlH/POUNk5HQX17Q01OXb/fdlZqLX6/GG
      hxN1xz5NXKyv115kWRmeVf4XBIPJhEqnIzw7C+0d7zWlJKPT69HERM8oV5ua+nG5mzej3D5d
      hUbj2xeetwb9zZmAbzHGx6HV61ElJswoV79qle+9t+/78cXzWBU3jSPTXU2Pup3Eq/0bsqst
      Y9gmdUxO2rDcvi8qkkdMJrIBlU43828pNubj2AoK8NzRSeXW71yXmjLzvTe7w6rDwmZ+x24r
      x7iuBGXqtnN02/dGl5XpG8nuKzdyOmFpoqJ85Y5ZrVTVXKfrtu/KtXj/bvV27cd/h22REdh0
      /pf5Eq2GCEATH4dKCTDL1MTEBMPDw9hsNgYHB33bt2/fHrAr6K3eCP/wD//Ab/7mbxIdHc2x
      Y8dISkpiw4YN933vfBgbGyM6OhqA75w6GdKjU0Z0DP/0qd+csf3Pj7zL+bbWOZe7LjWNv3zu
      hTm//0Hx/A++F9J6AL+9rZyX1q3323asvpa/va0b6Fz84rXfIewhGAUs4MUf/hOOm1W0c/H5
      Ldt4Zf3GwC98gFX3dPNHv/6vkMr47sufYlXcdNtPwCeAiIgIIiIiaGxs5NFZ9qm+VV+YlJTE
      f/3Xf7FlyxYuXLjAc889N7fIhRBCzJugW4RGR0fp7u4O/MK7+MQnPkFWVhYXL17kqaeeWpS7
      fyGEEPcXdCOw0Wjk5MmTJCcno1KpeOSRR4KeYMtisXDt2jUSExN9c5bcPoxcCCHE4gs6AZSU
      lLBmzRo8Hg9hYWGz6t3z5ptv8sorr3Dw4EE0Gg01NTUL3p9+uS8JOel0hrTIulajwfSQdoUT
      QsyPoBNAZWUl4+PjaDQa3yjAYEVERNDR0YHVauXChQs888wzcwp2Npb7kpDfeOcA9QN3DlUL
      3mO5eby+Z+4LaAghHn5BJwCr1cquXbuA6XnJZ1ON85nPfIZf//rXqNVqNmzYQGFh4dyiFUKI
      ZaDPauWP3z0QUhlfeXQ3xSmpgV8YgoAJYHBwkNbWVnp6erhw4QIqlYrOzk7y8vKCPkhTUxN7
      9uzh4sWLVFZWsm3btkWfD0iIWy60tXKqpXnO79dpNHz50V3zGJF42Li9HnruGIA1W6F0eQ1W
      wAQQFRXF2rVr/aZWXbt27axW9Tp58iSf/vSnOXv2LLt37+bSpUt+85kIsZjaRq6AHcYAACAA
      SURBVEc40Vg/5/cbtTpJAOKhEDAB6PV69Ho9XV1d3LgxPZDK5XLxxBNPBN0LKDY2lu985zts
      2LCB8fFx3+ROQgghlk7QbQBNTU0UFRXhcrkYGhrC7XYHnQBeeeUV2traWLVqFb29vYu6FoAQ
      Qoi7m9Wi8JGRkTQ0NKDRaLBarX4rBd1PTU0NP/zhD1EUhfT0dL761a/OOWAhhBDzY1azgZrN
      ZsxmM5OTkyQlJQV9kMOHD/ONb3yDpKQkfvazn1FVVbXkawQIsdL1j4/jDKGh0aTX+aYVFstT
      0Amgra2N0tJS8vPzaW9vx2q1Bj0ldHp6OqdOnSIhIYG+vj6mpqYwmUx+C8ULIRbX/zpxjJq+
      3jm/v2J1Dl9//Kl5jEgstqASQFdXFw0NDb4qn/r6+lmN5F23bh0tLS1YLBZWrVoFTC8NJ4R4
      +Pz+L35G37g18Avv4enCIr6wtXweIxL3ElQC0Gg0GI1G38jaHTt2EBkZGeBdH8vMzKSxsZGp
      m4t17N27d1ZVSEKI5WPK5WTytvUnZsvpXr5TuCw3QSWAlJQU9uzZQ1tbG16vl8nJSSIiIoJe
      Gu4nP/kJUVFRjIyM4HK5cNy2uIYQQoilEXQbwPnz5311/v39/eTn5wd9EI/HQ0VFBcePH2f1
      6tXU19eTmZk5+2iFEGIeebxeKrs6QipjVWw88RHLszE86ASgVqvJzMxkeHiYnJwcBgYGSE0N
      bp6KvXv3YjKZMBgMHDt2jC996UtzDliE5o0P38d6+7J0s7QtexV789cGfuEKdKS2hksd7XN+
      f0xYGF+smLno0i+vXqG2r+8u7whORkwMn9uybc7vf5g53G7++6F3Ar/wPr762G4ezy+Yp4gW
      V9AJID09nZiYGGpqapiYmODxxwPPNOlwOOjr68NkMmGz2SgvL6e8vHxW7Qdifl3u7GBwYiLw
      C+8hWX5399Q6MsTZtpY5vz818u696uoH+kMqt8guAy/F3QWdAGJiYmhtbaWkpITo6Oig1gMY
      GRnhP//zP2dsf/nll8m4c/FzIYQQiypgAlAUhTNnzqBWq0lKSqK2tha1Ws22bYEfKVNSUnjl
      lVdIS0vDYrFgNpuxWCwYDIZ5Cf5BowKUO7apbyZKr6Lc93VCiOBsSM9gZHKStpFh37aM6Bh2
      rM6haXCAjzo7MOl0VKzOJcpk4v3GBoZsc3/qfZgFXBPYZrMBUF5eTk5ODuXl5UxNTeEOcgTh
      G2+8AcB3v/td7HY77733HjU1NSGE/GDam7eWV++oZy1OSeW3t5Xz+S3b2ZKZhUatZteaPL4k
      M0kKMSdpUdE8lruGnPh43zaNWs3zxaX8V/VVVsXFsyYhkY0ZmTQNDXKyqYGXy9YvYcQPtoAJ
      YGpqivDwcNxut++fyWTy9ekXkBIZRUyYCc0d1WKbM7P4148u8v9dPMf69Ewi9AZGbDas9rk3
      wgqxUmlUap5cW8C7NTf8thu1WsYdduwuF6eam1ibmMTplmZahoeID49gTK5V9xSwCshkMjE4
      OMjJkyd922YzE2hTUxNf+tKXaG1tpbu7m6GhIV5//fU5B/yg0ahUPFVQyFtXLvPK+o1++061
      NPGHu/bi8Xo5VHsDi32Kqz3drE+X9g8hZuvR3DVUdXfh9LjRqNS+qlSb08no1CSf37INg1bL
      kM2GCni2qASTTscvqiqXOPIHV8AEEBERwRNPPOG3zePxoFYHfHgA4K233pqxLdj3Lgdbs1bh
      8njYlr2KrNhYVsfF0zI8BMD27NV878yHON1uPrV+I1XdXUscrRDLW058AtEmE/HhEVzp6mR0
      ahK318vB69UoTHdTdrrd7MxZw5Tbxa9vVC91yA+0oHsB3e7y5cuUlpYGtSrYcl6YPRhXe7qo
      7ukBoCApmf5xKzlx8bSNjmDUajHpdGhUaow6HXqNhnCDAaNOR4wp7KGsCtJrNHgVBbfX67dd
      o1aDAh5lertBq8Wg1T6U50AsjBON9TjcblIiI8mKjcNin+LF0jJ+XlXJs0UlRBgMqNVq/qPy
      Iz6zaQtqlYrPbtrK8KSNd2uuL3X4D6RZJQCn04nX62X9+vXodLqFimlZsTmdDEyMA/B+YwM2
      p5PosDDUY6P87MplKlbnolGr+ffKj4gND6c0NY2usTE2Z2Zxrq11iaOfXzqNhi/t3MX59lZO
      37bmbmlqGs8Xl/L2tSpu9PWyY1UOufEJeBQvI5O2GXW6QtxPr9VKr3V6srmf36zeOXijGr1W
      61tH98cXzy9ZfMtJ0AmgqqqK4eFhzGYzbrebTZs2Bd0OsFC8Xi/Dw8O43W6Sk5ODGpuwkG7c
      nFr3cuf00HKXx8M7d9x59FnnPkvig25vXj7Vvd1o1f5PfTangyN1NdNPAUw/NZ1pbUajUvHf
      tu9YilDFQ0ZhcRZRf9gEXRk/NjbGjh070Gq1mM1mxsbGFjKuoBw/fpzr169z7do1Tp06tdTh
      rGhpUdGE6w3UDwzM2Nc8NORXJTThcBAXHs7vlVfwXsPcF2cXQoQm6CeAqKgoLl68SH9/P0aj
      kcLCwoWMKyi7du1Cq9XS399PZeXMln5FUfB4PL7/h+pWWXccJKQylXuUG2q8t3/2GQdcgHKf
      Ly5lyDbB7jV5xIaFc62ni5F7rPmQGhnFy2Ub+LePLvhec7dyvXe0I8yF1+udUa4Scrl3Pwfe
      kL8Ldy/3gf3uKvf67oZU7L2/uyHy3qXc+TiO4l287+58lOu5rdygE0BZWRk2mw2Xy4XZbH4g
      Gne1Wi21tbVUVVXx3HPPAeByuXwnyePxzFsCuNeXcsEu1CFeqRfqj+he5f7owlm8ikJWbCyZ
      MbHYHE42pGdS2dVBenQ0yWYzXkWhx2JhX2ER59tbiQ0LJ0yvp2tsDOWuX/b5ufB57uh1FuqF
      +la5d1LmKd4Z5S7UdzekUhf/OxZyuQt0QfUqC1TuQsU7mwTQ09NDbW3tjO0VFRVL3gZQVVVF
      d3c3n/rUp3xdS29vnJ6amvLFGGrXU5VKddfPqwqxXPW9ylWFWK5affffT4jNJPcq1+F24/Z6
      6RgZZWjChtvrZdwxPQAnMcLM6M3BONEmE2damokOCyM+IoIJh4OusTHUGs2McrXa0G8ydDrd
      jHJDv3m5++9MownxO3aPchfsuxtim5lafa9yQyr23t/dEGnu8h2bj1aDu5Ub7Fop96PVahek
      XN1t5QYsLTU1Nehpnxfb+fPnKSoq4vz588THx5OXl7fUIa14ky4nk67p1aAaBwcBqOzqXMqQ
      hHioRJtMFCQl43C7qe7twXXzbl6tUpETn0BKZCQtQ0N0WcaINBopSUll2GajbqB/RllBp5PW
      1lbfk4DD4eCZZ55Z8ieAV155xTcn0cM6wZwQQtyuICmF0UkbsWHhPF9cyi+vXgHAbDCQFhVN
      x+gI+0vW8dPKS7y6aSuHam9QlJJKuMHg66F4S9AJoKOjg7KyMpxOJ8PDwzidziVPALGxsUt6
      fCGEWGzn2lrQqtWUpRuxOT9eXtdit/NhcyPhej0urwe3x4PD42bYZmPcbr9r21fQlYuKomA2
      m+nr68PtdjN5jx4eQgghFo5Bq+ULW8t5uqCIG729fvvK0tL5YsVj2BwOJl0uBsbHeaF0HUXJ
      KfRYZnbdDzoBbNmyhYiICJKTk4mMjCQhISH0TyLuS6NSER8ege4ujZZxN3vQ3BKm0xMXHr6Y
      4QkhloDD7eb7507zV8eP8nRhkd++yq5OvvXeEfrHx1mXmkaUycQPz5/lzUsXeCx3Zhtp0FVA
      1dXVbNmyhezsbKqqqnA4HEHNBSTmJj48nN1rKui1WsiIieGfz51hyuUC4LmiErRqNcmRURy8
      UU24wUDF6hz6x8cxGwz85PKlJY5eCKHXaChflUNMmIkPmhr9xsWsTUyiNC2NC21ttI+OEGk0
      smNVDgDvN9Zjv8+o5s9u2sKUy4VJr6d9ZIRVsXFkxMTQbRnjsdw8hiYmyI6L418vXWBLVjYv
      rVtPktnMyabGGWUFnQAmJiZQFAWVSoXH48Fms0kCWEAWu53vnz2NR/HyybINmA1GplwutGo1
      seHh/PjieSL0Bl4sXcfI5CTH6uvoGhvlta3bfauQibtTAU8XFpESGUWYTs/PqyrpG5+eoiM+
      PIJPlJbh8njoG7dS1d3F4/lrAUiIiOBX1dfoegBGwYsH3/bs1fRaLTQM9vNy2Qa+f/Y0AElm
      M5szs/jl1Spe27rdd3f+UWc7cWHh7Css5u1rVfcs918/uojZYMDl8fgSRevN1dHaR0YINxgY
      v1GNV1H4xzOnMBsMTLlcMyZohFkkgPz8fI4ePYpOp8NgMEgD7AJzeTyoVPBC8TrsLpdvwjm3
      14tapWJ79ir0Gi2RJhPv1tzg93c+yrjdQU1f77wMdHrYVff08G7NDTJjYtmQnsG7tdMT0m3M
      yOB4Yz3NQ4P8zvYdHKuv5c1LF1CrVPz2th10jo2iCnUwhVgRPmievuNek5DAhOPjxtrYsHA6
      RkeZdDm51NHG6rg4Dly/BkBOXAJjU4HbV8dvK+92bq8Xyx0L4NzrtRBkAnC5XKSlpZGSkkJ/
      fz8xMTFLPvHaw06jVvOFbeVcaGvlak+3376fXr7EmoREPN4prFN2dufl849nTjE4McGrm7di
      lJla70sBOsdGSYww83xxCT+7ctm371JHO79b/giWKTu9VovvrikvIZGO0REcbjdGrZxfEZwn
      1xYQFx7h66oJ0Dw0yJasbNKjo0mNiuL9xga0ajWfWr+RIZuNY/UzB94ulKDWBD5/fnpq1atX
      r9Le3s7x48cXZKi2+Nia+AQ0KhUeRaE4JRWDVktFTi4wvQD2uN3OxowMLrS3MuFwUJKSRm58
      AmajEc88DBd/2BUkJfPJsg38+OJ5Bic+XjB8XVo6R+pqefPSeeLCwzHeHHn5aO4aPmyeWYe6
      nIXpdPzmxs38t+07eHXzVt9srQDhej2f27KNz2/Zxsb0TN/2VzdvZUtmVuCy9Xpy4xMw3eVm
      JD48nPzEJF/nBrVKRbTJNA+f6MHyyOoc1Co1P718yTdTqQpwejy8efE8/3HlMo2Dg3Rbxvhk
      2Qau9nRzpK5mUZ/gAz4BWCwW4uPj8Xq99PT08Mwzz1BdXc3IyIj0BFpAvVYrHaMj6G7+UapQ
      0X2z7tnmdFKQlMSHzc10jI7QODhAYXIKCRFm/uXCOd/IQHF3WrWaZ4tK+NGFs6hVagxaLVFG
      ExNOB2aDkWGbDRUqtGo1Wo2G1VFR9Fqtvkb4h4VWreFYfS2DExM8V1RCsjmS7ptdBZ9cW8ix
      +lp6LBbf6zdnZjHlchFtCrtvuVkxsRSmpNI6PMSzRSV878yHvgvghvQMCpKSaR0exu31MuVy
      8onSMtxeL/945uGa0XdtUjIer5fPbtrKyKSNix1tbMrI4nhDHZ8oLUOtVjPldNJrtZIdG4dO
      o2F9WgaNQwOcX6S1QgImgNjYWK5du0ZPTw+5ubmoVCr6+/vJz89fjPhWLIt9ivo7hm7fWmqy
      12qh1/rxH6bCx2sRBCM3PoHs2Djq+vvouqNvsFqlYkN6BlXdXZh0OsrSMtCo1VzubL9vXeJy
      olapqB/o9/W6qO3vQ6tWoygKR+pq2L0mj7yERD5oamTC4WBVbBxH64J7LI8PD6c4JZXRyUmu
      9XTPmHBtbWISg7YJxqamKE1JJSHCTG1/H51jo/ctNyUykoKkZHqtVmr7+2bsL0lNpW14hHHH
      9AprmTExKAr3LdfqsDM4MUFhcgopUVH01368ME9WbCwatZowvZ4PmxoZsk1QnJzKsYZaCpNS
      7htrt8XC+fa26akJ4hL8nizK0tJ9i7iMOxxEGAz8y4Vz7C9Zd98yF5JapaIoOYUks5nLndPL
      TN4uTKcjPymZKzenNClKTiEjOobLnR0M2ibuViQA/3zuzIxth26e419cvYJWrfY14v7le0fm
      6+PMSsAEYDQa2bVrF3a7ncjISAA2b94sUy8sU2sSEokymqgb6OOF0jJ+cO6030Iaj+auoWJ1
      Lg2DA6RHx9A/bkVB4dMbN/t6MSx3To/H1+h2N4dqa/x+ru7tCapcjUrNUwVFnGtrYX1aBh5F
      4fpt7002R/Jy2QZONNZT19+HXqvlRl+PXw+RuwnX63ksN4/z7a08mrOGCYfD78K+JiGBl9et
      598rP6Ku306YXs8LJWX0Wi10Vt0/sewrKCLCYOBH58/69RKxOZwcvFGNChWf27INp8fNkG2C
      9WkZZMTE3PcO1e31EK7X89lNW7nU2c6k0+nblxUbyxNrCzEbDLSNDHOyqfGu41wW0+bMLPQa
      De0jI/zmxs189/QHfvufKy4lOzaOK12dbMteRYwpjCtdnehCmKzQ7fXetVfOYgtqIJjBYODa
      tWu+ht++vj4Gb070JZaXxsEBDtXeoM9qxat4/aYajgsPJzUyiut90xetmr5eOsdG0Wk0WO/o
      WSBm8ihe/u2ji7QMD+Pxev2q4lTAc8UlvkXKRyYnqezqxH3zdfertrM5nfx75Ue0j4zgVRRc
      3o9fq9NoeDQnj+O3LazzXFEJ79ZcRwkw4XNa1HQj5Ds3rqPTaFCpVKRFRQPQPzFdLaFWqXB5
      3By8cZ2qri76x62MTk7ed/Utk07P/7VjJ7+8dmXG3DOdo6P857Uq/vXSBVbFxd83vsVyob2N
      Uy3NDNlsvjWrbylMTmbYZvP1witMSqamr5dwg4H+h2B1v6B6AVVXV9PU1OSblnZkZITs7OyF
      jEssoKyYWJ4rLuFA9TWct80k+ELJOn5+pZIn1hagVk13dnymsJi8xESOBFkFstKF6fR8asNG
      GgcH/Krwdq3J41JHO063G/PNp+f1aelU5OTSNTYWsOEv2mTiU+s3cqmj3W9Z0X0FhZxsaiDR
      bEatUlOYnIJlaorBiQnUQXRXtTmd7Ls5mvR4Qx1rk5LosYxxuLaGpwoKWZ+ewcEb1+m/OU5i
      dGqS0alJHJ57J4D16RlMuV2sS00H4MPmRp4qKOLA9Ws0DA7widJ1TDpd9FjGWBUbx+r4eFbF
      xlGRk8uZ29aSXkxlaelsz17NT28bRGnQatmxKoc3L17gM5unF5lPNJvJjU9Aq9GwKSPTrwfZ
      chRUAlizZg1ut9tX76/X6+dlXmqx+GJMYewrLOL7Z0/7NWqaDQYURWFfYRFFySm4vV5+df0a
      v7h6BbVKxe+WP+KrAxX39rkt2zhUe4O2mwNzbokPjyAhwkx8eARhej3Xerq52NHOxY52nisq
      ISMmBpf77k8BWrWaVzdv5a0rHw9YuyXGFMbGjEwyY2KYdLp8o0r3l5SyJiGRs20t94y12zI2
      o8vhrScJh9vNr6pnVpNZ7Xasdvt9z0FVV6dvSnCYru441dIEwIfNTaRHR6PTaGgbGSFCr8fu
      dlHT14uizM/qZ7OVl5DIutR0fnDutF+1TJI5Eo/Xywul68hPTGJ79mr6x8c53dqM0+3mta3l
      ix7rfAvqKm40GikrK8PhcFBXV0dfXx+7du2SdoBlqCwtHYNGy8vrNgAKP6+q5FMbNvHji+f5
      0YVzAOwvWcf7jfU8U1hElNGEV1EYnZyUAWYBRBlNrIqLo2J1LhWrcznX1kJeYiKXOtp562bD
      Z15CIrFh4aRHx7A9exVjU1OkRUXxXkMdMffoXZNkjiQlMorH8wsAONFYx/ZVqzlUc4MfX7oA
      wNasbMamPu44EGEw8Hh+AV1jY0QlL24Xy0nXdM+W243eNg3C7SOpxx2OJe9csDUrmzC9nk9v
      2MyUy8nR+lr25q3lP69V+f4mDFotZ1qbGZgY57e3lWO122m92SljOQuYANxuN3V1dfT29qLV
      apmYmODZZ5+VgWDL1PtNDX793gF+fPG838+/qr4KwMEb1zFotajgvnOTiGkW+xSvH3jbb1vT
      kH9bWcPggO//9f39GHU635S+Mfe4TndbxmZUNfyi6orfzxfa2/x+nnA47judgPjYv350cca2
      /7zj3L15M9E2Dg7QOjyEXqv1a9xergI2AlssFqqrq8nMzKS8vJyIiAi5+K8gDrdbLv4LxKN4
      /eZzF8uD2+t9KC7+EEQCiIuL4+WXX8ZoNHL27Fm6urqoq6ubl8WJhRBCLJ2g2gB0Oh1ZWVlk
      ZmaiKAodHR14PJ6QF6sWQgixdGbVlUelUqFSqaQLqBBCPATkFl4IIVYoSQBCCLFCSQIQQogV
      ShKAEEKsUJIAhBBihZIEIIQQK5QkACGEWKEkAQghxAolCUAIIVYoSQBCCLFCSQIQQogVShKA
      EEKsUJIAhBBihZIEIIQQK5QkACGEWKGWdQKw2WwcOHCAqipZ+1QIIWZrWSeA5uZmVq9ezcQd
      i5wLIYQIbFkngNLSUhITE5c6DCGEWJaWdQIQQggxd8s6ATgcDhwOBy6XC4fDsdThCCHEsrKs
      E0B1dTV1dXXY7Xaqq6uXOhwhhFhWtEsdQCg2bdq01CEIIcSyNSMBKIqC1+tdiljmncPhYHh4
      GIA4jZaSmLg5lxUXHu4r63apekNI5aabwu5ablZYOPoQyk3S6e5abp45imSdYc7lRqvVdy23
      KCYWr1eZc7nhXmVGuXqXO6RzC2AdG2NKo/HbFqEoIZWr02jueg5i1aF9x2LC7v5dSF6o75gp
      DE0I5SbrDXctN9ccSbxGN+dyY9V3P79F0bG4PJ45lxuhMKNcp8cT8ndM73LPKNc+ORlyudjt
      M8r1TE2FXK5jwsYwKgBUiqL4/dW63W56enpCOsCDwuv1Ehsbu9RhCCHEA2lGAniYjI2NER0d
      vdRhCCHEA2lZNwILIYSYO0kAQgixQkkCEEKIFUoSgBBCrFCSAIQQYoWaUwJwOBwPzVgBIYRY
      qeaUAGpra7HZbPMdixBCiEUUcCoIi8XC4cOH/QZU9fT0kJOTs6CBCSGEWFgBE0BkZCRRUVHs
      2rULrXb65VeuXFnwwIQQQiysoEYC22w2DAaDLwGMjo4SERGBTjf3+T4Wg4wEFkKIewtqNlBF
      UTh37hx2ux2TycT69evp7e0lPT0dtVo6EomFMWyz0Tk6ElIZJalpaOQ7KsRdBUwAk5OTnDhx
      gp07dxIeHs7ExASHDx8mMTGRjIyMxYhRrFCVXR387ckTIZXxi9d+hzC9fp4iEuLhEjAB9Pf3
      U1RU5KtKiYmJobi4GJPJhEqlWvAAhRBCLIyAz8bx8fE0Njb6lly02+00NDSQkJCw4MEJIYRY
      OAGfAMxmM+vXr+fDDz/E7Xaj1WrZtm0bJpNpMeITQgixQAImgFudhNasWUNWVhYqlYrh4WFc
      LtcD3wtICCHEvQWsArJYLFy/fh2r1crFixdRFIXm5mbsdvtixCeEEGKBBEwA4+PjpKenU1JS
      AkBHR8eCByWEEGLhBUwAycnJdHR0oCgKmzdvprW1lRs3bixGbEIIIRZQwDYAnU7Hnj178Hq9
      aLVaHnvsMTZv3ozRaFyM+IQQQiyQgE8ATqeTo0eP8t5779HT0wNAQ0MDU1NTCx6cEEKIhRPU
      QLDVq1eTk5PDkSNHiImJweVyEcQUQkIIIR5gAZ8AoqKiGBgYQK1WU1FRwfHjx7FYLIsRmxBC
      iAUUMAFERkayatUqYHpQ2K5du4iMjMRgMCx4cEIIIRZOULOBAhw/fhxFUVCr1RQWFqKXCbaE
      EGJZC/gEMDw8zI0bN6ioqGD37t088sgjVFZWYrVaFyM+P3a7nbNnz/rWI56amuLo0aOcPXsW
      j8ez6PEIIcRyFjABTE1NER8fj16vR6PRoNfriYuLW/ReQA6Hg0OHDnH9+nVfAjh69CglJSUY
      jUYuX768qPEIIcRyF7AKKDU1le7ubg4fPoxOp8PlchEXF0diYuJixOej1+t54YUXOHDgADA9
      R5HL5SI5OZmYmBiOHTsGgNfr9fVQ8ng8vllMxfLjcrlDLsPpdKKRHmtC3FXABKBSqSgpKcFu
      txMZGYlGo8Fms+H1etFoNIsRoy+O291qjwBQq9W+i76iKL7/q1QqmbBuGdNqQ/9+6XQ6+Q4I
      cQ8BE4DNZuPkyZNERUURFRVFaWkpNTU1FBQUYDabFyPGu1Kr1Xg8HlwuF6Ojo77pqW9PSmq1
      WpasXMbmY8EhlUol3wEh7iFgAhgdHSUvL481a9bw4Ycf0t/fvxhxzWC1Wjl16hT9/f0cPnyY
      srIyNm3axNtvv42iKOzbt29J4hJCiOUqYAJISEjg1KlTrFmzhvLyck6cOMHg4CAFBQWLEZ9P
      ZGQkzzzzzIztGRkZcqcvhBBzEDABGI1Gdu7cCUzXpz7++OOMjo4SFha24MEFQ6sNeiiDEEKI
      2wR122wwGHz1sWq1mt7eXtzu0HtoCCGEWDpzqjfJysqSnhVCCLHMBV1/0tHRQWNjo+/nioqK
      B3o6CKfTKaODhRDiPoJOALW1tTzxxBPz0jVvMdwauSyEEOLugk4AYWFhOBwO30VVq9Uum2Qg
      hBBipqATQFRUFBcuXPBd9Ldt2/ZAVwEJIYS4v6ASgNfrJTk5GaPRSExMDHFxcdLvXgghlrmA
      V3G3282RI0dobW1FrVbT3NzM4cOHfTNyCiGEWJ4CPgH09PSQnZ3tG/mbm5tLdXU1fX19pKam
      LniAQgghFkbAJwCj0YjVavWbbXNsbOyBGQl8L7JovRBC3F9QcwF1dnbyzjvv+NYDSE9PJzo6
      ejHimzOXyyXjAIQQ4j6CWg9g48aNKIrCxMTEsun+KeMAhBDi/oLuBlpVVYXVasVkMuHxeNi4
      caN0AxVCiGUs6L6cFouFrVu3otVqiYiIYGxsbCHjEkIIscCCfgKIjo7m4sWLDA0NodPpKCws
      XMi4hBBCLLCgE8C6deuw2Ww4nU6ioqKkfl0IIZa5oBPAuXPnmJyc9DUABzsbqNfrpa6ujuvX
      r+N0Olm9ejWbNm1Cp9Mti8ZkIYR4WAWdAJxOJ3v37p1V4Y2Njfz0pz8lMzOT0tJSdDodzc3N
      fPOb3+Sxxx5j165dkgSEEGKJBLUofHd3N4ODg1RVVfmWYFy7dm3A5RhHMHyfKQAAIABJREFU
      R0d5/fXXMZlMvm2lpaU8//zzXLhwAa/XK1VJQgixRIJaEzghIYGEhAS/7cFMBrdlyxYATpw4
      QWFhIQcOHKClpYU//MM/pLy8fI4hB+fOBWF+fPE8Jxrr51xealQ0f/ns/vkITQghHggBE4DJ
      ZMJkMnHhwgW2bNmCSqWiqqqKqKgojEZjUAeprq6msLCQgYEB9u/fz9WrV9mzZ0/Iwd/PnQPB
      xh12Bicm5lyeUStLYAohHi5BjwOYmJjwza/j8Xiw2WxBHyQnJ4dvfetb7Nixg+7ubplETggh
      HgBBNwLn5+dz9OhRdDodBoOB2NjYoA/y9NNPU1FRQWRkJOPj40RERMwpWCGEEPMn6ASQlpZG
      QkICHo8nYOPvLe3t7bzxxhsMDAwQFRWFXq9nYGCAP/3TPyUvL2/OQQshhAhd0AngwoUL9Pb2
      olKpGB0d5bd+67cCjgPIysri29/+Nm+88Qaf/exniYmJ4b333mN0dDTkwIUQQoQm6DYAp9NJ
      eXk5JSUlbNu2bVZzAWVmZvIv//IvfPDBBxw7dsyvW6gQQoilEXQCCA8PJzo6msbGRmpra2e1
      IMxzzz1HRUUFQ0NDfO5zn6OkpGROwQohhJg/AauAFEXB4XCwYcMGAB5//HHsdjvh4eFBH+Ta
      tWscP34cmB4dHB4eTlZW1hxDFkIIMR8CJoCRkRFaW1vZtGkTABqNhqqqKtatWxd0b55Dhw7x
      /PPPEx8fDzCrHkRCCCEWRsAE4HK5ZkzXoNfrcTqdQR8kNzeX7u5uX+8hs9m84IvJuFwuvF7v
      gh5DCCGWs4BtAIn/f3tvHh/XWR76f885s0szo32xdlu2NkteFO9LgmMSx0kIJIQEAreFUqDQ
      Umj5lcL9QWnppSuU9pbeC7SFsIaQkLDEWbzFiS1bsWNbi2Vbuy2N9l2zL+fcPySNNZJsjUZy
      HMXv9/Pxx5pz5jznOe+8533e7XmetDR6e3uprq7m6tWrnDp1isHBQRITE6O+yYoVK2hvb+fY
      sWMcO3aM0dHRRSkdDcsldaVAIBDcKuYdAciyzL59++jr62NwcJCVK1eSmpq6oMZ18+bNjI2N
      cfXqVbZu3UpmZuailI4GSZKEARAIBIIbELUfQFpaGmlpaQA0NzeTm5sb9TTOT3/6UywWC7t2
      7eJXv/oVer2esrKy2DQWCAQCwZIQ9TbQ6Sw0I1hPTw933303ZWVlbNmyBYfDEcttBQKBQLCE
      RD0CcDqdnD17NhzIbWpHTzQ8/PDDfP3rX8dgMBAXF8df/MVfLFxTgUAgECwpCwoFcccdd9DS
      0oIsy4yOjpKQkBDVtUajkb/9279Fr9fT3d0dEadfIBAIBLeGqKeANE0LJ4EZHh6OKiHMFM8+
      +yyqqmIymWhtbeXs2bML11QgEAgES0rUrfjmzZs5c+YMXV1dZGZmYrPZor5JVlYWzz77LOfO
      nePQoUPCC1ggEAjeBkRtAFwuFytWrGD16tVIkkRXV1fUjlaPPvoo+fn5nD17lo997GPk5+fH
      qq9AIBAIloioDUBDQ0M4PeSlS5fo7+/n4sWLUV3b29vL2bNnkSSJtrY2+vr6YlZ4Oq2trbzw
      wgu8+OKLtLa2LolMgUAguF1Y0BpATk4Oubm5xMfHU1JSwtjYWFTXPvXUUzz22GN4vV6MRiOX
      Ll2KWeHpNDY2sn37dvbs2UNubu6SyBQIBILbhah3ARUXF/PCCy9gNBqx2Wx4vd6ot4La7XYa
      GxsZHR3l9ddf5+GHH45Z4emMjY1x7tw5UlNTKSkpASbyFU/lLg4Gg3i93onjwcXtPNI0LSxL
      8NYQCAQWLcPn8yGLmFACwZxEbQCCwSAPPPBAxLFoF4KfeOIJXn75ZeLj49m4cWO4sV4s999/
      P16vl9bWVl599VX27t0bEf5BURRMJtPE37roHdfmQpKksCzBW4Ner1+0DKPRiOkmBx4UCJYr
      UU8BORwOent7F3yDQ4cOIcsyu3fvxuPx0NrauiRROjVNw+l0kpSUxKpVq8K9c1mWURQFRVFE
      LCCBQCC4AVEbgPj4eF588UUOHz7M4cOHowoHHQqFeOmll9Dr9fzwhz9k8+bNuN1uLly4sCil
      p2hra+NXv/oVR48eZfv27UsiUyAQCG4Xop4CqqiooLy8PDy/Ho0jmCRJKIpCb28vLS0tfOYz
      n2F4eDjqxeP5ZG/dunXRcgQCgeB2JWoDUF9fT1tbG7Is43Q6efjhh+eNBirLMnv27OHf/u3f
      +PCHPxwOBbFr165FKy4QCASCxRG1ARgeHmbz5s14PB7Gx8dxuVzzGoDq6mruuusu7r333vCx
      T3/602iaxsmTJ9m8efOCoooKBAKBYOmI2gBomobNZqOhoYFgMEhOTs681yQnJ/N3f/d3rFy5
      krKyMvR6Pa2trdTU1LBr164FxRMSCAQCwdIStQHYvXs3ABs3bsTpdGK32+e9prCwkK9+9atc
      vHiRhoYG/H4/BQUFfPGLXxRbKgUCgeAWE7UBmNpSmZCQQHNzM3a7HavVOu91sixTVlYmMoAJ
      BALB24x5DYCmaeGdP1MsNJ6/pmmoqkooFAonaxd79AUCgeDWMq8B8Hg8nDx5MsJ5KxAIRJ0P
      GOD06dM899xzWK1WVq1aRWVlJYWFhbFpLBAIBIIlYV4DIMsylZWVEdm/+vv7F9SDf/XVV/nK
      V77Ck08+SVpaGp2dncIACAQCwS1m3m04Op2Ompoazp49i6qqVFdXc+HCBXS6qJcPKC8v5zvf
      +Q719fU899xzFBUVLUppgUAgECyeeVtxnU7H7t27OX/+PP/8z//M/v372bx584JGAPv27aO8
      vJyuri4KCwtJTExclNICgUAgWDzzGgBVVTl37hyjo6N86lOf4vTp04RCISoqKqI2AgcOHODo
      0aNhp69PfOITrFq1anGaz4Pf7xfJ5wUCgeAGzGsAvF4vycnJbNy4EUmS2LNnDy0tLfj9foxG
      Y1Q3aWlp4bOf/SwZGRkTN13A9FGsGAwG4WUsEAgEN2DelthisUTk8JUkiYGBAbKysqK+SXJy
      Mn/9138ddh779Kc/LRaBBQKB4BYTU1e8srJyQb343t5e/v7v/57U1NRYbie4TfG53XiGhjAn
      JaEGg4x1Ogi63djz89BbLOHvqcEgw80tmBISsKSnAeDu78c9MMjY6AiW1LRb9QgCwduamILx
      1NbW4nQ6o/5+QkIC//qv/8q3vvUtvvWtb9HR0RHLbQW3Ea+++ir/9x/+ka7q0wCMdTpw9/UD
      cOnZ5yOcE1tfOUjA7aHjeBXO7h6GLjfSV1uHFgzyl3/5pVuiv0CwHIhpBLDQxdX3ve99EQZD
      jAQE87FhwwY+9YUv8IVv/C8AEvLzSMjPwzs6ilxbd+2Lmobf6SJj43psudn01daTe+cukouL
      CPn9qGdrb9ETCARvf+Y1AG63mxMnTkR4Avt8PioqKuYV7na7eeWVV0hKSqKu7tpL+973vndB
      awiC2w+73Y6sXBugaprGlaPH6K2pJe/Oa/kk1JCKMumVrrdYCPl8SLLMeFc37YeP8s/f/d5b
      rrtAsFyIahH43e9+Nx6PB4/Hg9lsxmQyEQqF0DTthltBDQYDa9euxWazhXcAAcIPQLBgJEki
      f89d5L3rThp+/jRpFeVIOh2yTiHk8wHgGx1Db7HgGRzkypFXKXn/+1i1evWtVVwgeBsTlR/A
      8ePH8fv9xMfH43Q6MRgMOJ1O9u3bd0MDoNPpePrpp/nyl79MWppYiBNEz0svvcRvXz3KcEsr
      juo3kBUdnqEhdGYTGhqaqtL6yiFW3rOXuPR0Wl4+iKd/gFX776X7zFlkvY6O41X8H03hzz73
      ORF8UCCYg3kNQE9PD3a7Pez4pWkap0+fpqCgIKqELk1NTTz//PMRx3bs2CHWAQQ3ZOfOnXiS
      EmlOTwFJQmc04hsfRw0EyN62FUlRyJ2cCsrdvQvP8BB6sxm92UzeXbtRg0EAPvThJ27lYwgE
      b2uiCgc9vfc0leg9WicwWZZnfVdkAhPMR3x8PPF2W8R2T9OMJES6yXolyRKW5OTwccVgCK8L
      2O0JovcvEFyHeQ1AZmYmTU1NHD16FLPZjNvtRlGUqHvwxcXF3HfffYtWVCAQCARLS1ThoO+8
      807cbnc4/IPZbI66V/X5z39+0UoKBALBx5/6Cb7Jqb1Y+MD6Sh5cW76EGi1/5jUAgUCAuro6
      NmzYwPDwMCdOnCAuLo677rorKiPwVsT9EQgE73wGXa5FGQBPwL+E2rwzmLd1HhgYCGf/On/+
      PPv27aO2tpaRkZF5t3N2dHTwve99D7fbjdFoRJZl3G43f/zHf8zKlSuX5gkEAoFAEBNR+QG0
      trbS2dlJQkICOp0Oj8cTVc9+xYoVfOlLX+L73/8+jz76KAkJCRw8eHBBYSQEAoFAcHOYtxW3
      2WysWLGCnp4etm7dCkBSUhLx8fHzClcUBYvFgt1up6qqiq1bt3L58uV3lE/A83U1tPT3x3x9
      TmIiH9hQuYQaCQQCQXTMawAkSaKgoICCgoLwsZSUFFRVjTre/gc/+EGef/55fvrTn7Ju3Tq2
      bNkSu8ZvM2q7HJxqb4v5+nUrsoQBEAgEt4SYNuSPjIwsKCCc1+vF5XKxevVqrFYrY2NjsdxW
      IBAIBEtI1AZgfHwcTdNwOBwA4YXhaPjRj35EZWUl3d3d+P1+Lly4sHBNF4jf748IYCcQCASC
      SKI2AGfOnCEYDHLx4kWGhoYYGRmJ/iayjF6vJxgMcuHCBSzTvDtvFnq9XngcCwQCwQ2IuoXU
      NI2mpiZycnIwm80LmgL68Ic/zLFjx+jt7SUjIyOqUNKLRbj/CwQCwY2J2gBs2LCBUChEYWEh
      CQkJJCUlRX2Tvr4+HnvsMe677z6GhoYIBAIxKSsQCASCpSNqN90rV65QVFSELMt0dHSQlpaG
      yWSK6tqXXnqJxx9/nAMHDrBjxw5Onz7Nrl275r/wNubLv/s1Tf19MV+/a2Uhn73zXUuo0Y05
      0dqChjb/F69DQVIKWQkJS6iRQCCYj6gNQElJCceOHQv/HW3jDxAXF8ePf/xj1q1bN2d00LeC
      BLOF95avA0CnyLzZcZW2wUEAFEliX0kZVqORly9dxBcKsndNMVajkeaBfqqvtL/l+noCAVz+
      2F3XvYtwmY+Ffzj8CsFFLLr/wdbtPJKwYQk1EggE8zGvARgaGqKzsxOYcApra2tjeHiYzMzM
      qOP8PP7449TW1rJ+/Xra29vJz89flNKxMOb1cqy5EYBH1m3AO20aaueqQgZcTk5fvcJ7y9fx
      TM053rjSzpDbxce37aDG0fmW6ysQCAQ3m6hCQWRmZoY/r1q1ClhYTP/Ozk6eeeYZfvazn1FU
      VMQnP/nJGFRdHKqmMu7zYZ8cuXRP80UoSErmx6erCWkaKhrugB+zXs+m3Dy8weCiAlAJBALB
      25V5W3GTyURqaiotLS2kpKSQmpqKw+HAN5mHNRqeffZZ/vRP/5Rvf/vbxMfHc+7cuUUpvRj2
      rC7iSFPjrONTs9eapiEBSRYLaVYrmqahiO2kAoHgHUjULZvL5ULTJprJYDCIx+OJ+ia5ublc
      vnyZ+vp6AoEA7e3ttLXFHj4hVuIMRpLj4rg6PASAUadDkiQGXS5yEhIx6nQYFB16RaGxv4/n
      amsYdDnJtNnnkSwQCATLj6gXgYuLi3nllVfQ6XRYLJZ5Q0FPZ9WqVVy8eJGOjg4URcHpdNLc
      3BwRX+itoCgtLaL3v3tVIWc6rnK46TJPVG4C4GhTIyvsCdy5ajX+UJCQquIYHSHLLnaoCASC
      dxZR5QSGidDO6enpqKq64CQv69evx+v1hkcNmzdvJnlaDte3irOdHRGfD16+FP77+ydPIEsS
      6uTztgz0R3wWCASCdxrztuROp5O+vj48Hg99fdf2pe/cuTPqeEBPPvkkoVCIsbEx/H4/ZWVl
      t8QAzMfMxl40/oK3Az6fj6DYiMCdefkEQrFtNT7X07XE2rwzmNcAWK1WrFYrXV1drF27Nqab
      +Hw+HnroIV577TXy8vJoamoiNzc3JlkCwe2G2+3G6/XeajVuOY+VxR5CpmtcRCCei6gXgRsb
      GxcUAG46O3fuxGQy4fV6+d3vfkdRUVFMcgQCwcIIBoO3TVTc2+lZl4qoJ/MTExN5+umnw34A
      u3btmncKKBQK4XK5KCwsBOADH/gAMOEZLBAIFsbvfvc7cnNzw8EUX3rpJVJTU6msvH5CoZMn
      T1JRUcGFCxfYunXroiLkaprGoUOHcLlc+P1+7r///vC7rKoqNTU1NDc38+ijj4avqampob29
      nfe85z03PUBjdXU1paWlC9qgcrsTtQFYt24d5eXlhEIhdJPbJ+ejq6uL73//++GF5Ck+9rGP
      veU7gASC5Y6mabS2tlJRUYHH42F8fByj0Yiqqly+fBmn00lFRQVGo5GhoSGam5vp6uqivLyc
      /Px8ZFnG4XDQ2dlJamoqK1eupKenB5fLRW9vL2vXrsVms6FpGl1dXeFpJ7PZzIoVK9A0jfLy
      cjIyMmhoaKC9vZ2ysjIAxsbGMBqNEZ3C0dFRurq65nyGgYEBCgsLSUpK4uLFi7jdbtauXYvR
      aKSzs5Oenh6KioowmUzU1dUhyzLl5eV4vV76+vro7e0lJyeH7OxshoeHaWpqwuFwUFpaSnd3
      N1euXCE7O5vs7Oy37gdahkTdHbh06RKHDh3i2LFjVFVVRXVNTk4On/vc5/j617/Ol7/8Zf7m
      b/6GL37xi6xYsSJmhQWC2xVJkoiPj2d8fJzm5mbWrFkDTLybTqeTzMxMjh07hsfj4fDhwxQU
      FIRzd7/55psABAIBCgsLqampYXR0lJqaGsbHx1mxYgVvvPFG+F6qqob/TXXgZFkmIyODrq4u
      6urqIjpxCQkJlJaWhkcYmqZx/PhxduzYEdFZdLlc1NTUsHLlSrxeLw0NDbjdbtLS0jh+/Dg9
      PT3U1dWRm5uL3+/ntddeIyEhAbPZTFVVFb29vTQ0NFBYWMjJkyfxer0cPnyY/Pz88LO++uqr
      rFq1SiycR0HUBqCzs5N3v/vd7N27F4PBEPV6wDe/+U0A/v3f/x2Px8Mrr7xCfX19bNoKBLc5
      FRUV1NbW4nA4wr3bzs5O+vv7uXz5Mi6XK9y7Tk1NxWazha/VNI2Ojg7Onj2L0+nE7XajKArF
      xcWkp6dHTA85HA7a2tpoa2uju7s7fLy+vp7Tp0/z0EMP3TCxU2NjY7hn3tPTE44nZrFYiIuL
      o6qqimAwSHt7e/h74+PjXLlyhcrKStLT00lJScHtdrNy5UqKiorCbU5hYSEpKSlYLBaGhobI
      z88nLS0t/Kx5eXmcOHEinMVQcH3mnQIaHx9nYGAAp9NJW1sbkiQxMjISdUL4KSs8lQMgFAqJ
      H0UgiJHk5GSOHTtGamoqer0egJSUFIxGIytXrmR4eDg8bVJcXByRf9vn8zE0NMQ999zD0aNH
      r3sPSZLYunXrrOOBQIAzZ87wyCOPEAwGCQQCaJrG6OgoiYmJ+Hw+AoEALpeLrKys8Fx8U1NT
      +G+/309lZSUmk4mDBw+Sk5NDXFwc+fn5DA8P4/P5aGpqwjoZhkWn0zE4OEgwGMRsNs/SyWKx
      0Nvbi8fjYWxsDFVVKSgoYOPGjbzwwguUlJQs2G/pdiKqEYCmaeGFJ03TKCwsjDqtY3t7O3/1
      V3/Fm2++yTe+8Q0OHDggsnUJBDEwlY9j/fr14fnygoICKioqcDqdnDp1Cp/PR2JiItnZ2Rw/
      fpykpCRMJhPFxcUYjUays7M5efIk6enpWK1WVq5ciU6nQ6fTzbsuFwwGyc7O5s033+TMmTMM
      DQ0RDAYZGBhgcHCQs2fPYrfbOXv2LJIkkZaWRlpaGhs2bAgvFsuyzOXLlzl58iSbNm1iw4YN
      jI6OhnXPz8/HarVy8uRJxsfH2b17N7W1tVy6dImdO3eSmJhISkoKAGvWrMFut5OXl8fx48dJ
      TEzEYrHgcDg4fvw4paWlUXdUb1ei9gMYHh7m/PnzaJqGpmlkZWVFVbj/8R//MavHb7eL2DoC
      wUJZvXp1xP9AOLT6li1bIr47M+3q1DUzdwxNzZsD8xoAs9nM3r17Zx0vKSkBID09fc7rpm/7
      NhgM7NixI+L8zNHGunXrIj7v2bMnQocppp5p7dq1ET5Kd9xxxw2fQ3CNqMdG586do7CwkFAo
      RE9PT9Q3uJUev1owSGh8HACD14clEMCrKKiyjKKqGGfkNQ7IMgFFAU3DMmMByTzts+rxoE1+
      Nvom5Hp0OjRJQhdSMaiRcv2yQlCRkTQtQg6AaZoOqsuNNnmtyefHEgjg1ulAktCHQuhn7HH2
      KQohWUZWNUyhSLnTny3kdMJ0IyxJKJMvvur1os1I0SlbLEiKghYMos4I+icZDMhGI5qmoTqd
      4eOWQJCApuKZHG4bg0GUGYY/XEaqimFG2U89m6aqqC4XAIrbgyUQuGH5qZKEd/KepmAQecY9
      p8aaqs+HNiPBjmwyIen1aKEQqtsdeZ1ejzwZOlx1utC0aWU/X/mZzUg63YLKD0CSZeSpbZXT
      6pjmcqF5vcgWC8gyWiCANiMar2Q0Iun1oGnh8gufUxSkyYZT83jQZpS9W69DQ8JwnToWlGXk
      Ocpe0umQpsrI5ZpVx6aeRfP55iwjFAVCodllpDcgGSd2E80sI02SJt4JJt4dZYa+Hp0OVZLQ
      z6hjJn9gzjrmD4X4vydeIyRJeJUpubPrrkunAyblzni/71m3gbLsnLnrkU438ayTZaSpS1SP
      9AZk00RirdC4E6Zl47tePQrLnXq/A4HoDYAkSVitVjo7O7Hb7QwMDLztd/N4zrzJ+A+fBGDf
      5L9/2lBOS4KNdQNDfOLC5Yjvv5ybxXOr8tFpGt86/kbEOV1WFjwx8ffAt/4Fb93EQvYHJ//9
      /1s3MmA2s6u7h8eaIiOdPl1YwJGcFSR5ffyvU29GnDOWueC9E3/3fu1rBDomFsv+aPL8Z3dv
      xa8o7G/v5L6rkYlp/rN0DWfSU8kfH+cvztZFnLNoerhn4u/uz/1ZxIskmc3k/OC/ABj+wQ9x
      HXst4tq0r34FU2kJnrNnGfjWtyPOWR+4n8QPPwGhEI4/vJbX4R+BHrOJr22d6GF+4sJlyoYi
      Nwp8dctG+ixmdnT18sGm1ohzCfmrYQOEhobo+uPPAlAIfAt4ZlU+h3KzSPT5+MbJyPK7nGDj
      XzaUA/CFs3VkuyJfQOMfTOg49vyvGXvu+YhzyX/yGeJ27MDf2kbvV74aWX7bt5Hy2T8BoOvP
      /hx12ly6ZDSS8+QPJsrvhz/C9eqrkeX3lf+JqawMz7nzDHzzW5Hlt/8+Ev/HR0DTIsoPQJeR
      zopv/wsAA//6v/GePx9xPvOb/4Q+I4Pxg4cY/q//jiy/D30Q23seJDg4RNfn/zyyDIqLSP/a
      XwHQ/ZdfJtjeHnH+i7u24NHpeKDtKg+0R8bL+lHJaqoz0sgdG+fLb9ZGltHWLaR87k8B6PzU
      p1GnbQyR9HpW/Hji3Rv83n/iOnIksoz+55cwlZfjfvMsA//0zxHn4vfdS9Lv/x4AVx//UMS5
      fpORr2yb6OF/uraBisHhiPPf2LyB7jgLO7t6+PDllvDxPwLsj1uhEtTRMRx/9OnwuUeAFpuV
      f6qcGDX95Zka8scjDc+f79yMS6/n/rarPDijjJLi7ZCdQ+BqBz1f+nLEOfPmTaT+2ecB6P7/
      vkhoaOjaSUUh96c/BmDkJz/DeehQxLWpX/oi5nXr8NbV0/8P/xhZRve8m6SPfRQAxyc/BdMM
      i5KSTNa//28ABr/zH3jORL4zGf/w9xjycnEdP46kRbki29vbS2pqKufPn8fpdLJz585FOZUs
      BZqm4XQ6CQaDczp/DPX0YJ18vJ+ceYNXm5sYMRoIKArGYAjbjB6hW6fDZZjoRaV6Il3vs5KS
      +cbvTRR4cGgo3AP7zvHXONfZwZDJSEiWMQeCxM+w5E69Ho9eh6yqJHsje26lObl88f0TDnLB
      /gG04MS13zj4Mq2DA/SbTSBJxAUCWAKRlnzMYMCnU9CFVBJn9Ai3F5fwyfvuByDQ2xtRQZBl
      9JPD9dDIKKonstFUkpORDQZUr5fQcOQLJsfFoUzuFQ9OGwl+6umf40NjaLJHaPf5MMyI2xIu
      o2CQeH9kGT2++07uq9yEFgoRnIw5daKtlR9Un7xh+QVkmZHJnlCi14duRo/wu5/5LCaDgdD4
      +KzepJKQgGw2o/n9BCfTg4af02xGmcxRHOztC4/MAJBk9BmT5Tc6OqvXpyQlIRuNCyo/mOgt
      6lJTJ+45rY5NoUtNRdLpUN1uQqOjkfe0WpHj4yPKLyzXYEA3ORIPDgyEe5r/cPggTf19DJhN
      aNetY3p8Oh06VSVxRtlvXlPEZ+5/cEJuX1/kyEKS0GdkLKqMAALTdiB95plf4AmFGDRP1TH/
      rJHkVB0zBYNYZ9SxR3fu4oFNWyLKyBsI8sfP/mLeejRVRpZAgLgZZfSH9+xjZ9latECA4MAA
      AL3j4/zPF36DbDJdq0f9/RFlJEkSuqn3cGxsVhl94X2PUJ5fgOr1ERoeijgnW+JQ7FNl1EPE
      CEBR0KWlTcgdHkadEUZEl5KCpNejut3RjwDGxsZIT09n48aNdHV14fF4brlH7+HDhwkEAvj9
      ftLT02fNJcomE/rJwncl2Om3XJs/9OkU+nWzdxUAIEkR3wUwma7lMdYlJYX/HrNZI77r0evw
      6OcuVlWWZ8kdMV5znNGlplw7bo2n33NtKO/S63FN7vqYSVCZLXd0mkOO/jpzswBKgh0lYe41
      GdlkQp6WDW46kiShn3au32KOyAk8eoO8zx6dLjxVNMXUsF5SlLDcwNhIxHPNVX7TGTbNvueU
      RorVimK1zv0sBkPEs8xEl5523XOK3Y5ynTWthZTfrHtOq2Oz5FosE9NBc8mdVn5zyk2ZUcdc
      4+HPN6xjc5T9mOHad6canLmItYyAWXVsena+UeP1IxF4dbrw1OBTYDyeAAAgAElEQVQUc9Yx
      v3/Wc81Vj8Iy9HrcM8rIo5tYC5X0+mv6mk3X5I5NGuu59B2bZshn6OGfXGOVTcZ5yijjuueU
      xESut1IrWyzRGYDx8fFwRjCA5uZm1q5de8sNwO7duzEYDAwNDXHy5MlZ5zVNC8cGWYqdp3PG
      GVmkYO06che/VVZbXnFRtNn6LsV2YW0OuYJJblLdPdrchNsffcbAmeQnJVOWcf0GL1bmqguq
      tgR1Q5tdDsul7kZlABwOBwMDA7S0TMypZWdnk3SDHspbhcFgoK2tjaqqKvbv3w9M7FWeKrSp
      vcpwncZ7AWiaFpY1ncWGjL6e3MVWIFVV55T7diU0h76hGcP7WAgsZKHrbcoPT1dz3tE5/xev
      w6rkFP5k152zji+2jmnXqWM/PfMGPYuIvvlASRlrklPm/+ICmeudCAYW7y0cDAVny10CL+Tp
      7dfNIqp3o7i4mIKCApxOZ7ghVVX1lq8BXLx4kYaGBh599NFwDBL9tOGZXq/HODkVoSiL01WS
      pLCs6Sy2DOSbJVdW5pT7dkVRZuu7FA48BoMBY5R5K96uDHrcXBkZnv+L1yHeZJqzLkiLrmPy
      3HIX6eYjz1EXloK56lhoCXySdDrdLLn660ylLYTp7dfNIuo3rLq6Gr/fjyRJDAwM8PDDD99y
      A3D8+HE2bdpEY2MjdrudnJycW6rPcuCjP/sx/c7x+b94Hd5XsZ4/2Lp9CTUSCAS3iqgNwJQ3
      8NjYGNnZ2QwODpKRcf3Fh7eCe++9F//kTp6lsLi3A6qmLmraSoTxENwqMm12tublo1MU6rq6
      qOm6Ni12Z+FqcuyJ+EJBDjTUE2cwcveaIgKhEG2Dg7zZefUWav72JWoDkJSURGJiInV1dbhc
      Lt797nffTL2iQmQVE8TCeUcHp69eifl6vazw+1u2LaFGgmjwB4O80FCPLxjkUzt2RRiA5v5+
      qlpbKErPYMfKVbj9fuq7u2ge6CckNgFcl6gMgKZplJSU4PV62bVrF4qiiBgbk8QZDHx863aC
      6kTP+qdvng5XOIOicE9xKZqm8UJDPRJwb0kpmVY74z4vz9Scu7XK36Zc7uvjudqamK836fRz
      GoCWgX4cM/bnLwSzXs+m3LyYr3+nM+R2kWVPoCQjg6szfAeG3W7WZeWwITubAw0X2JqfT4bV
      hsVg4Gxnx3UkLj9GPB5quxyLkrExO4f4ybWFqAxAbW0tPT09WK1WxsfHyc7ODieCuN3xBoI8
      +UY1ATXEQ+UVZNpsdE6FrU1No2t0hJWTOxoKklOQJYkfvDF7y6pg+XPw8kV+U183/xevwwqb
      XRiAeTDr9ciSjHnGlK8iy1gMegIhlXijkRcvNmA1mshOSOAjd2zmv6vfGe9cx/AQf3/o5UXJ
      +M77H4veALjd7nAIWUmSwmnhiouLxSgACGkqBSnJbM0rQAO6pvUAG3q6iTcYwwZgVUoqmTY7
      T1RuontslCNNjbdIa4Fg+WEzmbnQ0019Tzd/tGM3OlnGqNPhmdwq+VpLMxd6urmnqIQRj5u+
      8TGG3C5hVG/AvAbA5XKRlJQUDuEsSRJ2ux232431Op6VtxuOkRFOaW3cWbiaZEsc/S7ndb6p
      UdXWSlN/H49tqCR1WiTGudDJMhk2G/1OZ4QHJEC61UpQVRl0uZAA+2TAqaCq4vTF7oSzGEw6
      Panx8XSNjhCatlgsAVkJCYx6vIz7JtzSbSYT8UZjhMEUCG7EyuQUHlxbTkhVaR7oR5Yk7l5T
      zIGGeh5cW45eUZAliRcbLpCXmMz9peXIssTByxdvtepvW+Y1AAaDgfb29ogIoC6Xi/Ly8puq
      2HIhyRKHWW+gfWiQ/KFkMmw2FEWmb3wcRZIw6nXoFQWjTkdjXx9b8vJpGehHA4Kh6y9OpcbH
      s2d1EW2DA5RmZPLdqtdxTe54erhiPSFVxajTMezxUNvVyYcqN9Hc38+wx83x1pbryr1ZlGVk
      ckduHt1jozxUXsG/v34sfO6TO3bRMtBPQVIKr7c2k2mzk2614g0EMOh0/OLcmzeQLBBMcM7R
      wakrkYEWf1M/EaDuZ2+ejjjeMz7GG1fb3yrVli3zGgC73c5DDz30VuiyLFFVlTsLC9ErOoZc
      Luq7u9i1qpAhl5vSjAwKkpPRgLvXFHGg4QKZdjvvX7+RloGJxjp3jiB2AENuN9+teh1V00iK
      mzAyUwbAZjLxXG0NJr2OPauLSIu3Un2lnVPtbYv2TI6Vxv4+arocKLLMH+3YFXFOQuK15mYG
      M12kxMXzemszgVAIi17PE3dsviX6CgSCBWwDnU51dTXr1q3DNBn58XZmxOvhpUsNEcdea2kG
      4Lyjc5YL/6n2Nk61R/Zi5iKkquhkhQ9s2IhjdISBadNKdd1dfHLHTnSywi/PvYkGVKzIoiQ9
      A8fIyCx93goCoRCJZguPbazk1eamiHOO0RE+tXMX8UYj33n9GIFQiPykZB4sK+eX58++5boK
      BIIJFuQINuUEVFlZKRaAbzJ6ReaT23fyQkM9rYMD4eOyJLExO4dvHjmEIst8ZNMW/utUFc0D
      /QD8wdbtGG9BDlS7yczvbd7Kk6dPMTgtIYlBUUiNj+dfjx0lNT6evWuKOefo5N1FxXz/5HG8
      SxAzRSAQxEbULUVzczNtbW0kJiaiqiqVlZUi2fJNZE1qOrIsscJmJ9Nm51xnB7sLC3npYgP+
      YIhtBSsx6nSMeb1szSvAajLi9geQmHCYeavZtaqQ7rFRStIyUDWNMx1X2LmykKNNl7EaTdyR
      k0tBUjKOsVHuLS6hZaCfO3LyGPN5F72vWSAQxEbULXhnZye7d++moaEBs9nM0NAQaTeIAS5Y
      HG1Dg5yb5sASVEPhzz998w0KU1IJaSpHJ7eS5iYmYdHr+dHpam7FKsCJ1pbw3mKNid1Idd0O
      NOC7Va+zKiWVU1fa6RgZpmWgH4t+IkDbzN1NAoHgrSNqA2A0Grl48SL9/f24XK6IRM+Cpcft
      99M2FJmlqncyv3FQVbnU1xtxrn3Gd99qhj3uWdtf+yczcHkCAeq7u8LHp55DIBDcWqI2ANu2
      baO7u5u4uDjy8vJE8DWBQCBY5sxrAPr6+sKJYKYYHBzkjjvuEEZAIFjmyJKEzWTC6fNFpPSE
      CQc+vaLgn0zMY9LrkZhIgvROm7rTKwpxBgMjHs+sczpZRtW08BZrq9FISNNwz8gpvhyZ1wAk
      JiZSUVEx+0KxACwQLGsSzWb+cNsOBt0uMqw2/utUVTisQnZCAu8tX8eVoSF+e6GOJIuF/7Fp
      C50jI4x43BxqvHyLtV86KlZksSk3L+xn89TZM+Fzm3PzuL+snP86dYKrw8PcU1xCkiUOg6Jw
      ua+X6ivt15WrVxTuyMklwWyhqq2VUe814yIB67Kyaejpxh8KYVB0vGv1GgZcTt7seOtCV8+b
      0UWv1xMXF4fb7ebEiRNUVVXx+uuvL6t0gwKBYDZuv58fVJ/imfPn6BwZIcF8LdG8hMRztTXh
      EDApcfGc6bjKMzXnomr8LQYDhSmps4K2AeQlJpESFxkGJcliwXSLOpUtA/3896kqfnH2DInT
      ygBg0OXiWHMTsjTRVOYmJPGrmvM8X1fD6tQbb4LZUbASt9/P5b5eHt2wMXxcliR+b/NW7i9b
      S9zkxonHN1bSMtDPCpud9VnZS/yE1yfqlF51dXWUlZWxevVqkpKSRKLtZY7+On4c8UYjuslM
      b1PBtow6HQbh93HLkCSJzbn5fKhyE/eVlIUbZZjws3hv+To+sKEyvAsr3Wplf+n80Xp9oRAh
      NcS+klL0ikL32LW4TB0jwxFTHIosU5qeyce3bmdbfsEN5eYlJvH4xjvISUzkk9t3Rfil7Csp
      ZV1WFu8tr6AwJRWARIuFP3/XXtZmroiuQJYYl99PnNHIR7dsp3pGqImWwQFC0xLHn+28yhf2
      7OXzd93NiXlCrrza3ERNlwNVU/FO6zCrmsaTb5yiruvaxgiDotA80M+xlibWzGNYlpKoTa4k
      ScTFxdHe3o7ZbGZ4eJjMzMybqZvgJmBQdDxUXkFRajr/eORgxLmH1lZg0OlIiYvj52fPUJqR
      SXZCAjISeUnJ/OPhV26R1rc3Jp0eTdN4rvY8d68ppjAlhab+Cce/vUXFNA/0M+x289DaCl5o
      qGfP6iKS4uKQ4IZbghVJ4iObtnCpt4eXLt7Ye/xibw8Xe3uQJYmPb9txwxj7jtFRTl1pR5Yk
      ViWnokxLHZuTkMh/njyB3WzmnuISmgf6eU9Z+bz3v5nYTWY+umUbvzz/5g3zOUiSxMacXL55
      9BAGRcfD69bT9saNd9+9q3ANuYmJPD3D43367yJLUnj9JRAKRZTXzSZqA7Bu3TrsdjuKouB0
      OkU+gGWKSa+nxuEgyRIXeVynw2oy8ZMzb5CXmMSOglW80FAPQFFaOiMezy3xL7hZJJjNPLJu
      AwcvX4xILmIzmXhk3QY0DdqGBni9pZn3r9tAnNHIlaHBqEJ4m/V6/KHQrExUCWYzFr2B7rFR
      NCYWE3WygoY25+LjFJ6An+OtLVgMBlYmJ/N6y7VQGxlWGwcaLgATv+2Ix8PPz57h9zZtmVfP
      /ORkzHoDg24Xq1NSuTo8zPrsbKqvtJMWH0+GzU5yXBxZ9gQybTZUTWPM68WgKAQmF4bnIqiG
      iDMY+MgdWzjdcSU8kpAliUAohAa4/QH08sQcedNAP+Ne7y3xYAfYW1REfbcDi8FAQVIy3WNj
      FKWnU+voJCcxkdS4eIIhlXGvF72skJeYhNlgmDc96ta8fGwm07y+OaqmYdRNTJUlWiy4/PNH
      85UlCZNOjzsQuRBtVHSk22z0jI2GF++TLXFYDAY6RoZnyVmQI1hiYiLl5eU0NDQQDAYxGAzR
      Xi54mzDm9dDvdM6qvP7JWD6rU1NJjbOSHDdhICRg96pCfnrmjVug7c1jU24e3WNjWGbU4W35
      BbzW0kzLQD+f2LYTp89Hx8gIJ9tb+cgdm0m0WPD4r7/+tb90LXeuKuTbx45GTKlszsunOC2d
      fqeTvUXF/Ph0NZ/eeScXerpRNXXeHvCq5BTuLyvnqbNnGPV65/zOQvM1D7lc9DudJFsm5uO7
      xkbDhijBbMGiN3Cxt4eU+HjOOzpZn5VNTkIiP6w+dcOgg2a9gScqN/Pk6VNhXxCYaOj0ioIE
      k8lbQmzLX8mgy0ma1YZOkWf5t7wVnO3oIN1qI9kSTyAUxDE6wrjXiyRJpMVbwwme4o1GfvDG
      STbn5hEIhWZFIJ3JhuwcvMEgH75jC0NuF6evtnNHbj5Hmy7zQNlaVqemk2SxUH2lnXOdV/nD
      bTsw6/X8ZJ53rTg9nQfLKmjs7+XXdbXh4zaTiT/YuoNznVd5ZN16vld1nI05uWTZ7Qy6XIQ0
      dVb49agNwMDAtXg0gUCAsbExUlJSor1c8DZH1TR+dPoUFVnZoMH4ZE6BguQUesbHcL/DFv0P
      Xr7Elrz8WcfPdU6E1h5wORl0u/D4/WSm2DBP9q4zrDbaBq8/7D9ztZ2gOrt3nGm18XpLM73j
      43yochMmvZ7usVFeunhh1vbLmZh0eh5YW853q46H55JNOj2+YIBxn48Mqy2cZ2EhDHs8NPR0
      Rxy7PNkAN/b3zX62KHenbMjOwRMMsG7FxGLmay1N7Csp4zf1tVwdHuKBsnJS4+N5raU5HMOq
      PHMFRp3uluSyaBsanOV0ORV/a65nngr2OB//58Trs44dmBxV//L87HSwNV0OgqFQRC6Nueh3
      OvnhGyfZmhe5FhNvNNIxPMTx1hYybHbMegMlaen85MxpVE3DG5z9DkdtALKysjh48CBGoxG/
      3y/yASxTLHoDWfYEbCYTWfYE+p3jrM1cwdnODhLMFi729LCvpDScU+Bdq9fw9G0Ur78wNZUz
      HVdo7u/nvtIyWgcHSLNaub90LVkJCVyY0WDOpM85dzKg6ivt/OG2HTj9PmocDnSyjITEhyo3
      Adyw12c3m1EkmUfXTewkOdJ0iQ3ZORxpauTg5Ys8un4jkiTxwoV6chIS2bFyFUlx8Ty2sZKD
      ly7FWBKxc76zI2JqIqiqvN460Wi+cuki+UnJuAP+CI/wy329EYvbtyPR+lYMulwkz5jCBegZ
      GyM7IZGPb9uBLEkMe9ysSUtnf2kZKfHxvNbSRMO0vC4QpQFQVZU1a9ZQUFCA1+vFYrEgv4UL
      FYKlI85oJMliocbhoCA5mVGPJzyfazboKV+Rxcn2tnBoiddbmsOjgXcSiiSjyDKKJCNLElaj
      CW8wQIbVxnlHJwMu58Q8q15PVVsrAL+/ZVvEtM5CuLeklG++ehiP389Ht2zjeGszT54+BcAj
      6zbcMDtc7/gYz9ZE9hinFivdwH+ePAFcW1icvo8dIMNmi0nnWHEH/HSPjUUcG3a7gQkdZ/a2
      gfB8tSB2KlZkUX2lnZPtrdy5ajVFqWlc7uvlmZpzGHU6HttQuXAD4PV6OXfuHFu3bqW1tZW2
      tjY0TWPfvn3CCCxD+p3js4b9dZNxei719nKpN3IOdq6pgOWOTpbZV1qK3WRG0zSMOh2aptE9
      PsZLlxq4v3Qt2wtWct7Ridvv55F1G9ArCkcaL+MJBDDp5vaAV2SFTbl5rEpOmTAwkkR2YiKX
      envoHRvjXYVrGHQ50SsKeUlJlGZk0j06Sk5CIsNu96y98dHyTlqcF8xPUVo6OYmJFCQnU565
      ggGXizSrlb7xcR4qX4cn4KcsM5Nna3oYdLnYs7qIOIOBpjne5XkNwNDQEHa7HU3TaG5uZv/+
      /dTV1TE8PExycvJNeUCB4GYSVFVeuFB/3fMzk9T8fEaP+npomka/c5wXJxd0nX4fjX29uPx+
      XrrUQH5SMhaDgR++cQpfMIjT5yc5Lo7/PHVC9IAFUTPiceMLBmnu7ycQCjLsduH2+xn1enj6
      3JtkJSTw1NkzDLndPF9Xw5rUNAKqSsvkest0okoJWV9fj9frJTMzE1mWGR4eZs2aNTfl4QSC
      5YqqqbQPDV33/MyIrd1jozFPKQluX+aKpjuVWGnQ7WLQfS0hk6ppN9xZNa8BsFgsbNq0iZGR
      EfLz8wEoLCwU6SAFAoFgmTPvJL4kSSQmJjI0NBRepff7/QwPz3YqEAgEAsHyIapdQI2NjVy8
      eDFsADo6Orj77rtvqmICgUAguLlEZQDS09PJyckhLy8PgNLSUjEFJBAIBMucqPZx2u127rzz
      Tux2O263m1OnTuF7B+4NFwgEgtuJeUcAqqricDhoa2vD5/MxNDTEgw8+iHEy9KxAIBAIlifz
      jgAGBwd5+eWXWbNmDXfffTdpaWlYLJb5LhMIBALB25x5DUBKSgpPPPEEnZ2dHD58mK6uLgYG
      BhYceVAgEAgEby/mnQKSJAmz2cwdd9wBwPj4OI2NjdhsNhEOWiAQCJYxCw7mY7VaqaysfFs0
      /j6fjyNHjnDhwoVbrYpAIBAsO5Z1NLcLFy5gtVqFU5pAIBDEwLI2ABs3bgz7JggEAoFgYSxr
      AyAQCASC2BEGQCAQCG5TlrUBqKqq4tSpU/T29lJVVXWr1REIBIJlRdQ5gd+ObN++/VarIBAI
      BMuWZW0A5iMQCDA2mZvUJisUWGPPjZpmtoRlTSdZb1iU3FSDcU656UYT/kXITdTp5pSbbYkj
      Xop94BcvyXPKzY+3ElqEc6BJ02bJ1QVDiypbAJfTSVAXWc3NmrYouQZFmbMMrNLi6liyZe46
      lqTTL67uGk3XqWNGPIuqY/o55WaZ4zAtwk/UJl+/ji0mc5pZY5ZcXzC46DqmD4VmyfV7PIuW
      i98/S67q8y1absDjDcuVtBkuvYFAAIfDsagbvF0IhUIkJCQsuVxVVW9KPmQh9+ax3MpAyF2e
      cjVNC4fNX0qZwE2RO8sAvJNob28PZzFbSnw+300Jhrec5GqaRiAQWHKHQFVVAZb85fT7/ej1
      +iV/iZbTbybkTnAz624oFEKv1y+p3FAohKZp6HRLO2ETDAaX9yKwQCAQCGLnHb0GcLO4WWEw
      lpvcpe7pwNIPc6e4GbrC8vvNhNwJblbdXepeOiz9aHgKRVGEAYCJoZvf78doNEbVAEXznVAo
      FJ7OkCQJRVHmvW6+85qmoaoqiqIAE0O4YDA4r97zyZ0+7aJpWnjIeaMKHY2ugUAASZLCL5uq
      qvh8PgwGQ/gZFip3rmeOZtpoPrmBQABVVTEYDEiSFK4Ter3+urpGI3dKZ1mWw+Xr9/vR6XRL
      IneqXoVCofC0RqzlMDWFARONgyzLYbmLqWNzyY32nbvRuenv2FQ5BAIBNE0L/44LlTlT7lT9
      DwaDwEQdi7XuzpQb7e8Wzbvm8/kmGvRJfQOBALIs39AgSZIkDIDD4aCqqgq9Xo9er2f//v1L
      0gutqamhu7sbTdPo6enhox/96A1f+Pno6+vjyJEj5Ofns3XrVhwOB6dOncJoNKKqKg888EBM
      PQWHw8HBgwfZtGkTZWVleDwennrqKdLT07Hb7ezcuXPBMjVN45VXXsHrndhtsHfvXhITEzlw
      4ABms5mkpCS2bNkSk67V1dUYjUaCwSDvec97aG9v5/Dhw+zduzfm9Z6WlhZqa2vR6XQYjUb2
      7NnDb37zG0wmEyMjI9x///3Y7faYZPt8Pn70ox9x1113kZ+fz29/+1t0Oh2jo6M88sgjMefW
      cDqd/OAHP+D9738/drud3/72t9hsNjweD+95z3ti6onW1dXR3NyMyWRi9erVFBQU8Pzzz2Mw
      GEhKSmLnzp0xvRsnT55kcHAQRVFYu3YtBoOB119/PdwReOCBB2KSe/ToUTweD7IsU1lZydDQ
      EI2NjciyjM1m46677lqwTIAXX3wRmGggt2/fzujoKFVVVdjtdrKzs1m3bl1Mcp977jlMJhOy
      LHPnnXfi9/s5ePAg8fHxFBQUUFJSEpPc1157jbGxMWRZ5t5776WxsZGGhgb8fj8PPPAANtsN
      dg1p72Da2trm/c7o6Kjm9/s1VVW1Z555RvN6vUuqw9WrV7XDhw9rqqouSk5ra6vW1tamvfrq
      q5qmaVowGNRUVdVUVdWefvrpmPVubGzU6uvrtXPnzmmapmnt7e3a6dOnF6Wrqqra4OCgpmma
      1tHRoR07dkyrqqrSWltbFyV36pk1TdN+/vOfa4FAQLt06ZJWXV2tNTU1LVpuKBTSfvazn2nB
      YFALBoOapmladXW1dunSpZjkqqqqHTp0SDt48KBWX1+vBQIBbWRkRNM0TTt16pTW3Nwcs9zf
      /e532oEDB7SOjg6ttbVVq6qq0jRN01588UVtYGAgJrkvv/yyNjo6Gv5cX1+vnT9/XlNVVXv2
      2Wc1j8cTk9xnn31WC4VC4c9T75ymadrPfvazmN6Nqfd1+rWBQCD8O/7kJz+JSdepZ50u98SJ
      E5rD4YhJ3hShUGiW3F//+tfa+Pj4ouQODw9rL7zwQliuqqraU089pQWDQa2/v197+eWXb3j9
      bT8CsNlshEIhXnnlFdLT05d0zlHTNN544w3uvffeRY8qCgoKGBwcDH9WFIWTJ09SW1vL+vXr
      Y9Z79erVtLa2EggEAPB6vTQ2NtLe3s7atWspLi5esExJkkhMTKSzs5MjR47w8MMP8/LLL9PZ
      2cmZM2fIyclhy5YtCy4TRVGoqqqirq6O9evXo9PpKCoqoqamZsE6zpR75MgRLl++zM6dO1EU
      hStXrvDaa6+h1+t5//vfH5Pc7u5uVFUlJyeHUCiETqfDZrNx4cIF2trawjk2FkpTUxPJycnh
      8svJyeHIkSO0tLSg1+tJSkqKSa6maRw8eDDcQ+3v72ft2rVIkoTNZsPr9WIymRYsV5Ikfv3r
      XyPLMnv27MFmsxEMBjl48CDZ2dkx6QoT0xzPP/88Op2Oe+65B71ez8GDB2lqauLee++NSWYw
      GMTtdvPcc89hsVjYu3cvqqpSVVWFJEls3bqVrKysBcv1+XyMj4/z3HPPkZiYyO7du+nt7eXQ
      oUN4vV42bNjAmjVrFvxOdHd343A4eP755wHYv38/RqMRRVFITk6e059iOsrXvva1ry34aZYJ
      IyMj8/oB+P1+fvGLX1BeXs6GDRuWdBGyp6eH4eFhSktLl0Sex+Ohr68vPNWxYsUK8vLyOHPm
      DKtXr455YWt4eBifz0dGRgYpKSmUl5dTVFTEgQMHWL9+/YLlaZpGfX09tbW1PPzww1gsFq5c
      ucLdd9/N+vXrOXnyJEVFRTFNiWVmZlJQUMDp06fDz9zb2xuepoiVnJwccnJyOH36NMXFxSQm
      JrJy5cpw9ruUlJQFy3zqqadISUmhra2Nvr4+Vq1axfHjxxkfH+eBBx6I6flVVeUXv/gFSUlJ
      tLa2Mjo6SiAQICkpiX379uFwOLBarcTHxy9YdmFhIaWlpWRmZnL06FESEhKIi4vDZrNx+fJl
      8vPzY9qSWVJSQklJCTabjTNnzpCXl8cvf/lLSkpKYn7nJEli7dq1lJSUoCgKly5dIj8/n9zc
      XLKzs6mqqgobr4WgKAoVFRWUlJQwPj5OX18fW7ZsobS0lIKCAl566SXKy8sXrK9er2f9+vUU
      Fxdz9epVVFVleHiYhx9+mNLSUg4fPhyTvqOjo6SkpPCud70Lp9OJ2+2mr6+PkpISQqEQjY2N
      N5xauu1HAOfOnSM7OxubzUZfXx8pKSlLtup+8uRJ9u7duySyRkdHGRoawul0MjIywvDwMHq9
      nri4uPBiXSwMDw8zMjKC0+lkbGyMrq4uTCZTeK4yFjRNo6qqigcffJCRkRHi4+PJz8+nurqa
      DRs2EAqFYmr82traws+sKAqBQACPx8PY2BjBYJDx8XGsVuuC5TY2NmK1WjEajWiaxvDwMIOD
      g2RmZhIfH4/b7V6wTIDHH38cVVVpbm4OL4C3tbWxf/9++vv7SUhIWHCDKkkSH/nIR8LOQZmZ
      maiqyujoKKOjozidzph01TSN06dPk5eXx9DQEHFxcWGDpdfrGRkZiWm9QtM0Tp06RWFhIV1d
      XVitVmpqakhPTychIYG+vj7S0tIW3PBpmsaJEycoLi6mq2XOLZAAAAH+SURBVKsLu93OxYsX
      SUpKwmQyEQwGY3LK8ng81NXVsWrVKnp7eyksLOTcuXOkp6fj9/tjGgHBxHvW3t5Obm4uQ0ND
      FBUVkZaWRm1tLWlpaTH7OuTk5PD000+Tl5dHX18fOTk56HQ62trauHr1KmvWrLnh9bf9CEDT
      NNxuNyMjI4yPj5OWlraoxdrp6HQ6VqxYsSSy2traGB4exmw24/P5WLFiBU1NTXR1dbFu3TpS
      UlJi6kk1Njbi8/nCOzNycnJobW2lt7eX3bt3YzabFyxTm9wBNDY2xsjICEajkfz8fHw+H83N
      zWzfvp24uLgFy1UUJfzMFRUVJCcn09jYGN5lMjX1tFAkSaKxsZHe3l42bdpEcnIy3d3dtLW1
      YbfbKS8vj8kYGo1GTCYTFouFpKQkDAYDoVCI0dFRRkZGsNvtCy5fSZIi5KakpJCRkUEgEKC5
      uZni4mKys7Njqgt6vZ7GxkaCwSDbtm3DarWi1+tpaWlhx44dMf1mUzo3NjZiMpmorKxE0zQ8
      Hg8jIyOMjIzErO+UcU1MTKS8vBxJkrh8+TJ9fX0x66soCh6Ph+bmZrKyslizZg0mk4mmpibG
      x8fZtWtXTCNtg8HAyMgIbW1trFmzJjzidDgc9PT0sHPnzpiMgE6nIz09nbq6OvLy8sL/Ll26
      hNVqpaKi4oZl+/8At/0FspQ2BNoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='BigQuery BI Engine - AtScale' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='BigQuery BI Engine - Raw' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='BigQuery BI Engine - Raw Total' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Compute Cost - All Runs - 1 Vendor' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Compute Cost - All Runs - 1 Vendor Comparison' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Compute Cost - All Runs - All Vendors' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Cost - Raw - BQ Fixed Pricing' width='384'>
      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
      p8n/D/TFHUP3EL5LAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Cost - Raw - BQ on Demand' width='384'>
      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
      lmXR1dXF0aNHGRwcBKC3t5djx44RCoUA6Ovr4+jRowSDwXHv7evr49ixY4np/f39HD16lEAg
      kKxVEhF5rCQlACKRCDt27CAajdLe3k44HKauro4DBw6MqxseHubKlStMmTKFxsZGRkdH2b9/
      P2VlZezatYtwOExTUxPTpk2joaEhsUcRCoXYu3dvoi4SibBnzx6mTZvGjh07tOchInIfHuh2
      0A8iFovh9XpZuHAhAK+++ir19fXjavLy8li5ciX9/f24XC58Ph/z5s1j+vTpnDhxAp/Px5w5
      c5g6dSqZmZlEIhE8Hg/d3d3MnTs3UdfT08Ps2bOZOnUqWVlZhMNh3G438XgcuPkgm1gs9sDr
      YJrmF/8gJMEyLcLhcMrae5g+l8+T2v6T5EtKALjdbjZt2sSWLVvYsmULr732Gg7HnTsblmVx
      5swZ2tra2LBhA21tbbjdbuDmrSfi8Tgu181FdDqdiQ3y7dPvVedwOBJtxuNxnE7nA6+HYegc
      +UQyHEZKnyN9629CJkpq+0+SLylbuFAoxNDQEE888QQOh4N4PI5pmliWlfiv3+/H7/dz6dIl
      NmzYgNvtpqSkhKtXrxKJRAiHwxQXF9PW1kY8HmdoaAiPx8PIyEhiejQaJRwOU1RUxLVr14jH
      4wwODuL1ejEMYwKGZHw69jYx/XJ/g0y8VPafhuQPSQkAt9tNe3s7p0+fpra2llAoRFNTE4Zh
      sG/fPnp7e2lqaiIcDuP1etm9ezcHDhwgJyeHkpISdu3axfLly8nOzmbGjBnU19ezbNkyAC5e
      vEhOTg5Tp05l586dLFu2jKysLCoqKqivr+e55567696GiIiMZ1hJPGPa1tZGZWXlHdN9Ph+5
      ubmkp6cnq+lxHvYQ0I9+0cj59v4kLJE9VZTl8vPvfzVl7TW37uPt5rdS1t7jzuPy8svvvDPZ
      iyETKKkHSe+28QcoKytLZrMiInIfdKxERMSmFAAiIjalABARsSkFgIiITSkARERsSgEgImJT
      CgAREZtSAIiI2JQCQETEphQAIiI2pQAQEbEpBYCIiE0pAEREbEoBICJiUwoAERGbUgCIiNiU
      AkBExKYUACIiNpXUAPD7/cmcvYiIfAFJCQDLsjh16hTvvfce586dA6Cnp4c9e/bcUffxxx9T
      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
    </thumbnail>
    <thumbnail height='384' name='Elapsed Run Time (Minutes) - 1 User - 1 Vendor' width='384'>
      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
      tGPHDtm2rdWrV3uxNAAgTZ4EICcnRxs3bpQkWZY14XuftR0AkF2eBED67Dv4395u23bq67Gx
      saw8PXTMmSNHBZ6vA9wUSFbIHhqa7DFum6TjaH5R8WSPgd+R5U7yE/Idx0nd6Q8MDCgnJ2cy
      xwHuaI7jyLIsjrCRFs+OANL1m88GCoVCKiwsnMRpgDtbIpGQ3+/nWXZIC3sJABiKAAB3Eb/f
      z+kfpI0AGMR13dT1lt/8+lY/+1nfu9XlI9d1lUgkvvjAyJjP5yMAk+R2/JtJJBJyHMeL8T4V
      ATBIa2ur3nnnHbmuqwsXLqirq+szf/bKlSt6/fXXUztje3u7pBuv8n7rrbe0bds2HTt27HPX
      Gx0d1eHDh2/fHwCYwvbv36/m5mZJN57d2NnZKUkaHh7W1q1b9c477+jEiROfextHjx7V8PCw
      57PeNOkXgZE9sVhM0WhUPT09isVi8vv9GhgY0Icffqji4mItX748dfHwzJkzqqur0+XLl5WT
      k6MdO3bowoULWrBggebPn6/6+nrZtq1EIqFDhw4pHo9r1apVqa+XL1+eeiuQRCKhDz74QJK0
      cuVKhUKhSfs7ALzguq5GRkZSz2o8deqUDhw4oEWLFikcDquhoUHz5s2TbduybemXl7MAAAJa
      SURBVFtHjhzR9evXtWTJErW0tMjn82nVqlWp2+vt7VVLS4sqKiq0aNEiz47qOAIwzIoVK3T4
      8OHUoej777+vxx9/XOFwWB0dHZJuPHoZHx/XkiVL1NbWprKyMs2bN09NTU2qqKjQ+fPn9dZb
      b2lwcFBHjhxRbW2tVq5cqUAgoEWLFmnevHk6ePBgas2jR49qwYIFuu+++9TS0jIpf27AS93d
      3aqsrFR1dbW6urpSD5RWrVqlhoYGnT59Wm+99ZaGh4fV2tqqgoICPfroo8rPz1djY6MKCwv1
      0UcfpW7v8OHD+tKXvqTe3l5FIhHP5uYIwDDBYFA1NTXq6OhQXV2d/H6/QqGQKioqdOXKFUlS
      T0+Prl27pg8++GDCaSLLshQIBLR+/XpFIhFt375dhYWFKi0tVW5uri5fvqzjx49r7ty5E17g
      Nzg4qNHRUfn9fs2ePTvrf2bAa62trYpEIvL5fLp69arWrFkj6ca/mVAopA0bNigSiWjnzp2q
      rKxUXV2dcnJydO7cOXV1dSk/Pz91vcx1XfX19enAgQOS5Ok1AQJgoEWLFunAgQOqq6vTjBkz
      tGvXLg0MDGjt2rWSbuzML7zwgvLz83Xo0CF1d3crFApp165damho0KFDhxQOh1VWVqZ77rlH
      27dvV35+vu69916Nj4+rq6trwk7b0NCgw4cPq7i4mAuUuOs4jqPx8XE9/fTTsixLb731lqQb
      p3EOHjyokpIStbW1KRgMqrKyUvPnz9fu3bs1ffp0TZ8+XZFIRENDQ6qoqJB0Ixr33nuvIpGI
      bNv29DUd/x+tmyToK1VWTgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Elapsed Run Time (Minutes) - 1 User - 1 Vendor Comparison' width='384'>
      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
      JmIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Elapsed Run Time (Minutes) - 1 User - All Vendors' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd3Rc5YH///edKo2kUbWaZUm2ZLl3YxuwcYEYG3CK2SRAcja0TTiEZDeb
      7G7O2STkr2/anrMnJAtsIOQHIaGE5hCDwQTjBhhX2WqWqyxZVpc1qlPv7w+vJyi2jGVGzffz
      +sfyvTPzPPc+89zP3Oc2wzRNExERsRzbSFdARERGhgJARMSiFAAiIhY1KgKgra2NcDg80tWQ
      Ydbc3DzSVZBh1t7eTigUGulqyP8ZFQEQCAQY7ceiTdOkt7eXnp4e+vr6iEQi0XmhUIi+vr7L
      +ozOzk4aGxsv6/VXO7/fP9JVuGx+vz/a9oP9rgaDQY4ePTrg/IaGBtrb2y+YHggECAQC0f/7
      fD527NhBeXn5oMofTQKBQL++M9r09fXR3t4+5N/N06dP895773HmzBnOnDlz0fb/uKqqqiHZ
      Rjpi/olXqXA4zH/913+Rm5tLOBzG5/OxevVqZs+ezcmTJ6muruaWW24Z8P2mabJ582bKy8vJ
      ysqitraWz372s0ybNm0Yl0Ku1O9//3vC4TA2m42uri5uuukmZs6ciWEYn/jerq4udu7cSXFx
      8UXnV1ZWkpGRQWpqar/ppaWlBINBrrvuOgCeeeYZrrnmGrxeLz09PRw9epTZs2d/+oUTAHbv
      3s3777+P1+ulvb2d66+/nsWLF8e8HJ/Px3PPPceaNWtwu93s37+fzMzMC9r/4zZv3kxJScll
      fd8GQwEwCF6vl/vuuw8416kff/xxZs2aRVFREUVFRdHXmaZJd3c3LpcLh8OBzWajoaGByspK
      vvnNb+JyuWhra+PJJ5+kqKgIp9MJEG3cSCSCYRgYhoFpmnR0dOByuYiPj49OOy8UCmG326Ov
      //v3S2yEw2HuuusukpKS6Orq4rHHHqOkpAS3241pmrS3t+PxeHC73dH1bpomXV1dBIPB6OeY
      phn9ZZ+QkIDN9red8EAgQFdXF6mpqRiGwcKFC6PviUQihEIhrrnmGgBaW1s5ePAgM2fOBOj3
      OTJ4oVCIrVu38u1vfxuXy0UoFMLn8wF/608+nw+Xy0VcXFy0HwYCATo7O0lLS8Nms0X75vn5
      pmlG2+b8vObmZoqLi5k+ffoFffTj34/ExMSL9uG/7/8dHR3R8gdLAXAFTNOkqakJj8eDYRic
      OHGCsrIy1q1bR1tbG08//TTJyckEg0GcTif33nsvBw8eZNmyZbhcLgDS0tKYMGEC9fX1BAIB
      Tp48yerVqwF47LHHeOCBB4BzvzztdjudnZ3MmjWLZcuWsWnTJjIzM3nvvffIy8ujo6ODtWvX
      MmHCBMLhMI888ggPPPAA8fHxI7aOrmaJiYnEx8cTCoUwDIMnnniC9PR0mpqaWL58OXPmzKGp
      qYlnn32W1NRUurq6SExMBGDnzp3s3buX5ORk/H4/999/PwBvvfUWu3btIhKJkJGRwfr169m7
      dy/BYJAlS5bw1FNPcfr0aZ588klycnI4efIkDQ0NPPnkkxQUFHDzzTeP5CoZ885vPE+ePMnk
      yZNxOBykpaUB8POf/xyv10tycjInT57k/vvvJysri927d7Njxw6ysrJobm7m3nvvpba2lhMn
      TnDbbbdx+vRpfvazn/H//t//IykpiT/+8Y9MmTKFbdu24fP5aGpqYtmyZf3qsXHjRurq6oiL
      i6Ojo4Ovf/3r/fpxT08PTzzxBHfeeSddXV1s2LCBvLw86urquO+++/B6vYNabgXAIDQ3N/Pk
      k0/S1tZGMBjk61//OkA06QHefPNN1q5dy9SpU+ns7OTFF18E4OzZsxcM96Snp0d/OX481c+P
      kVZVVZGWlsa6deswTZNHHnmExYsXE4lE2LRpE/fccw85OTlUVlayfft27rrrLmpra8nMzNTG
      P8YikQgnT57E6XRSWVlJamoqHo+HnTt3Mnv2bJYuXUpfXx+/+c1vmDNnDn/5y19Yv349hYWF
      tLe38+c//xmAsrIy7rjjDrKysgiFQtENz7Jly1i0aBHBYJAnnngC+Nsvf8MwuO+++/j1r38d
      /c61tLSwadMmvvrVr47MCrnK2Gw2vvrVr/Laa6/xl7/8hSVLlrBo0SIcDgdut5v77rsPt9vN
      zp07qampISUlhZ07d/LQQw/hcrk4cOAAW7duZfXq1bz99ttEIhEqKiq49tprqaioYP78+bS0
      tHDnnXeSmppKRUUF69atA6C+vj5ajzVr1mC324lEIrzxxhscP36cGTNmAOeOJT377LOsWbOG
      cePG8corr3D33XeTmppKaWkpO3fuZO3atYNabgXAIKSnp3PXXXcRCoU4duwYr776avQX3Hlt
      bW0XHev1eDx0d3f3m9bT00NiYuKAB8XOnDlDXV0dL730EgCdnZ3Rg8ef/exnyc3NBaCkpISN
      GzfS29vLnj17hmTc0uoikQjHjh3jwIEDLFiwgC9/+csYhsGZM2fw+Xw0NDQA54I+HA7T1dVF
      fn7+BZ+zcuVK/vjHP5KcnMyiRYuinfv83qRhGBrOGSHZ2dl84xvfoK2tjbfeeovW1lbWrVuH
      w+GI7rnb7fboEG9qamp0+sSJE9m3bx9ut5u4uDg6Ozupra1l/fr1bNiwgdzcXHJyci7ZtqZp
      sn//fvbu3Ut8fDyNjY3k5eUB0NHRwa9+9StmzZrFlClTME2TxsZG3nnnHQB6e3s1BDTUbDYb
      Ho8HgLlz57J169YLzuaJj4+npaWF7Ozsfhv2wsJCDh48yNSpUzEMI7pBufHGG6mvr4/uAXx8
      TyAxMZHi4mKuvfZaAG6++eboUML5egA4HA4WL17Mzp07qa+v5/Of//zQrAALczgc3HjjjSxf
      vpwnnniC6dOnM2nSJBISEigoKIju3a1ZswabzUYkEiEYDOJ2u/t9TklJCSUlJbS0tPDcc8+R
      nZ19RfU5/x2S2Pj4eH16ejrr1q3jmWeeGfD1LpeL7u5uTNPEMAw6OjqIi4sDYOrUqezbt4/4
      +HhSUlLw+/0cPHgwGvYD8fv9vP/++zz44IM4nU62bdsWnZeUlMQXvvAF/vSnP7Fw4ULS09NJ
      Skpi1apV0RByOAa/OVcADEJnZyc7duwgHA5z4sQJ0tPTLxhqWbVqFb/73e8oKCigtbU1eoB3
      xowZbNmyhY0bN1JcXMz27duZPn06SUlJJCcnU1lZSV5eHseOHaOurg6AmTNn8thjj5GYmIjb
      7ebgwYPceeedF63b4sWLefjhh1m5cuUVfRHk8qSmpvJP//RP/OY3v2H9+vUsWrSI3/72t9EN
      ckVFBffccw/Tpk3jxRdfZO7cuZSWlkaD/aWXXqKwsJDExETC4XC08w6W1+ulvr6eAwcOkJCQ
      wOTJk2O5mJbT19fHk08+yfTp00lNTWXfvn3MmjVrwNcnJCSQlpbGxo0bmTRpEm+//Xb0h9f0
      6dP55S9/yec//3kMwyAvL4+9e/eyatWqS9bBZrMRCASorq6mra2Nbdu2ceutt0bn5eXlceed
      d/K73/2O+++/n/nz57NhwwYWLlxIQ0MDDofjE8v4e8ZouBlcQ0MDGRkZo3rDZZomhw4dip4K
      mJ6eTm5uLjabjZ6eHjo6OsjJycE0TYLBID6fj3A4zJtvvsndd98NnDvLY//+/Zw9e5bOzk78
      fj933HEHNpuNiooK6uvrKSoqwjRNJk2ahGEYdHZ2UlFRQSQSoaSkhLS0NBobG0lKSiIhIaFf
      /R599FHuvPPO6MGr0a6uri66izvanTx5kry8vOh3tKOjg4aGBkpKSmhvb6eqqgqHw8GUKVNI
      Tk4mEolQVlZGc3NzdOOcn5+Pz+ejrKyM3t5eZsyYQXZ2Ns3NzbjdbrxeL5FIhJqaGiZOnEh7
      ezuRSIT09HRM0+T48eP9zjZrbGyksrKS3NxcSkpKRmS9DFZjY2O/oZPR4vwZW4cPH6a3t5f8
      /Hzy8/MxDIPjx48zceJEDMOgra0NwzBITU0lHA5z4MAB2tvbmTZtGrm5udGzf8rKyiguLiY+
      Pr7fd8UwDLq7u/H5fOTk5ADnji26XC6Sk5NpbGykrKyMtLQ0cnNzcbvdpKSkROsA0NTURDgc
      JicnhxMnTlBXV0d6ejolJSXRH5yX64IACIVCw35RVlNTE2lpaaM6AC7X9u3biUQipKamsnfv
      XubOncu8efMueJ1pmuzYsYMpU6aQmZn5qcrs7u6moqKCo0ePcscdd4yZ0z/PnDkT7QRiDS0t
      LSQnJw96QyVD44IAaGtr63f14XAIBAKkpKQMa5kyss5fTHepi1/k6tPS0kJGRsZIV0P+zwU/
      uYdr+OD8UAmcu6jq4wc15eoXDofp7e1Vu1uMw+FQm48iQzLm0t7ezsmTJ5k4cWL0l31fXx+n
      Tp0CIC8vD4/H0+/o9dUw/COX7/wZF2p3a1Gbjy4xP+G4p6eHrVu3kpub228oqbq6Gp/Ph9Pp
      HDNj1CIiV7OYB8CRI0dISkriyJEj0fNi4dyxhZ6eHgzD6DddRERGRswDIBAIkJ2dHT3v/bwl
      S5YwY8YMampqqKqqinWxIiIySDEPgIkTJ1JXV4dhGDidzugv/9raWgzDuOStD0REZPjEPAAy
      MjKYPHky5eXlLF26lGAwSDgcJiMjg+rqalwul+6BLyIyCoyKK4F9Pt+gb2MqY1swGKS1tfWK
      74UjY9NYuvrbCnTbQRERi1IAiIhYlAJARMSiFAAiIhalABARsSgFgIiIRSkAREQsSgEgImJR
      CgAREYtSAIiIWJQCQETEohQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLGpIAaGlp
      4aOPPqKtrS06LRKJcOjQIWpqahgFDyETEbG8mAdAd3c3O3fupLi4uN+Gfs+ePdhsNg4fPkxT
      U1OsixURkUFyxPoDjx49isfjoaysjNmzZ0ent7a2cs0115Cbm0tVVRWZmZmEw2EAwuEwfr8/
      1lWRUSwUChEKhdTuFqO+PrrEPACCwSB5eXnk5uby3nvv8bnPfa7ffMMwonsGhmEAYLPZcLvd
      sa6KjGI2mw2Hw6F2txi73a42H0ViPgQ0ceJETpw4QSgUwul00tLSQnd3NykpKVRXV7N3714m
      TpyIYRjY7Xbsdns0CEREZPjEPADS09OZOXMmR44c4YYbbsA0TUzTZNGiRXR3d5Ofn092dnas
      ixURkUGK+RAQQH5+Pvn5+QAkJiZGp8+fP38oihMRkSug6wBERCxKASAiYlEKABERi1IAiIhY
      lAJARMSiFAAiIhalABARsSgFgIiIRSkAREQsSgEgImJRCgAREYtSAIiIWJQCQETEohQAIiIW
      pQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIcsf5A0zR58803cblcFBYW
      UlxcDEBzczN79+7F4XCwYMECUlNTY120iIgMQswDwOfzkZyczJIlSzAMIzq9pqaGefPmkZGR
      gc2mHQ8RkZEW8wDo6+vjzJkzvPXWW8yfP5/s7OzovD179uBwOFixYgUul4tgMAhAMBjE7/fH
      uioyioVCIUKhkNrdYsLhsNp8FDFM0zRj+YHnPy4YDPLWW2+xbt266HTDMKitreXMmTMsWrQo
      +h6fz4fX641lNWSUCwaDtLa29vuBIFe/uro68vLyRroa8n9ivgdw6tQpDh8+jGEYZGVlUV1d
      TUpKCqdOnaK7u5uWlhauv/76WBcrIiKDFPMAyM/PJzs7m3A4THx8fHSPYNy4cfT09OB0OnE6
      nbEuVkREBinmAWAYBm63u9//z0tISIh1cSIicoV0Oo6IiEUpAERELEoBICJiUQoAERGLUgCI
      iFiUAkBExKIUACIiFqUAEBGxKAWAiIhFKQBERCxKASAiYlEKABERi1IAiIhYlAJARMSiFAAi
      IhalABARsSgFgIiIRSkAREQsSgEgImJRCgAREYsakgAIhUKEQiEikUi/6cFgkHA4PBRFiojI
      IDli/YHhcJjnn3+e3NxcCgoKKCoqAqC2tpZ9+/YRDAZZt24dbrc71kWLiMggxDwA2traKCoq
      YtGiRdjt9uj08vJybrnlFhobG6moqGDevHnReaZpas/AYiKRCJFIRO1uMerro0vMA8DlcuH3
      +3njjTeYMGECc+fOBc41vNPpJDk5mRMnTmCaJsFgEDi31/D3w0VydTNNE0DtbjGmaarNR5GY
      B0BcXBw33HADkUiETZs2MWvWLAzDwG6309PTQ2NjI2lpaRiGgcvlOlcJhwOn0xnrqsgoZ7PZ
      1O4WozYfXYZkCGjfvn1EIhFmz57NsWPHSElJYcGCBWzevBm73c6aNWtiXayIiAySYZ7fFx9B
      Pp8Pr9c70tWQYRQMBmltbSU7O3ukqyLDqK6ujry8vJGuhvwfXQcgImJRCgAREYtSAIiIWJQC
      QETEohQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIUACIiFqUA
      EBGxKAWAiIhFKQBERCxKASAiYlEKABERi1IAiIhYlAJARMSiFAAiIhY1JAFgmia7du2iq6sr
      Ou3s2bNs3bqVHTt20NHRMRTFiojIIDiG4kOPHTvG4cOHyc/PJzExEYDjx49TWFjIuHHjcLvd
      Q1GsiIgMQswDIBAIUFVVxaxZs/pN7+3tpaysjKSkJK6//npM0yQYDAIQCoXw+/2xroqMYqFQ
      SO1uQeFwWG0+isQ8AHbu3InNZuPw4cO0tLSQk5MDwHXXXYdpmhw7dowDBw4wf/58nE7nuUo4
      HNorsBibzaZ2tyC73a42H0ViHgBLly4lHA5z6NAhMjMzqampISkpiZqaGhwOB6dPn2batGkY
      hhHrokVEZBBiHgBOpxOn08msWbNwOBwEAgEcDgczZ86koaGBnJwc0tPTY12siIgM0pAcBAaI
      i4s7V4Djb0VMmDBhqIoTEZFB0nUAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCI
      iFiUAkBExKIUACIiFqUAEBGxKAWAiIhFKQBERCxKASAiYlEKABERi1IAiIhYlAJARMSiFAAi
      IhalABARsSgFgIiIRQ3ZM4FHE9M0MU0TwzAwDKPfdCA6LRKJRF9zft55H3+fiMjV4KoPgN7e
      Xn7+85/jdrtJSUnhgQceAKCiooIXX3yRvr4+HnroIRoaGnjttdcwDIMf/vCHPPXUU3R3d1NV
      VcV//Md/UFxcPMJLIiISW0MSAKFQiBdeeIGbb76ZjIwMAJqamvjggw8wDIO1a9fidDqHougL
      xMXF8cMf/pCenh5++tOfRqe/8847fOc73yEcDvPMM8/Q3d3Nj370I7Zv386HH37IAw88QCgU
      4uGHH2bSpEnDUlcRkeE0JAGwe/du0tLSCAaD0WkHDhzg5ptvpr6+nsOHDzNz5szoPNM0iUQi
      Q1EVALZs2cL//u//cscdd0TLmTVrFo888gjJycm0tLTg8XhwOBzk5+ezb98+IpEIW7duZenS
      pQBDWj+rGup2l9FHbT66xDwAWltb8fv95OTk9JseDoeJi4tj3LhxHDhwANM0owERDocJhUKx
      rgpw7gu3dOlSli5dysMPP8zatWux2Wxcd911zJkzh8bGRt577z1aWlro7u7myJEjZGVlEQwG
      2bx5Mz/60Y+GrG5WFgqFiEQiWrcWozYfXWIeAEePHiUYDHLo0CHq6+ujQWCz2QgEArS3t+P1
      ejEMA5fLda4SDkf071irqanh6aefxuPxUFhYSGNjI1VVVRQXF/PKK6/Q3d3Nv/7rv1JTU8PP
      f/5zHA4H//mf/8nx48dZsWIFHo9nSOpldYZhYLfbh6zdZXRSm48uhvn3p7vESGVlJRkZGbS2
      tpKamko4HOajjz4iHA6zbt26fl8Cn8+H1+sdimoAf9vttNls/c7mCYVC2O326LRwOHzBa2Ro
      BINBWltbyc7OHumqyDCqq6sjLy9vpKsh/2fIAuBiwuEwhmFgs/W//GCoA0BGHwWANSkARpdh
      PQ3Ubrdf0ftMMwLm2D1wZNiu+rNtRWQMGhNbpr4zf6K37v8b6WpcEcORQur850a6GiIiF9Ct
      IERELEoBICJiUQoAERGLUgCIiFiUAkBExKIu+yyguro63njjDdra2gDweDysWrWKGTNm6MIp
      EZEx6LICoK6ujq1bt3L77beTnp4OQFdXF1u2bCEQCDB//vwhraSIiMTeZQXA+PHj+cpXvkJD
      QwONjY2UlpYSCARYt27dBQ9OERGRseGyjgGcH+LZunUrfr+fsrIyGhoa6Ozs1PCPiMgYNaiD
      wJMnT+ZXv/oVy5Yti97eWURExqZB3Qpi3rx5xMfH43K5WLly5bA91UtERGJvUAGwZcsW6uvr
      CQaDBINBCgoKcLvdQ1U3EREZQoMaAmpvb2fmzJkEAgGampp0AFhEZAwbVACsW7eOo0eP0tfX
      x6233qpjACIiY9ighoB27NjB0qVLyc7O5uWXX6akpISEhIShqpvIFSstLWX79u0UFBRw2223
      9Ttb7dChQwQCAebOncvrr79OQ0MDt99+OwAbNmzAMAy+9KUvkZSUNFLVFxkWl70HUFZWxvPP
      P8+vfvUrfvKTn1BWVqbxfxm1bDYbX/va16ipqaG6ujo6vbe3l6effpr333+fDz74AL/fz+23
      386jjz5KT08Pt956K0uXLuWpp54awdqLDI/L3gOYPn06Dz30EOPHjyc5ORmbzXbBox1FRov8
      /Hz+8Ic/UFNTQ2FhIXDu2dCPP/443/jGN3j77beZMmUKzz33HBUVFSxYsIAJEyawYcMGduzY
      wb333juyCyAyDC47AGw2G6FQiEcffRSAQCDAww8/jMMxJh4qJhbj8XhYuXIlra2t1NTUUFJS
      wpEjRygtLSU5OZndu3eTnZ3NZz7zGebNm8fzzz/PunXrWLRoEaZpsnfvXmbMmDHSiyEypAa1
      9Z4/f370vj+PP/44oVBIASCj0quvvsqUKVOIj4+nq6uLt99+m+XLl/OLX/yCrq4umpqa8Hq9
      HDlyhKysLPr6+ti2bRtOp5PU1FROnTo10osgMuQGtfXet28fb7zxBgBnz5696Gva29v58MMP
      MU2T2bNnk5eXB0BTUxN79uzB6XSyYMEC0tLSPmXVRQZ2/fXXc+jQIdasWcO0adM4fvw4breb
      cePGkZaWxt13301WVhbZ2dk0Nzfz/e9/n1AoxEcffYTD4eCb3/zmSC+CyJAzzEGczB+JRGhv
      bycSiWC320lNTb3gXkCBQAC73U4gEGDLli3ccsstAOzZs4f8/HzGjRt3ruCPvc/n8+H1egcs
      t7f+BT0U/ioTDAZpbW0lOzt7pKsiw6iuri76o1BG3qD2AN588032799PSkoKcXFx3HPPPdjt
      9n6vcblc7Nq1i4MHD0Y3/nBug79nzx4Mw2DlypW43W6CwSBwbmPg9/sHLDcUCg2mmqOKiXnJ
      ZbOqUChEKBTSurGYcDisNh9FBhUALpeLz33uc0yZMgXDMAY8C2jhwoVMmjSJjz76iPHjxwPn
      jh8YhkFdXR0HDx5k0aJFuFwuAJxO5yVPKY04HAQHU9FRxMDQ6bIXYbPZcDgcA64bM9xDT+3Y
      PRXTnXkbDk/hSFdj1LHb7eoPo8igAiA9PZ2XX36Z+Ph44uPjefDBBy84CHzs2DFOnDiB3W4n
      MTGRw4cPk5KSwqlTp+js7KS1tZUbbrghpgshVx8z4sfftHGkq3HFnCmLQAEgo9xlB0B9fT1F
      RUV87WtfA879gvv74R+ASZMmkZeXRyQS6XeriMzMTPx+Pw6H46LvExGR4XXZAVBVVUVubi4f
      ffQRAHFxceTl5V2wMTeMgYc8dO8gEZHR47IDoKCggIaGBoqKioBz4/Z6GpiIyNh12QGwadMm
      KisrWbZsGSkpKdEDuCIiMjZddgA8+OCD1NbW8v7773Pq1Kno+fwiIjI2Xfbd3CKRCHBu6Ke3
      txefz6cHwoiIjGGXvQfw5JNPUl5ezpIlS5g7dy4ul0vHAERExrDLDoBVq1YxdepU4Nxtdc/v
      EYiIyNh0WQFQV1fHvn37WLt2bfSePX19fbz99ttkZWUxb968Ia2kiIjE3mUFwPjx41myZAnP
      PvssnZ2dwLnbQqxatYrZs2cPaQVFRGRoXFYAGIZBQUEBDz74YPTAr8b/RUTGtit+pqPOABIR
      GdsGdTO4kydP8txzz5GVlYVhGPzjP/6j7usjIjJGDWoP4L333uOBBx7A5XLR19dHb2/vUNVL
      RESG2KAC4KabbuKxxx5j27Zt2O12EhIShqpeIiIyxAY1BJSZmcmtt95KKBTC5XJhmqYOBouI
      jFGDCoCXX36Znp4exo0bh8vlYvr06UNVLxERGWKDCoDi4mJqamrIy8vD4XDo17+IyBg2qGMA
      x48fp7OzkzNnztDY2KhTQUVExrBBHwNobm4mKytLewAiImPcoIeA+vr6aG5u1gNhRETGuMsO
      gM2bN5Obm0t9fT0AbrdbQ0AiImPYZQfA5MmTSU9PJyUlBQCbzYbNdvFDCMFgkEgkcsEzAwKB
      ADabDYdjUDseIiIyBC57S/yXv/yFu+++m/Hjx1/ydY2NjRw4cACAjIwMFixYAMCpU6c4cOAA
      gUCA2267jbi4uE9RbRER+bQuOwD6+vr4yU9+Ev317vF4+O53v3vBr/msrCxuvvlmGhsbKS8v
      j06vqKhg7dq1NDU1UVlZ2e8ZAqZpEg6HByw7EhnLQ02XXjarikQiRCKRAddNZIyvs0stm5Vp
      vYwulx0Abreb733veyQmJkanDXQjuA8++IBDhw6xevXq6DTTNHE6nXi9Xo4fP45pmgSDQQDC
      4fAnPGFsLAcAenraRZw/fjTQuhnrx5f01LyBab2MHpcdAOvXr8fr9X7i3T+DwSBLlizhmmuu
      YePGjUyYMAHDMHA4HPT09HDmzBnS09MxDCN6JpHD4cDpdA74maEBjjWMDcYll83KbDbbgOsm
      MrgT1EYdu92udr+IS7W5DL/L7mWfNPZ/Xn19PeXl5RiGwdSpUzl+/DjJycksWGNgUXcAABy0
      SURBVLCAd955B4fDwc0333zFFRYRkdgY1M+s8vJyXnrpJZxOJx6Ph4ceeuiCYwAFBQUUFBRc
      9P2f/exnr7ymIiISU4MOgK985SsUFhYCAx8DEBGR0W9QATB+/HieeuopcnNziYuL45577lEI
      iIiMUYMKgAULFjBlyhTg3EPhB7oQTERERr9BBUBlZSWbNm0CoLW1lZ/+9Ke6qldEZIwa1NZ7
      3rx50Qu4Hn30UQKBgAJARGSMGtTWe+/evWzcuBHTNDFNUxt/EZEx7LK34KZpUlhYyL/9278R
      FxdHVVWVjgGIiIxhlx0A27Zt49133yUQCHDDDTdQWVkZPSAsIiJjz2UHQHl5Od/97nfZv38/
      H3zwAd/73ve0ByAiMoZd9hbcNE3++7//mw0bNtDY2MgjjzxCKBQayrqJiMgQuuw9gK9//ev9
      buNqGIYuAhMRGcMuOwCcTqfu4icichXRIL6IiEUpAERELEoBICJiUQoAERGL0r0cROSqYJom
      L730EsePH2fOnDmsWbMmOi8cDvPrX/+ar371q7S0tPD666+Tm5vLXXfdxcaNG6msrCQ1NZW7
      777bUmc3ag9ARK4K4XCYCRMm8C//8i9s376937w33niDI0eO4PP5eOGFF3jooYfw+/2UlZWx
      cOFC/vmf/xm/38+pU6dGqPYjQ3sAInJVcDgcLFq0iBdffJGJEydGpzc3N3P48GGWLl0KQCQS
      4fDhw7hcLiorK8nIyODHP/4x4XCY/Pz8kar+iNAegIhcFUzT5Be/+AWpqancd9990elPP/00
      vb29bNq0iQ0bNvCd73yHU6dO4fP5SE9PJysri3//938nMzOTw4cPj+ASDD/tAYjIVaG9vZ2d
      O3eSlZXF888/z4oVK6L3MDNNkxdeeIHFixdTXl5OMBjk2LFj3HfffTz66KNkZ2fT3NxMfHz8
      SC/GsIp5AJimSVNTE+3t7UyaNAmXywWA3++nvr4egJycHOLi4mJdtIhYWHJyMk899RQANpsN
      r9fL9ddfj2EYGIbB+vXrcTgcZGdnU1tby9q1a3G5XNx9992cOXOGG2+8kZSUlBFeiuEV8yGg
      xsZGjh07BsCWLVui06urq2lsbCQUChGJRGJdrIhYnN1uJyMjg4yMDNLS0nA4HP1+0bvdbux2
      Ox6PhylTpkTnJSQkUFxcbLmNPwzBHkB2djbZ2dkcPXq038pvaWnB6XTi8XiIj4/HNM1oEITD
      Yfx+/4CfOZbvOmpiXnLZrCoUChEKhQZcN2YwMMw1iq1gMIipdr/AJ/V1GV5DMgS0bds27HY7
      y5Yti05fsmQJnZ2dHDp0iK6uLkpKSqLzDMOIDhVdTMThIBjrig4Tg0svm1XZbDYcDseA68a0
      uegZ5jrFktPpxKl2v4Ddbr9kfwi276Sv6Y1hrFHsGLY4Eif/cKSrMSgxD4BTp07h9/tZvHgx
      vb29BAIB3G43Z86cIT09nYyMDILBYL/bSdtsNgzDiHVVRo2redk+rYHWjTnM9RgKaveLu9R6
      iQSaCPn2D2NtYsewe8Zcm8c8AOLj40lKSopeWef1ejEMA6/XS1lZGR6Ph1mzZsW6WBERGaSY
      B0BmZiaZmZkXnZeRkRHr4kRE5ArpQjAREYtSAIiIWJQCQETEohQAIiIWpQAQEbEoBYCIiEUp
      AERELEoBICJiUQoAERGLUgCIiFiUAkBExKIUACIiFqUAEBGxKAWAiIhFKQBERCxKASAiYlEK
      ABERi1IAiIhYlAJARMSiFAAiIhalABARsShHrD8wEAiwe/duOjs7mTNnDjk5OQD09vayc+dO
      EhISWLJkCYZhxLpoEREZhJjvAXR2djJ58mSWL1/Ovn37otM//PBD5s6di8vl4sSJE7EuVkRE
      BinmewDp6emEQiG2bNlCUVFRdHpfXx8ZGRm4XC4OHjzIxIkTCQaDAASDQfx+/4CfGQqFYl3N
      YWNiXnLZrCoUChEKhQZcN2YwMMw1iq1gMIipdr9AOBy+evu6yZjr6zEPgFAoxCuvvMKyZcui
      wz/nRSIR+vr6cLlcGIaBy+UCwOl04na7B/zMiMNBMNYVHSYGxiWXzapsNhsOh2PAdROxuegZ
      5jrFktPpxKV2v4Ddbr9kfzAdDsZq9BsGY66vxzwAqqqqMAyDU6dO0dnZicPhwOv1UlBQwJYt
      W2hvb2f16tWxLlZERAYp5gFQUlLChAkTzn24w4HT6cRms5Genk5mZiZut5vExMRYFysiIoMU
      8wBwuVzRoZ2/l5GREeviRETkCuk6ABERi1IAiIhYlAJARMSiFAAiIhalABARsSgFgIiIRSkA
      REQsSgEgImJRCgAREYtSAIiIWJQCQETEohQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoA
      ERGLUgCIiFiUAkBExKIUACIiFjUkAWCaJr29vf2mhcNhfD4fPp+PcDg8FMWKiMggOGL9gd3d
      3WzevJlIJML69euj06uqqjh16hSpqalMmzaN5OTkWBctIiKDEPMAiIuLY926dWzevLnf9NbW
      VvLz88nLy8Pr9WKaJqZpAhCJRAgEAgN+5tjeYzAvuWxWFQ6HCYfDA64bMxQc5hrFVjgUUrtf
      xKXa/Pz8sco0GXNtHvMAsNvtF50+Y8YMmpub2bZtG7NmzaKgoIBIJAKcGzJyOAauSsg2lg9V
      GJdcNiuz2WwDrpuIefHv0Vhhs9vV7hdxqTYHCI/lvm4w5to85rU9/6v+/N9+vx+73U4oFKKk
      pAS3201bWxuFhYXRlWW327FdouENw4h1NYfVpZbNqgzDwDCMgdfNGF9nl1w2C/uk9TKW+7rB
      2OvrMQ+A1tZWDh06hGma7N27l4yMDJKSkujr6+Ptt9/G7XZzww03xLpYEREZpJgHQEZGBitX
      rrxgenp6OgUFBbEuTkRErtDY2l8REZGYUQCIiFiUAkBExKIUACIiFqUAEBGxKAWAiIhFKQBE
      RCxKASAiYlEKABERi1IAiIhYlAJARMSiFAAiIhalABARsSgFgIiIRSkAREQsamw9v0wGrays
      jNOnT3PjjTdGn8DW19fHX//6V/Lz85k5cybNzc3s2LGD6667jpSUFD766KPo4zqXLVs24GM+
      RWRs0x7AVezUqVO89tpr2Gw2nn322ej0xx9/nOzsbP785z9z5MgRfvnLXzJjxgx+8YtfEIlE
      SExMJCEhgaeffrrfIz5F5OqiALiK7dq1iy9+8YvcdNNN1NfXR6efPXuW6dOn8w//8A9s3bqV
      uLg4ioqKKCkpob29nfnz5xMfH8+KFSvG3EOuReTyKQCuYpFI5KIb8LvuuotHHnmEP/zhD8TH
      x7No0SJ++ctf8t5772Gz2TBNkxdffJEvf/nLI1BrERku+nl3FVuwYAF//vOfWbZsGampqdTV
      1REfH09ycjL33nsvTz31FEuXLsVmszFnzhyam5sZN24cVVVVFBQUEBcXN9KLICJDaEgCwDRN
      wuHwBb8+/X4/drtdwwrDpKioiAULFlBdXc0999xDfX09DoeDrq4u3nvvPW666SYKCgrYtm0b
      x44d41vf+hYOhwO73c6XvvSlka6+iAyxmG+J/X4/7777LuFwmNtuuy06vaamhoMHD+L3+7nt
      ttv063IYGIbBDTfcEP3/pEmTon8XFxdH/16+fDnLly+P/r+kpGR4KigiI2pIfoovX76cbdu2
      9ZtWWVnJ2rVraWxspKKigvnz50fnmaZJKBQa8PPOn5I4Nl162awqEokQiUQGXDdmODzMNYqt
      SHjgZbOyS7X5uflj96wzE8Zcm8c8ANxu90Wnm6aJw+HA6/Vy/PhxTNMkGAwCEB7jnX0o7T5V
      Q93Z9pGuxhUZl5jE0klFF533SaeXjv3TT8d6/UfG2G/3sWXIB+NDoRA2mw2Hw0F3dzf19fVk
      ZGRgGAYul+tcJRyOSx4XCNrG8slKxqc65rHtxDG2Hj0Sw/oMn7nj81hRMuWi80zTjH4vLiZi
      ju3jRDYd67qoS7U5QMg+dvu6AWOuzWNe25aWFg4ePEhnZye7d+8mJSWFlJQUFi5cyLvvvovD
      4WD16tWxLlZERAYp5gGQkZHBqlWrLjpv3bp1sS5ORESu0NjaXxERkQuYpslzzz1HXV0dd999
      N5mZmQBs3ryZw4cPEwqFmDdvHi6Xi/fff5+cnBzuuOMOXQksIjLWlZeXEwwGueeee3jqqaei
      01esWMF9992H1+slOTmZ119/nW9/+9s0NjZy+vRpBYCIyFh3+PBhlixZQkZGBqZpRs+mcjqd
      OJ1Ojh49yuzZs5k4cSLf//73OXr0KC6XSwEgIjLWJSQk4PP5ME2TSCSCYRjRea+++iqf//zn
      iUQi1NXV8bOf/YxFixZRU1OjABARGeuuvfZann/+eR577DGmTZvGvn37qKioIBgMsn//fq65
      5hpsNhuhUIhXX32VQ4cOMWHCBB0EFhEZ65KTk/nRj37E2bNnyc/PJxAIYBgGdrudH/zgBxiG
      gWEYPPzww9TW1rJmzRqSkpIUACIiV4Pk5GSSk5OB/ndk8Hg80b9dLhdFRX+7Ol9DQCIiFqU9
      ABGRUeDl0v3sq6sd1jIVACIio8Cp9jb2D3MAaAhIRMSiFAAiIhalABARsSgFgIiIRSkAREQs
      SgEgImJRCgAREYtSAIiIWJQCQETEohQAIiIWpQAQEbGoIbkXUH19PZ2dnUyePBmb7VzG9PX1
      UVdXB8D48eOJj48fiqJFROQyxXwPoLW1lf3799PX18fevXuj06urq2lra4sGgoiIjKyY7wEc
      PXqUxYsXk56ezqZNm6LT29rasNvtOBwO4uLios+uBAiHw/j9/gE/MxQKxbqaw8bEvOSyfZJI
      OBLD2gyvSCQy4LKHQiFCodCA881gYCirNuSCwSDmp2j3q9VV3ddNPlVfD4fDMazN5Yl5AEQi
      Eex2+wXTlyxZQldXF2VlZfT09DBlypToPMMw+j3B5oLPdDgIxrqiw8Tg0sv2SWz2sbvHZLPZ
      Blx2m82Gw+EYcH7E5qJnKCs3xJxOJ65P0e5XK7vdfsn+YDocjNXoNww+VV+/2HZzqMU8AAoK
      CigtLaWwsJDExETa29txu93U19eTnp5OcnIy4XA4+rxKQMNCIjF06NAh3nrrLa677jquu+46
      ALq7u/n9739PT08Pq1atIikpiddffx2bzcadd95JXFwcv/3tbxk3bhx33HHHiGyMZPjFfMub
      k5NDVlYWjY2NLFmyhEAgQCgUIi0tjaqqKmw2G9OmTYt1sSLCuWGE559/nm9+85ts2rSJ3t5e
      4Nxe9vr163nggQf405/+hNfr5f7772f16tW88sor/Pa3v2X9+vW4XC527949wkshwyXmewCG
      YfTbwGdlZUX/vvbaa2NdnIh8TE9PD9nZ2cTHxzNx4kTOnj1LfHw8Ho+HrVu38vrrr/OFL3yB
      cePG8T//8z+Ulpbygx/8gD/+8Y9MmDABu93OO++8w5IlS0Z6UWQY6JGQIlcRu91OIHBuFN3v
      9+Nw/K2L33TTTUyaNIlnnnmGz3zmM9x7771s376dd955h3A4jGma9PT0fKpxbBlbFAAiV5H4
      +Hj8fj8vv/wytbW1JCQksGHDBqZMmcKHH35IWloaDoeDTZs20d3dTWdnJ06nk/nz5/P4449T
      W1vLt771rZFeDBkmCgCRq4hhGHzve9+jurqatWvXEhcXx/Lly/F6vcTHx9Pd3c3NN9+MYRgc
      P34cl8tFYWEhhmFw7NgxkpKS+g3bytVNASBylXG5XMycOTP6/5SUFODcGXofN3Xq1H7/Ly4u
      HvrKyaii8y9FRCxKewAio8zxlhZ+v2fXSFfjiv3L8lUk615fY4ICQGSU6ejrZVfNyZGuxhXz
      h8fu7RysRkNAIiIWpQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIUACIi
      FjUkAXD06FF2797d7yHH4XCYPXv2cOTIEUzTHIpiRURkEGIeAA0NDdTU1JCens4HH3wQnb5r
      1y5SU1Opra2loaEh1sWKiMggxTwATp48ybx585g4cSKdnZ3R6R0dHUyaNIn58+dz4sSJWBcr
      IiKDFPMAMAzjkvNN0/zE14iIyNCL+d1AJ02axK5duygoKCAlJYXGxkY8Hg/p6emUl5dTV1fH
      /PnzY12siIgMUsz3ADIyMpgxYwbhcJjFixfjcrmw2+0sXLgQgGnTpjFu3LhYFysiIoMU8z0A
      wzDIz8+P/j81NTX698cfUyciIiPLMP/unMzm5mb8fv+wViIUCuFwDJxFZqiTSMg3jDWKIcOG
      3Z1zxW9v6+mhNxiIYYWGj9vhICMh8aLzTNMkFArhdDov/mYzTNg/ds8WsznTMexxV/RefyhE
      S3dXjGs0fLKTvNhtFx9cCAaDA7c5YIa6iIQ6hqpqQ8zAHpd7xe9u7+mhZ5j7+gUBMBIaGhrI
      yMi4ZAhcrQKBAC6Xa6SrMSLq6urIy8sb6WoMu/PXx9jt9hGuyfBrbGwkNTXVkt/50djXdSWw
      iIhFWe8n9yhzqd1huTrZBhgekavbaOzrY/6baJom7e3tRCIRALq7uwd8bSQSobGxsd97z+vs
      7KSuro5A4NJjcI2NjQSDwU9Z678ZimsiwuEwTU1N0f+fX07TNDl79iynT58mFLr0g7vr6upi
      Xq9Y6u3tpbe3N/r3+fa/mNbW1uhxLdM0o+sjFApRW1uLz+e75O1JgsFgv+/Np2UYxpC0e1NT
      U7RdP76cgUCA2tpauru7L7mcPT09tLW1xbxesXT27NnL7usfv+PAlfT1pqamT3zNYAxFm5/f
      pn28j5//t6Oj4xP7+pgPAIA//elPlJWVAbB9+3agfwc4r76+nhdeeIGenh6A6K0qzp49y1//
      +lfa2tqorKy8ZFlHjx7ttzEZjaqrq3n55ZejHeX8ctbX1/PBBx/Q3NzM0aNHL/kZ5eXl0b9H
      43KWlpbyyiuvALBnz55om16srm+++Sb79+8HoKqqivb29uj0jo4O9u/f3+++VX8vEAhE19do
      XBdwLvRfe+01Dh8+DMDu3bsJhUJEIhE2btyIz+dj//79l6y/z+ejtrYWuHj/GQ1efvllSktL
      gUv39aamJp577rloSJzvAz6fj3feeYf29nYqKiouWdaxY8fo6+uLljEaHTt2jJdeein6/T2/
      nI2NjezYsYOWlhaqq6sHfP9VMQSUn59PTU0N06ZNA85t0N99910cDgezZs1i4sSJwLkN47p1
      6ygvL6egoIADBw4QCASYOnUqoVCI/Px8UlJSqK+vZ/fu3SQnJzNjxgz2799PR0cHq1evjpa5
      fft2+vr6cDqdrFixYiQWe0A1NTWsWLGCI0eOkJCQEF3OSZMmEYlEKCoqIikpiYaGBnbt2kVS
      UhJz585lz549+Hw+Vq1aFf2szZs3Y5omXq+XJUuWjOBS9Wez2ZgwYUK/L/fbb7+NaZo4HA5W
      rVqFYRg0NzdTUlJCU1MT4XCY0tJSPB4Pc+fOJRgM4vF4mD59enRD6XQ6mTdvHuXl5fT29pKR
      kcH06dMBOH36NPv27SMYDLJmzRo8Hs9ILf4Fjh8/zrJlyzhx4gRTp06NfmdnzpxJMBjE6/VG
      l/ONN97A4XAwZ84cDh8+TE9PDykpKRQWFgJw5MgRjhw5QjAY5JZbbhlVQxfjx4/n9OnT0TY5
      v0F3Op1Mnz6doqIiACorK7n99ts5ePAgkydP5sCBA/j9fqZPn04oFCIvL4/U1NR+fWDOnDns
      3buXjo4ObrzxxmiZO3fupKenB5vN1m/6aHDs2DE+85nPUF1dTUpKSnQ5J0+eTCQSYdKkSSQl
      JdHU1MQHH3xAQkICCxcuZNeuXXR2dl4dAWAYBvPnz2fv3r0AlJWVcdNNN+HxeNiyZQsTJ04k
      EolQW1tLeno6R48eZeHChRQXF0c33itWrOCjjz4iISGBzs5ObrvtNux2O11dXcTFxdHV1dVv
      l/L48ePMnj2bioqKUXV7i76+PhobG8nOzubIkSN88YtfpKioiBUrVmCaJi6Xi23btpGbm0tr
      aytr1qzB7XbT3d1NXFwcPT091NfXA+d++Z4+fZo5c+ZQXV09qgIAYMaMGezYsYPU1FR6enpw
      u90sX76cd999l0AggNvtZt++faSkpHD27Fl8Ph9Tpkxh/PjxZGZmkp2dzaFDh9izZw+LFy9m
      /PjxzJ07F9M0SU5OxjAMamtroxubgwcPkp2dzdmzZzl58mR0+kgzTZPy8nLy8/OjQ5QlJSVc
      f/31uFwu1q1bR2lpKXv27OHaa69l3LhxXHPNNZimyZkzZzBNk9ra2mgAHDp0iMLCQurq6mhs
      bBx1Z2otXLiQPXv2AFBRUcGKFStITk7mr3/9K0VFRf36+rFjx1iyZAnFxcWsXLkSgBtvvJE9
      e/bgdrvx+/2sXbsWl8t10T4A5zays2bNory8fFT19UAgQGNjIzk5OVRVVfHlL3+ZoqIiVq5c
      iWmaOJ1OduzYwbhx4+js7GT16tXEx8fT29uLx+MhEAhcHUNAALm5ubS3t9PX14fX66WpqYmO
      jo7or5e6ujqKi4vJysoiMTGR3t5eQqEQgUCAjo4ObDYby5Yto7W1lfj4eNra2ujp6WHPnj1M
      nTqVoqKifruBCQkJ5Ofns3Tp0pFa5Is6H0zZ2dm4XC6CwWB0Odva2vB4PCxfvpwzZ870W869
      e/cyefJkJk+eHF1Oh8OBx+MhPz+fa6+9doSX7EKGYTBz5kwOHTqE0+mku7ubYDBIT08Pdrud
      SCSC3++noKCAa665hqqqKhwOB93d3YTDYRobG5k1a1b0YsW2tjYCgQAtLS20tLSwYMGCfr9+
      ExMTSU1NZfbs2eTmXvn53rEWiUQwDIPc3FzmzZvHkSNHcDgcdHV1Rdt9/vz5uN1ubDYbZ8+e
      jU5vbGxk4cKFuN3u6Od5PB6ysrJYuHBhvws5R4usrCw6Ozvp7e2N9vXOzs7oabUNDQ0UFhaS
      mZlJWloaXV1d0T5w/njPsmXLaG9vx+Px0NraGu0DJSUlTJ48uV95CQkJTJgwYdT19ZMnTzJj
      xgyysrKIj4/H7/dHl/Ps2bPExcVxww030NDQgMfjoaWlhZ6eHvbt28ekSZOYMmUK9h//+Mc/
      HukF6erqwuPxXPHZEXa7ndTUVDIzM6MbhSNHjnDmzBkWL16M0+nE5/NRXFxMSkoKGRkZhMNh
      kpOTOXjwILm5uRw8eJDa2loWLlzI5MmTKS0tpaWlhWnTplFaWorT6SQvL4/ExES8Xi9paWlU
      VlZiGAbZ2dkxXiNXrru7m+LiYpKTk/F6vTidTpxOJ5WVleTl5bFv3z7q6+tZvHgxhYWFlJeX
      09jYyIwZMygtLcVut5OXl0dSUhJpaWl4PB6qq6txuVwxv4WHz+fD6/Ve0XttNhter5fMzEzC
      4TAFBQW4XC4OHjzI1KlTSUtLIxQK4fF4yMvLIz09Hb/fz6RJkygtLcXlctHR0UFlZSXZ2dlM
      njyZQCBARUUFubm5tLW10dzczIQJE6LXqJSUlFBdXU1rayt5eXmj5pzuvr4+0tPTycnJISMj
      g76+PoqKiti9ezder5czZ85QXV1NYWEh+fn5hMNhysvLycrKwufz0dDQwIQJExg3bhxut5vi
      4mLKy8vp6OggLy8vptfndHd3Ex8ff8XXQJzv61lZWUQiEWbOnMnx48epq6tjyZIl0b5eVFRE
      amoqGRkZBINB0tLSOHDgALm5uZSVlXHq1Cnmz59PcXExZWVlNDU1XdAHzvf1jIwMKisrMU2T
      nJwrv6gz1rq6uqJ9PTk5GbvdTlxcHOXl5eTl5bF//35Onz7NokWLKCwspKqqioaGBmbOnBk9
      jvL/AzYQt8yNa+N4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Elapsed Run Time (Minutes) - All Runs - 1 Vendor' width='384'>
      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
      uaj2iP8PHqfStRsyj64AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Elapsed Run Time (Minutes) - All Runs - 1 Vendor Comparison' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Elapsed Run Time (Minutes) - All Runs - 1 Vendor Comparison (2)' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Elapsed Run Time (Minutes) - All Users - All Vendors (All Platforms)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Elapsed Time (Minutes) by Thread Group - 1 Vendor' width='384'>
      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
      9f8DcJTZYgYrPzAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Elapsed Time (Minutes) by Thread Group - 1 Vendor Comparison' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXxU9b3/8dc5M5ksJJlsQBIgQCCACZuC7JuyiGCr1Vtr6723Ln201f7U
      altaW1ute7VWrW21162t1lYRRDZZBFEkEHYMSVhCNrKSZMg2+5xzfn/EHBhAIClZYD7Px8OH
      zMw3c77nk5PzPuv3KIZhGAghhAg5and3QAghRPeQABBCiBAlASCEECFKAkAIIUKUBIAQQoQo
      CQAhhAhREgBCiNPouk4gEOjubgTRNK3H9elC8Pv9dNfV+BIAQnSBiooKGhsbATh8+DBNTU0Y
      hsGRI0favVJbv349zc3NndFN07p169i2bZv5ura2lr1795r/1dTUsGzZsv94OoZhsGbNGlwu
      1znbrlq1it27d5uvGxoaqKysBKCyspKqqioAysvLcTqdZGdn43a78Xq9aJoGwNatW812p6qp
      qWHHjh3oug6Ax+Mx/+3z+di7dy87duzA6XSes6979uyhuLj4nO10Xed3v/sdfr/ffM/pdLJv
      3z7279+Pw+HoUDhUVFR85TKi6zorV67E7/dLAAjRFT777DPWrFmD1+vll7/8JevWrcPj8fC7
      3/0OXdcxDOOsQeDz+cwVwcaNG2lubg5aaei6HvT6TNqmA60rXq/Xe8aVi2EYZGdnc/nll5vv
      VVRUsGnTJn71q1/x6aefUl5ezooVK866p3DqFrthGOaK+OT3Pv74YzMATv385HZbt25l7Nix
      5ntVVVW89NJLALz88su8/PLLAPzhD3+gsbERh8OBruu8/fbb5OXlAZCTk0N1dfUZa/XWW2/x
      1FNPUVFRAcBLL71EZWUlhmHw8ssvs2LFCrZu3cqKFSvMnzn5ezRNM+u5b98+MwDOtudSVlaG
      3W4nLCzMfK+oqIhnnnmG1atXc88991BUVHTGn2377raQOtm7775LQUFB0HuBQADDMNB1nY8+
      +gifz4f1K79ZCHHBjBo1ivfee48pU6YwbNgwCgsLqa6upnfv3ng8Hn7+85/j9/sZOnQod911
      Fw8//DARERGMGTMGl8vFrl27sFqtPPLIIxiGwVNPPUV9fT233347I0aM4PHHH8cwDK6//nrG
      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
      yS+OyP8P/e9rbdKPLnYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='88' name='Error Messages' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAABYCAYAAAD83SBJAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAR8klEQVR4nO3da1ATVx8G8CdcA0iQe4MCCuIlAioVb7WMFq32gh0r7WA/tKLYobZeQGw/
      WKfVdrStFuuA0upY1LZWKTJKWx0ro0VxvCFeSECkIIQIkgSIiQkJhOT94GRfFhBBwIj7/804
      Q3Y3uycnm312z9mz8sxmsxmEEEI4x8baBSCEEGIdFACEEMJRFACEEMJRFACEEMJRFACEEMJR
      FACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJR
      FACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJR
      FACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJR
      FACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJR
      FACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJR
      FACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRdn1dQWFhYX+UgxBCyFPGM5vNZmsXghBC
      yNNHTUCEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRFACEEMJRfR4J
      TAgZfFpaWnDu3DlIpVJoNBo4ODhg+vTpmDBhAgDg+PHj0Gq1eOedd/ple+fPn0ddXR1iY2P7
      ZX2kf1g1AFQqFXJzc1FWVob//vsPMpkMAoEAAQEBeOWVV7Bo0SLY2bGLeOfOHWRmZj523TEx
      MYiMjByoopPngMFgwL///ouysjLU19fDYDDAw8MD3t7eEIlEiIyMhIODg7WL2e/UajW2bNmC
      xsZG1nShUIgJEyagtbUVx44dAwDExsaCx+P1aXttbW04cOAAsz7y7LBKALS2tuLQoUPYu3cv
      Hjx4wJqnUCigUChw9epVHDlyBD///DOGDBnCzJdIJDh+/Phjt6HT6SgAyCNJpVKkpaVBrVaz
      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
      2kEIIaRf/Q+jG50/1FGdkwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Performance &amp; Cost by Query' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3wUdf748dfWNNJ7JSShJAQIhCJdkKLRQ/QExAaiYLuT884vnuXA81T0
      EMtZEAQLiIgoIqLSCV2SkISElgAhIY0kZNM3W2d+f+SR+bkkaFBq8nk+Hnk8YHZn9jOzs/Oe
      T5nPWyXLsowgCILQ4aivdgEEQRCEq0MEAEEQhA5KBABBEIQOSgQAQRCEDkoEgHakoaHhahdB
      EITriAgA7YjZbL7aRRAE4ToiAoAgCEIHpb3aBRAEQfij0tLSWLlyJfn5+bi7u9OvXz+mTp1K
      YGDg1S7aNU3UAARBuK6dOHGCf/zjH5jNZiZMmEB8fDw7d+4kIyPjahftmidqAIIgXNdSU1PR
      6/W88soreHt7A00DIqxWK1VVVezfv5/ExESlNlBZWUlKSgpDhgzBYDCQl5dHXFwcO3fupLa2
      lhEjRtCjRw9kWaagoICMjAzOnTuHt7c3o0aNwtfXF4CMjAxsNhs2m41Dhw4RHh7OmDFjcHJy
      QpZljh07RkZGBpIkER0dTb9+/XB2dgYgNzeXXbt2YbfbGTp0KD179kSlUl3xY6d58cUXX7zi
      nypcFo2Njbi4uFztYgjCFVVcXMymTZtwcnKiS5cuuLi4oNfrcXZ2prGxkaeffhqj0ciQIUMA
      WLNmDUuWLGHSpEls27aN+fPn89NPP5GXl0dqaipbtmxhwoQJqFQqZsyYwbFjx6iqqmLz5s1s
      3bqVCRMmoNVqeeedd1i8eDGZmZmUlZWxdu1aiouLufHGG/n555+ZPXs2BoOBwsJC1q5dS/fu
      3YmIiCA1NZXZs2djMpkoLy9n+fLl9OzZk9DQ0Ct+7EQNQBCE69rIkSMZPXo0S5cuZfXq1QwZ
      MoR77rmHHj164O3tzejRo9m+fTuzZs3CxcWFHTt2MHToULy8vABwdXVl0aJFhIWFsWfPHp5/
      /nnKysqIiopi4cKFREREoNfrycjIYNasWeTk5NCnTx8Aevbsydtvv42zszPLly/nww8/ZNas
      WaSmphIQEMAHH3yAi4sL586dQ6/XI8syS5cuJTExkfnz56NSqZgzZw6ff/45AwYMuOK1ANEH
      IAjCdc3FxYX//Oc/LF26lHHjxpGSksKjjz5Keno6KpWKCRMmYDAY+Pnnnzlz5gwnT57klltu
      UdbX6/VERUXh5OREUFAQALIso1arMRqNvPXWW/ztb39j0aJFANTX1yvruru74+rqikajYcyY
      MajVagoLC+nVqxelpaU8+uijLF68GIPBgKenJyaTiYKCApycnNi0aRMbN27E2dmZM2fOYLVa
      r+yBQwQAQRDaAa1WS+/evZkzZw6fffYZHh4e/PjjjwB069aNXr168f3337Nz504CAgLo3bv3
      b27z+PHjPPHEE1itViZOnMjUqVN/9f12ux1ZltHr9dx444188MEHJCQksHPnTh5++GG2bduG
      JElIksSpU6fYtWsXu3btwmazMWDAACRJuiTH4mKIJiBBEK5rycnJBAQE0L17dzQaDc7Ozmg0
      GvR6PdAUHCZOnMirr75Kbm4uEyZMUDpjf82RI0fQarX885//RKvVcvr06Qu+V5IkfvzxRzQa
      DZ07dyY/P5/u3buTkJCA2Wxm1qxZ7N+/n5tuuomgoCACAgJ4+eWX0ev1SJJESUkJTk5Ol+yY
      tJUIAIIgXNeOHz/O888/T0hICIGBgRQUFGA2m7n99tuV9wwbNgxPT0+qqqoYM2ZMm7bbpUsX
      Ghsbee6559DpdBw+fLjFe9LS0njmmWeora3l0KFD3Hvvvfj5+fHhhx+SnZ1Nnz59sNvt5OXl
      cccdd6BSqZg+fTrz5s1j1qxZREVFcebMGcxmM59++ikajeaSHZe2EKOA2hExCkjoiOLi4oiN
      jcXJyQm9Xs+AAQN46qmniIqKUjpV9Xo9WVlZuLq6Mm3aNNTqptZvlUpFSEgI8fHxqFQqVCoV
      Hh4e9O3bly5duhAcHExJSQkBAQE8+eST+Pv7k5iYiIeHB1u3bgUgPj4eDw8P7rnnHu666y40
      Gg1xcXE4OTlRUVEBwD333MPNN9+MWq0mMjKSxMREbDYbFouFXr168eCDD+Lt7X3FO4FVIiNY
      +2EwGPDx8bnaxRCEa4rBYOD48eP861//4qmnnuK22267qPVlWaa6ulp5xqDZP//5TywWCwsX
      LrwqY/gvBdEEJAhCu/bxxx+zceNGRo0axbhx4y56fVmWqaqqahEAXFxc0Gqv70uoqAG0I6IG
      IAgt1dTUYLVa8fHxUZp+LoYkSeTn5xMVFdViuyqVCnd39+u2BiCGgQrCLxiNRkpLSx2G5BmN
      Roex321htVo5duzYb+ZokGUZg8HAsWPHlM7L32PPnj00Njb+rnXbO09PT/z8/H7Xxf+3tuvh
      4XHdXvxBBABBcHDkyBFee+01cnJylGVZWVmkpaVd1HZOnDjBF198wd69ex2Wb9myxSEoHDx4
      kOXLl5Obm8uOHTtYunTp7woChw8fxmKxXPR6Qsd2fTdgCcJlMGDAADZv3ky3bt1aDMuTZZmG
      hgbOnTuHl5eXMp3A+dLT07nrrrtITk7mpptuQqPR0NDQQE5ODt27d8dqteLm5sbevXu57777
      8PPzA6Curg6dTgc0PVhUU1ODJEl4eXmh1Woxm83U1tYiSRLe3t7KWPfzy1hdXU1tbS0BAQFi
      ZJhwQSIACMJ5AgMDcXJyIj09nQEDBji8dvLkSdatW0dkZCSFhYUMHz6c/v37OzQDWK1Wzp49
      y5QpU9izZw+VlZUEBASwb98+SkpK2LRpE3q9nlGjRuHq6sqRI0e44YYbcHJywt3dHWjK7vbl
      l19iNpvRaDRERUUxZMgQVqxYgU6nQ5Zl6urqmDlzpsNDTbIss2/fPjIzMwkODiY/P58ZM2Zc
      MFAJHZsIAIJwHpVKxdixY1m6dKnDlAHNT3tOmzaNgIAAGhsbWbhwIYmJiQ4BIDc3l8jISLRa
      LQkJCWRkZDB+/HjGjh1LXl4ekyZNUi7Id911F99++y0///wz8fHxjBgxAnd3d9LT0/Hw8GDi
      xIkA2Gw2NBoNDzzwADqdDrvdzpo1aygoKKB79+7KZ1utVvbu3cvf/vY3dDodBw8eZPfu3fzp
      T3+6QkdPuJ6IACAIrfD09KRnz57s27dPaUKx2+1YrVYCAgIAcHZ2xt/fn5qaGochgunp6Tg5
      ObF//35qa2s5fPgwY8aMafUpT29vbx588EGqq6s5cOAAS5Ys4YknniA/P58bbrhBCSzNF/29
      e/eSm5uLRqOhpKSE+Ph4h+3V1NTQ2NjIli1bgKYO7JqamstyjITrnwgAgtAKlUrFyJEjee+9
      90hMTESj0aBSqZAkCbvdrlzMGxoaHJpgrFYrRUVFjBgxAmgKJLIsc+7cOQIDA1GpVDSPvJZl
      WZl10tvbm/Hjx1NQUIDBYMDV1bXFyKPTp0+Tl5fH9OnTcXJy4qeffmpRbicnJ1xcXBxqLm2Z
      90bomMQoIEG4AFdXVwYPHszOnTsB0Gg0REZGsm3bNhoaGsjMzFQSjzTLzc0lOjqaIUOGKH+D
      Bw8mMzMTaLrjP3r0KHV1dZjNZlatWsXRo0eprq4mJyeHuro6PD09SUhIYOvWrZSUlFBRUcGJ
      EyewWq1otVpsNhsnT57k0KFDLcrs5uaGs7Mz5eXleHt7YzabOXny5JU5YMJ1R8wF1I6IuYD+
      OJvNhqurqzIqJzg4mJqaGmJiYvDz8yMmJobjx4+ze/duGhoamDx5ssMsjiUlJXTr1g1PT09l
      maenJwaDgYiICEJDQ0lJSSE9PZ2wsDCCgoLIyMggNTWV2tpa/vSnP+Hj44Onpyc+Pj7s3LmT
      nJwcIiIiiImJobi4mN27d1NfX098fDzBwcF4eHjQ2NhIeHg4er2eHj16kJ6ezoEDB6ipqSEh
      IYFOnTpd8WPZXlxoKoj2QDwJ3I6IJ4EF4dK70JPA7YFoAhIEQeigRAAQBEHooEQAEARB6KBE
      ABAEQeigRAAQBEHooEQAEARB6KBEABAEQeigRAAQBEHooEQAEARB6KBEABAEQeigRAAQBEHo
      oEQAEC655pSJv0ys3lFYLBasVuvVLsY1wW63s3btWgwGw9UuSpvU19fz1VdfYbPZrnZRWiXL
      MlVVVVRXV1+ybYp8AB2IzWZj8+bNHD9+HGdnZ4YPH06vXr0uejsGgwEvLy/U6pb3DykpKezZ
      s4ewsDBuu+02XF1dL3r7siyTnZ3Nli1bsNlsREdHM2HChFbz314usixz8OBBkpOTsdvtxMbG
      kpSUhFb76z+Z3bt34+vrS0JCwu/+7H379nHkyBFUKhXu7u7069ePrl27/u7tARQVFbWaP2DQ
      oEEEBwezd+9ebr/9dofMZn9USkoKGo0Gb29vqqurWbNmDcOGDSM2NlZ5T11dHatXr2bgwIH0
      7t2bo0ePUlVVxdChQ3/XZzY0NKDRaH5XDgQ3Nzc8PT3ZvXs3o0aNuqh1q6ur+f7776moqMDH
      x4ekpCQlcVBb2e12amtrW511VJIkVq9eTW1tLVFRUYwdO/aitv3Lz9i8eTPZ2dmoVCpRA+go
      ZFlmxYoV2Gw2Zs6cyd133/27f+xffvkljY2Nrb6Wnp7Offfdx+TJk3/XxR+a5tTfuHEj06dP
      Z/bs2XTq1InPP/+cKzlxbWZmJvv27eOhhx7ir3/9K5IksWbNmt9cT5KkP1zOgoICBg0axF13
      3UW/fv1Yt24deXl5f2ibgYGBTJo0iUmTJlFRUcEdd9zBpEmT6NatG+7u7iQmJv6h7Z/PbDaz
      b98+brrpJlQqFSaTicrKSnbt2uXwvoyMDKqqqjh79iwAISEhdOvW7Xd/bnPGtN9DpVIxYsQI
      UlJSMJvNbV6vsbGRDz74gJ49e/LYY48xcuTI31ULrK6uZt26da2+ZjQaKSsrY+bMmb/74g/w
      /fffU1tbyxNPPMGsWbNEPoD25NfyAZSWlpKens4DDzygZI1qvkOprq5m/fr17NmzB6PRSFhY
      GGq1mpKSEjZs2MDBgwcxGo2EhISwdetWsrOzqa6uJjc3l+DgYJydnZEkiS1btpCdnU19fT35
      +flERERQUVHBd999x4EDB1CpVAQFBaFSqcjIyMDNzY3s7GzS09OVH70sy3z11VfceeedBAcH
      o9VqiY6OZtu2bfTo0QO1Ws3BgwcJCwsDmu5sm++6zGYzmzZtIjk5maqqKiIiIlCr1aSkpODl
      5UVKSgonT56ksrIStVqtzJFfVFREYWGhcjzsdjtff/01kydPxt/fH51OR0xMDD/99BN9+vRB
      pVKxd+9e8vPz2bp1K6dOnaJr165oNBry8vJwdXXF09OTvXv3EhERoQTa5ORkgoKCfrMWcfjw
      Ybp06UJISAi+vr5otVqKi4uJiYkhOzsbnU6Hi4sLkiSxd+9ewsPDKS8v59ixY2RlZbF9+3YM
      BgNRUVHKZzffFTs7O7N//34lIb1Wq8VisZCXl0dYWBi1tbWkpKRw5MgRtm/fjtFoxGAwsHnz
      Zo4cOUKXLl1wcnKivr6eH374gT179tDY2EhYWJjDDUVeXh5VVVUMGDAAaGpeKS4uxmw206NH
      D5ycnJAkiQ0bNtC7d29kWSY6Opqqqipqamrw9fWlsLCQU6dOkZaWRnJyMkajkYiICKqrqzl5
      8iSBgYEA5OTkYLPZKCgoYN++fZw9e5bCwkIkSSIgIID8/HzWr19PRkYGHh4eeHt7I0kSqamp
      bNmyhePHj9OpUye8vLzQarWUlpYiyzJBQUHKOflr+QB27txJUFAQw4YNQ6fT4e3tjYeHBwAn
      T55k/fr1pKen4+rqiq+vLwCHDh1i06ZNHD16FCcnJ/R6PT/++CMnT56kqqqK/Px8oqOjUalU
      1NXVsWHDBgoKCqipqaGiooKIiAiysrLYsGEDR44cwdfXFw8PD+WcCAwMZNu2bVRXVxMSEgKA
      yWTiu+++46GHHsLFxQVnZ2dRA+gozpw5Q1xcXIu7frvdzscff0z37t2ZOnUqRUVFyl3aqlWr
      6N+/P7fddhuyLGOz2ejduzfe3t4kJiYycOBA3NzcgKa7p969e+Pj40O/fv1ITEzEarXy+eef
      M3jwYO68805SUlI4fPgwAEeOHOGbb77h8OHDDnltm9s5w8PDlWUqlYro6GjOnj2LxWJRsmsB
      lJWVkZ+fD8C3336Lu7s79957L/X19Uomr/T0dFatWkVpaSndu3dHo9GwdetW5fOSk5MdmrOs
      Vitms1m5wEDTBTQ8PJyKigqsVis//PADOp2OO+64A7vdTkZGhsNxdXFxIS0tjfLycgAqKys5
      dOgQOp3uor43u91OXl4e/v7+QNPFrrkNWJZlUlNTkSSJc+fOsXnzZkJDQ/nzn//MsWPHKC0t
      bdNnNDY2kpWVBTQ1oSQnJxMREcEdd9zBtm3bKCkp4ZZbbqFTp07K561evZrw8HCmTp1Kfn5+
      i/3Py8tzSFYPoFariY+PJzs7G2jKX6xWqx2S55SVlXH69GmgKbnOtm3biImJ4c4772T//v3U
      1dVRU1PD8ePHHT6rvLycsLAwwsPD6datGwMGDCAsLIyqqirWrl3LuHHjuOWWW/j222+pqamh
      qKiIlJQU/vSnP3HDDTdQVVUFNJ1r3bp1U8rQFvn5+fTq1avFb6usrIxvv/2WcePGkZSUxA8/
      /EBxcTEVFRUkJyeTlJTEiBEjqKmpwdnZmd69e+Pv78+AAQNISEhQtufs7Ey/fv3w8fFhwIAB
      xMXFkZOTw65du7jjjjsYPnw4K1asoL6+HlmW2bt3Lx9//DEAXbp0UcpTWVlJcHCwwzkoAkAH
      caHawdmzZ/H29qZ37954eHgwYcIEsrKykCQJjUZDWVkZWq2WIUOG4OTkRFBQEM7OzoSEhBAW
      FqacTM139y4uLgQHBxMSEkJeXh5xcXFER0fj6+vLbbfdxsGDB4GmphJ3d3ceeOABIiMjW5Tr
      /B+Tk5PTr1bLbTYbJSUl9O3bF41Gww033EBubi6yLGM2m4mMjOTPf/4zoaGhxMXFcfbsWaqr
      qzEajZSXlxMTE6NsS5Ik1Gq1QxlUKhV6vV4pQ+fOnRkyZAi+vr5ER0djNBpblH/EiBHs3r0b
      WZY5dOgQCQkJrSaGb8369etZvHgxb731Fnq9nj59+vzmOn379qV37974+fkRFhaGyWRq02ed
      r0uXLsTHxxMQEEBwcDDDhg0jICCA6OhoTCYTtbW1mEwmevbsiVarZejQoUoAaVZVVdVqcqKE
      hAQllWVmZib9+vX71bIMGjSI2NhY/P39CQwM/NVzwNPTEw8PD/z8/AgPD8fT05OcnBx69uyJ
      l5cXnp6edO3aldOnT6PVajEajcpFsW/fvsp2fHx8Lqrj+kK/raysLIYPH05ISAhBQUGMGjWK
      zMxMNBoNJpOJiooKfH19GTBgADqdjqCgIFxdXQkPDyc4OFg5/3Q6HcHBwbi4uBAeHo6fnx8Z
      GRkkJSXh6+tL586d6devH8eOHQOa+lWGDh3KuHHjlBoHNA1Q0Ov1Due16ATuIPz8/Dh69GiL
      5UajEXd3d+WkcHV1xWazIUkS06dPZ9++faxcuRJXV1emTp16UZ1rDQ0NSlUYwN3dXek70Gg0
      DB48uEVHskqlQqvVtvhRlZeXO9QUzmc2m6mqquKbb75Rlvn6+iLLMs7OzgwYMED5LCcnJ/r0
      6cPBgwfx8vKiW7duDndFOp0OSZIwm81KukdZlqmsrGy1GeBCfSkJCQlKM0p2djbTp0+/YPnP
      N2bMGIxGIzt37mTs2LG/2Wx0JVksFs6ePcvq1auBpmPTXENpplarWx0F5uHhgVarpbKykqNH
      j/Lggw+2el5eKg0NDWRlZSm1IZvNRkxMDMHBwdx5552kpaWxfv16Bg0axPDhw4H/fwPQVn5+
      fpSUlLQ4NxoaGpSmSmja95MnT+Lj48Pdd99NamoqGzdupFevXowZM+ai9quxsVFpwlSpVHh4
      eCg3Id7e3q3WSLy8vKisrHTYv2vnrBIuq27duvHtt99SXl6utHWbzWYCAgIoKCjAZrOh1Wop
      KCjA09MTtVqNXq8nKSkJSZL44osvKCoqUu6U2zJULjg4mOTkZIYPH45KpVL6DJpd6MLZu3dv
      tm/fTlJSEiqVioqKCs6ePUtISAgmkwm73Y4sy6hUKuWO0NXVFS8vLyZOnIiXlxeyLFNfX9/i
      Tr7ZwIEDWbp0KZ06dWLChAkOr2m1WqKioti3b58yGqS4uJiamhoCAgIu2AF+Pr1eT+/evdmw
      YYNyd9pWrq6uxMfHo1arWbZsGTNmzMDT0xOVSoXdbgeavoOrMWSxU6dO+Pj4KB39sizT0NDg
      8B4fHx8qKytbrKtWq+nTpw87duzA1dX1dw8UaD4GsixjsViU5TqdzuH7CQwMJDw8nClTpqBS
      qbBardjtdsxmM126dCE6Opq6ujqWLFmiBIBz58453Dn/lgEDBrBhwwaio6OV/jCbzUZISAg5
      OTn06NHD4fy3WCyEhoYSGRmJyWRi0aJFDBs2DLVajcViUc7tXxMYGMipU6cIDAxElmVyc3MZ
      PHiw8npr63t5eWG32x3SW4oA0EHo9XqmTJnC0qVLCQsLw2KxEBAQwIQJE4iNjWXJkiWEhYVx
      /Phx7r77bux2O59++im+vr6o1WrKy8uVNvGYmBhWrlxJQEAAN9100wU7xzp37oyTkxOffPIJ
      Xl5enD59mhkzZvxqOVUqFTfeeCOffPIJS5cuxcvLi/T0dCZNmoRWq8XNzY36+nq+/PJLTCYT
      xcXFDB48GJVKxejRo1m6dCmdO3emtrYWLy8v/vznP7f6OR4eHoSGhlJWVqZ09v2yDGPHjuWz
      zz7j9OnTuLq6cvr0aaZMmXJRd4YAQ4YM4aWXXuKhhx5q86grlUql/PXv3x9Zllm2bBkPPfQQ
      kZGRrFu3jsjISMrKyi7ZmPALle385SqVChcXF/r378+HH35IREQEBoOBzp07M378eOV9Xbt2
      ZevWrQwZMqTFduLj41mzZg3333//RZWlmZ+fH3l5eXz11VfU1tZSWFiotHV37dqVL774gpKS
      EqKjo4mLiyM1NZWlS5fi6elJWVkZt956KzabjU2bNhEREcG5c+eUZkhZljl27Bj9+/f/9QP2
      C9HR0cTGxvLOO+8QHh7OuXPnuOmmm0hISODgwYOsWrUKtVpNZWUlM2bMoLy8nG+//Vbp0Pbz
      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
      gAG89tprvPHGG7i6uiLLMt999x0333xzq7kvZFlmwYIF/O1vf6NHjx6YTCZeeuklunbtiru7
      u8OMofX19R0iwcjVcKFjLcsy7733Ho8++ijx8fE0Njby2muvERMT49AEpNVquf3227nrrrtQ
      qVQkJSWxYMGCDnGTe1E1gG3btiFJkkP7qCBcryRJUpp+NBoNgwYNwsfHh6qqKqApUcjPP//M
      +PHjL7iNoqIiunfvjkqlwsXFhe7du3Pq1Cm6dOnCoUOHlPdlZma2y8nErgXnH+tDhw7RpUsX
      GhsbMRgMdO3aFbVajZubG9HR0eTn5zus361bN4f1O1Kg1rz44osvnr/Qbre3yH5kNpt57bXX
      uPXWW0lMTHSY+la4NpjNZtEvcxGa79jz8vLIy8ujqKiI6upqbr31VtRqNWvXriUqKoq+ffs6
      rPfdd99RXV1NWFgYBQUFpKam4unpyeHDh9mwYQP33XcfUVFRLFmyBB8fH44dO8aBAwe4//77
      O1wn46V06tQpTp06RW5uLmfOnMHV1RW73U5MTAzLly/H1dWV06dPs337diW1Z05ODpmZmbi7
      u5OVlcWmTZuYMmUKTk5OLF68mLCwMMLDw9m7dy+FhYU4OzuzevVq4uLiiI+PB5pqevX19e1y
      WGibA0BdXR16vZ5bb71VpIK8RokAcHG0Wi2DBg0CIDs7m+HDh3P33Xej1+uRJAmDwcDIkSNb
      nO91dXX4+Pjg6+tLYmIiDQ0NpKWlYTabefjhhwkMDMTV1ZX4+Hj2799PfX09M2fOxMvL62rs
      ZruRk5NDQUEBGo0GPz8/qqurcXFxITIykj59+pCSkkJVVRUzZszA398flUpFv379lO/HarUy
      ffp0QkJCgKZnBzp37oybmxsDBw4kPz+fgwcP0rNnT+UmANp3AGg1H4DZbG6X8160d+d3PApt
      98EHH/D4449f7WII1yBJkigtLW3xEGB7IKaCEASa8sAKQkfT6iig5vG0wvVFrVaL7+13EpnU
      hAtpbgpqj7+tVgPA+Q/DCNeHxsZGXFxcrnYxBKFdkSQJjUbTLn9boglIEAShgxIBQBBoyoIn
      CB3NRQcAu93eIjWa3W6ntraWhoaGFsNHBeF6sGLFihbnrizL1NbWUldX95vndWNjI5WVldhs
      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
      66+/zvbt25WJK8+fDlqn0xEXF8f27dtZvHgxjzzySIeZDfQPTwXRv39/JVGGxWLhueee4/vv
      v//NuyVBuBY4OzszZcoUKisrGTlyJAsWLODNN9/Ezc2NJ554gscee4yioiIWLlzIzJkz6dWr
      V6vb+eKLL7j77rtRq9VIksSbb77J4MGDSU5OpqysjJKSEvbu3csNN9yARqO5wnvZ/v3www9s
      3LiRf/3rX4SHhys3rI899hhpaWmcOXOGyMhIYmNjW0wL4ePjw+OPPw401fp2797NqlWrmDNn
      zhXfjyvtDw8DPXXqFCaTCZVKhU6nw9XV9VKUSxAuO7vdTn19PSqVCpVKRc+ePfH396empgZo
      qiFoNBo6d+7MmDFjOHLkSKvbKS0tpaCgQBnlI8syd9xxB/7+/srUxJIkKTPmCpdWXl4eP/30
      E6+++ioREREOrRUajYZBgwYxadIkevXqRUVFRYv5fhobG5W+H5VKpXxvHUGbawDvvvsulZWV
      HD16FK1WS2VlJePGjSMrK4vNmzcTGxtLbW0tJ0+e5L///e/lLLMgXBIWi4V58+YREhJCYWEh
      7777Lnq9Hl9fX1588UViY2Pp0qULNTU1rF+/nmeffRaA1atXExwczIgRIwBYtWoVkydPVtr+
      NRoN48ePVz7n1KlTlJaWMnLkyCu/k+3IkSNHKCsrIy8vj4KCArZv3054eDipqan4+/uze/du
      5b3h4eH06tWLnTt3IkkSrq6urFu3jvHjx+Pm5obVauXtt99m6tSpHD9+nOTkZEaMGIFOp2P1
      6tU89NBDV3FPr5xWp4M2m80tOkJ27drVou2sR48ehIeHk5GRQW5uLjqdjsGDBztUwYQrp6am
      RsxKeRFkWcZisZCTk8PKlSu555576NmzJxqNhurqavbv38/Zs2dxd3dnyJAhhISEoFKpyM7O
      xt3dXZkvPjk5meHDh1+waaeuro78/PwLNh8JbZORkUFpaanDssjISDQaDadOnXJYHhERQXx8
      PGfOnGHXrl00NDSQmJhIYmKi8nzA/v376d27N506dSI3N5esrCysViuDBg0iOjpauYZJkkRp
      aWmLXMLtQZsDgHDtEwHg91u0aBGPPfbY1S6GcA1qzwFATAUhCMC0adOudhEE4YprtQ9ArVa3
      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
      448/6Nq1K2+88QbLli2jefPm5OXlcffuXbM+a9mLU7t2bXr37o3JZOLevXts3bqVuXPnUrt2
      bbp27cpnn32Gj48PaWlp0vkpil6v59dff2XmzJmlXIOyU6wGQKlUMnv2bK5du0ZKSgqVK1dm
      6dKluLq6sn37dtzd3Zk/fz4Aixcv5qeffmL27NklWnCZ7EVQqVS0bt2aq1evMmTIEL788kt8
      fX2xs7MjIyNDCmqYkpJC/fr1zfYtaABat25NcnIyrq6uZGdnS5mnFi5cyNOnT6latSrOzs4V
      5q6ytDk5OdGzZ0/ptZeXF6dOnWLs2LEMHDiQtm3bkpycjLOzMzqd7pk3qFeuXMHT07NCDdYX
      expoVlYW7dq1o3fv3jx58gRPT09cXFykuNkFAysKhaLCxNKWvdoMBgOPHj2SBnerVauGvb09
      BoMBb29vaWaIXq/nxo0bNGzYUHr955Xynp6etGjRAktLS9LT03F1dUUURRwdHfHz88PDw4Pr
      16/LWfJKSHx8PDqdTnqdl5eHtbW19Lp69er4+fmhUCjIyMiQBogLwkRD/nfhl19+YdiwYaVe
      /rJU7Gmgy5YtIykpCYCMjAz+/e9/Y2VlxeDBg/niiy/48MMPpfyqBU8DMtnLTBAEdu/eTXp6
      OklJScTHx9OoUSNcXFzo1asXn332Genp6cTExNC4cWPpDn7z5s14eXnRu3dv9u/fj1qtxtbW
      losXL/LOO++gUqkICwvj999/x8PDg2vXrtGpUydcXV3LuMavtpMnT/L48WMSExNJSkrihx9+
      oFmzZqSlpXH69GkaNmyITqcjPDycefPmAbB//36Sk5OxtbXl8uXLjBo1ikqVKqHX65k3bx6T
      Jk2iTp06hIWF4ejoSO3atcu2kqWsyHDQOp2u0JQ3tVotzYLw9vY2+zKnpKTw8OFDRFGkYcOG
      hTLuyEpHRkYGVatWLetivFIEQSAlJYWNGzcyduxYXFxcpFDA6enp3L17lypVquDj4yOtbUlO
      TqZSpUo4ODiQmZnJvXv3yM7OxsfHBw8PDxQKBTqdjvv376PRaKhZsyYNGzaUw0E/p8TERLKy
      ssy2OTg44OzsTHJyMk+fPkWpVOLt7S2lfSw4P7m5uXh7e+Pp6Qnk91jExMTg5uaGlZUVKSkp
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 17' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
